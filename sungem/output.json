[
  {
    "Modulname": "Mentorensystem",
    "Modul Nr.": "20-00-0000",
    "Kreditpunkte": "0 CP",
    "Arbeitsaufwand": "h",
    "Selbststudium": "h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "In wöchentlichen Gesprächen zwischen einem erfahrenen Studierenden aus höherem \nSemester (Mentor_in) und einem Studierenden im ersten Semester (Mentee) werden \nfolgende Inhalte thematisiert: \n- Selbstorganisation zu Studienbeginn \n- Orientierung in Bezug auf die Anforderungen des B. Sc. Informatik \n- Nutzung von Lerngruppen \n- Lernen an der Universität und Reflexion des Lernstandes \n- Teamarbeit im Studium \n- Umgang mit Prüfungen und Prüfungsvorbereitung \n- Organisation und Strukturierung der Prüfungsphase",
    "Qualifikationsziele": "Das Mentorensystem zielt darauf ab, dass die Studierenden ihr Studium selbstorganisiert \nstrukturieren und planen, sodass sie zielorientiert studieren. Die Studierenden sind am Ende \ndes Moduls in der Lage die Grundstruktur des Studiums zu erkennen sowie die \nAnforderungen der Studienfächer abzuschätzen und dementsprechend ihr Studium zu \noptimieren. Weiterhin sind sie in der Lage verschiedene Vorgehensweisen beim Lernen an \nder Universität zu reflektieren und auf ihr eigenes Lernverhalten zu übertragen.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Studienleistung",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "bnb \nModulhandbuch B. Sc./M. Sc. Informatik  6",
    "Verwendbarkeit": "B. Sc. Informatik",
    "Literatur": "Die Materialien zum Mentorensystem werden über den entsprechenden Moodle-Kurs \nbereitgestellt."
  },
  {
    "Modulname": "Funktionale und objektorientierte Programmierkonzepte",
    "Modul Nr.": "20-00-0004",
    "Kreditpunkte": "10 CP",
    "Arbeitsaufwand": "300 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Essentielle Kompetenzen in wissenschaftlich basierter, problemorientierter Entwicklung von \nSoftwaresystemen. Vermittlung grundlegender Begriffe der Informatik, sowie Entwicklung \neinfacher Programmierfähigkeiten. Verstehen der Bedeutung von Abstraktion und \nModellierung in der Informatik. \nThemenschwerpunkte sind: \n● Grundlegende Programmierkonzepte  \n● Grundlagen der funktionalen Programmierung \n● Grundlagen der objektorientierten Programmierung  \n● Entwurf einfacher Softwaresysteme \n● Einfache Typsysteme \n● Grundlegende Datenstrukturen und Algorithmen und ihre Komplexität \n● Rekursion \n● Einfache Ein-/Ausgabe \n● Grundlagen des Testens \n● Dokumentation von Sourcecode",
    "Qualifikationsziele": "Nach erfolgreichem Abschluss der Veranstaltung sind Studierende mit den Grundlagen von \nfunktionalen und objektorientierten Programmiersprachen vertraut und die Studierenden \nkönnen die folgenden Aufgaben bewältigen: \n● einfache Programmieraufgaben mit Hilfe von funktionalen und/oder objektorientierten \nProgrammiersprachen systematisch lösen; \n● Qualitätssicherung mittels einfacher (Unit-) Tests durchführen; \n● die Komplexitätsklassen von Algorithmen und Datenstrukturen verstehen und darauf \nbasierend die Eignung selbiger für konkrete Aufgaben einschätzen; \n● Sourcecode grundlegend unter Zuhilfenahme von Standardwerkzeugen dokumentieren. \nModulhandbuch B. Sc./M. Sc. Informatik  8",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich 120 min. \nStudienleistung schriftlich/mündlich \nDas erfolgreiche Bestehen der Studienleistung ist  Zulassungsvoraussetzung zur \nFachprüfung. \nStudienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, \nVorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren \nLeistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen \nBereichen erzielbaren Leistungen erforderlich sein.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nB. Sc. Computational Engineering \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● How to Design Programs; M. Felleisen et al.; The MIT Press Cambridge \n● Structure and Interpretation of Computer Programs; H. Abelson et al.; Springer \n● Thinking in Java; B. Eckel; Prentice Hall \n● Christian Ullenboom: Java ist auch eine Insel; Galileo Computing"
  },
  {
    "Modulname": "Digitaltechnik",
    "Modul Nr.": "20-00-0900",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Digitaltechnik: digitale Abstraktion und ihre technische Umsetzung, Zahlensysteme, \nLogikgatter, MOSFET Transistoren und CMOS Gatter, Leistungsaufnahme \n- Kombinatorische Schaltungen: Boole’sche Gleichungen und Algebra, Abbildung auf Gatter, \nmehrstufige Schaltungen, vierwertige Logik (0,1,X,Z), Minimierung von Ausdrücken, \nkombinatorische Grundelemente, Zeitverhalten  \n- Sequentielle Schaltungen: Latches, Flip-Flops, Entwurf synchroner Schaltungen, endliche \nAutomaten, Zeitverhalten, Parallelität \n- Hardware-Beschreibungssprachen: Modellierung kombinatorischer und sequentieller \nSchaltungen, Strukturbeschreibungen, Modellierung endlicher Automaten, Datentypen, \nparametrisierte Module, Testrahmen \n- Grundelemente digitaler Schaltungen: arithmetische Schaltungen, Fest-\n/Gleitkommadarstellung, sequentielle Grundelemente, Speicherfelder, Logikfelder",
    "Qualifikationsziele": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die Konzepte und \nGrundelemente der digitalen Logik sowie ihre technologische Realisierung. Sie können diese \nKenntnisse selbständig anwenden, um zielgerichtet kombinatorische und sequentielle \nSchaltungen zu konstruieren und in einer Hardware-Beschreibungssprache zu \nimplementieren.  Sie können digitale Schaltungen bezüglich funktionaler und nicht-\nfunktionaler Eigenschaften analysieren.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich 90 min. \nStudienleistung schriftlich/mündlich \nModulhandbuch B. Sc./M. Sc. Informatik  10 \nDas erfolgreiche Bestehen der Studienleistung ist  Zulassungsvoraussetzung zur \nFachprüfung. \nStudienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, \nVorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren \nLeistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen \nBereichen erzielbaren Leistungen erforderlich sein.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, ein Beispiel für die verwendete \nLiteratur könnte sein \nHarris/Harris: Digital Design and Computer Architecture"
  },
  {
    "Modulname": "Mathematik I (für Informatik und Wirtschaftsinformatik)",
    "Modul Nr.": "04-00-0118/de",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "h",
    "Selbststudium": "h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Grundlagen: Relationen, Abbildungen, Gruppen, Ringe, Körper, komplexe Zahlen; \nLineare Algebra: Vektorräume, Basen, Skalarprodukte, lineare Abbildungen, lineare \nGleichungssysteme, Basiswechsel, Determinanten, Eigenwerttheorie; \nAnalysis in R: Folgen, Konvergenz, Asymptotik, Reihen, Kompaktheit.",
    "Qualifikationsziele": "Nach Abschluss des Moduls können die Studierenden: \n- mit abstrakten Begriffen präzise umgehen, Beweise nachvollziehen, Beweisideen erläutern \nund auch selbstständig Beweise führen, \n- die axiomatisch-deduktive Vorgehensweise der Mathematik verstehen und anwenden, \n- die vermittelten Kenntnisse und Begriffe aus zentralen Gebieten der \nMathematikgrundausbildung beherrschen, so dass sie diese für die verschiedenen \nAnwendungen in der Informatik nutzen können. \nDie Studierenden sollen \n- mit mathematischer Methodik und Fachkultur vertraut sein. \n- in der Lage sein, aufbauend auf das vermittelte Grundwissen Mathematik, weitere \nmathematische Inhalte selbstständig zu erarbeiten.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich 90 min. \nStudienleistung schriftlich/mündlich \nModulhandbuch B. Sc./M. Sc. Informatik  12 \nDas erfolgreiche Bestehen der Studienleistung ist  Zulassungsvoraussetzung zur \nFachprüfung. \nStudienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, \nVorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren \nLeistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen \nBereichen erzielbaren Leistungen erforderlich sein.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Skript der Veranstaltung"
  },
  {
    "Modulname": "Automaten, formale Sprachen und Entscheidbarkeit",
    "Modul Nr.": "04-00-0120/de",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "h",
    "Selbststudium": "h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "n und Entscheidbarkeit Modul Nr. 04-00-0120/de Kreditpunkte 5 CP Arbeitsaufwand h Selbststudium h Moduldauer 1 Semester Angebotsturnus Wintersemester",
    "Lerninhalt": "Einführung: Transitionssysteme, Wörter, Sprachen; Mathematische Grundbegriffe und \nelementare Beweismethoden; Endliche Automaten und reguläre Sprachen; Determinismus \nund Nichtdeterminismus, Abschlusseigenschaften und Automatenkonstruktionen; Sätze von \nKleene, Myhill-Nerode, Pumping Lemma; Grammatiken und die Chomsky-Hierarchie; \nkontextfreie Sprachen, Abschlusseigenschaften, Pumping Lemma, CYK Algorithmus; \nBerechnungsmodelle: Kellerautomaten, Turingmaschinen; Entscheidbarkeit und \nAufzählbarkeit in der Chomsky-Hierarchie",
    "Qualifikationsziele": "Die Studierenden lernen elementare Techniken und Methoden der diskreten Mathematik im \nUmfeld von formalen Sprachen und Automaten kennen und anzuwenden; sie lernen, \nendliche Automaten als Beispiel eines fundamentalen Berechnungsmodells operational und \nsemantisch zu interpretieren und zu analysieren. \nSie verfügen über die notwendigen Grundkenntnisse, Grammatiken und formale Sprachen \nim Rahmen der Chomsky-Hierarchie und zugehöriger Berechnungsmodelle einzuordnen und \nzu analysieren.",
    "Vorraussetzungen": "keine",
    "Prüfungsform": "Fachprüfung schriftlich 90 min. \nStudienleistung schriftlich/mündlich \nDas erfolgreiche Bestehen der Studienleistung ist  Zulassungsvoraussetzung zur \nFachprüfung. \nStudienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, \nVorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren \nModulhandbuch B. Sc./M. Sc. Informatik  14 \nLeistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen \nBereichen erzielbaren Leistungen erforderlich sein.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "Pflichtveranstaltung in Informatik-Studiengängen \nBestandteil des BSc-Mathematikmoduls „Formale Grundlagen der Informatik“",
    "Literatur": "Schöning: Theoretische Informatik --kurz gefasst \nHopcroft, Motwani, Ullman: Einführung in die Automatentheorie, formale Sprachen und \nKomplexitätstheorie \nWegener: Theoretische Informatik --eine algorithmenorientierte Einführung \nSkript (elektronisch unter [url=http://www.mathematik.tu-\ndarmstadt.de/~otto]www.mathematik.tu-darmstadt.de&#47;~otto[/url])"
  },
  {
    "Modulname": "Algorithmen und Datenstrukturen",
    "Modul Nr.": "20-00-0005",
    "Kreditpunkte": "10 CP",
    "Arbeitsaufwand": "300 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Datenstrukturen: Array, Listen, Binäre Suchbäume, B-Bäume, Graphenräprentationen, \nHashtabellen, Heaps \n- Algorithmen: Sortieralgorithmen, Stringmatching, Traversieren, Einfügen, Suchen und \nLöschen bei bestimmten Datenstrukturen, Kürzeste Wege Suche, Minimal Spannende Bäume \n- Asymptotische Komplexität \n- NP-Vollständigkeit \n- Algorithmisches Strategien: Divide-and-Conquer, Dynamische Programmierung, Brute-\nForce, Greedy, Backtracking, Metaheuristiken",
    "Qualifikationsziele": "In dieser Veranstaltung lernen Studierende grundlegende Datenstrukturen und Algorithmen \nsowie die Komplexitätsklassen P, NP und NPC kennen. Sie erwerben die Fähigkeiten die \nGrundprinzipien der Algorithmik anzuwenden und asymptotische Komplexität \neinzuschätzen und zu bestimmen. Außerdem verstehen sie bedeutende algorithmische \nStrategien und können diese anwenden.",
    "Vorraussetzungen": "Empfohlen: Funktionale und objektorientierte Programmierkonzepte",
    "Prüfungsform": "Fachprüfung schriftlich 120 min. \nStudienleistung schriftlich/mündlich \nDas erfolgreiche Bestehen der Studienleistung ist  Zulassungsvoraussetzung zur \nFachprüfung. \nModulhandbuch B. Sc./M. Sc. Informatik  16 \nStudienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, \nVorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren \nLeistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen \nBereichen erzielbaren Leistungen erforderlich sein.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nB. Sc. Computational Engineering \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Rechnerorganisation",
    "Modul Nr.": "20-00-0902",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Architektur von Mikroprozessoren: Programmierung in Assembler- und Maschinensprache, \nAdressierungsarten, Werkzeugflüsse, Laufzeitumgebung \n- Mikroarchitektur: Befehlssatz und architektureller Zustand, Leistungsbewertung, \nMikroarchitekturen mit Eintakt-/Mehrtakt-/Pipeline-Ausführung, Ausnahmebehandlung, \nfortgeschrittene Mikroarchitekturen \n- Speicher und Ein-/Ausgabesysteme: Leistungsbewertung, Caches, virtueller Speicher, Ein-\n/Ausgabetechniken, Standardschnittstellen",
    "Qualifikationsziele": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die Grundkonzepte der \nmaschinennahen Programmierung in Assembler und können zielgerichtet auf dieser Ebene \nAlgorithmen implementieren. Sie sind vertraut mit verschiedenen Techniken, um \nselbständig Prozessorarchitekturen als Mikroarchitekturen in digitaler Logik zu realisieren. \nSie verstehen den Aufbau und die Funktion von Speicher- und Ein-/Ausgabesystemen und \nkennen die Grundlagen verschiedener Standardschnitsttellen. Sie können die Qualität der \nRealisierungen in verschiedenen Gütemaßen bewerten.",
    "Vorraussetzungen": "Empfohlen: Besuch der Vorlesung “Digitaltechnik” bzw. entsprechende Kenntnisse aus \nanderen Studiengängen",
    "Prüfungsform": "Fachprüfung schriftlich 90 min. \nStudienleistung schriftlich/mündlich \nDas erfolgreiche Bestehen der Studienleistung ist  Zulassungsvoraussetzung zur \nFachprüfung. \nModulhandbuch B. Sc./M. Sc. Informatik  18 \nStudienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, \nVorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren \nLeistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen \nBereichen erzielbaren Leistungen erforderlich sein.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, ein Beispiel für verwendete \nLiteratur könnte sein: \nHarris/Harris: Digital Design and Computer Architecture"
  },
  {
    "Modulname": "Mathematik II (für Informatik und Wirtschaftsinformatik)",
    "Modul Nr.": "04-00-0119/de",
    "Kreditpunkte": "9  CP",
    "Arbeitsaufwand": "h",
    "Selbststudium": "h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Analysis in R: Stetigkeit, Potenzreihen, Elementarfunktionen, Differenzial- und \nIntegralrechnung,Satz von Taylor, Extremwerte, Fourierreihen \n- Analysis mehrer Veränderlicher: Stetigkeit, partielle und totale Differenzierbarkeit, \nExtremwerte \n- Gewöhnliche Differentialgleichungen: Systeme linearer DGLen, Satz von Picard-Lindelöf \n- Allgemeine Algebra: Algebren und Unteralgebren, Homomorphismen, Quotienten",
    "Qualifikationsziele": "Nach Abschluss des Moduls können die Studierenden: \n- mit abstrakten Begriffen präzise umgehen, Beweise nachvollziehen, Beweisideen erläutern \nund auch selbstständig Beweise führen, \n- die axiomatisch-deduktive Vorgehensweise der Mathematik verstehen und anwenden, \n- die vermittelten Kenntnisse und Begriffe aus zentralen Gebieten der \nMathematikgrundausbildung beherrschen, so dass sie diese für die verschiedenen \nAnwendungen in der Informatik nutzen können. \nDie Studierenden sollen \n- mit mathematischer Methodik und Fachkultur vertraut sein. \n- in der Lage sein, aufbauend auf das vermittelte Grundwissen Mathematik, weitere \nmathematische Inhalte selbstständig zu erarbeiten.",
    "Vorraussetzungen": "Empfohlen:   Mathematik I",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  20 \nFachprüfung schriftlich 90 min. \nStudienleistung schriftlich/mündlich \nDas erfolgreiche Bestehen der Studienleistung ist  Zulassungsvoraussetzung zur \nFachprüfung. \nStudienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, \nVorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren \nLeistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen \nBereichen erzielbaren Leistungen erforderlich sein.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Skript der Veranstaltung"
  },
  {
    "Modulname": "Aussagen- und Prädikatenlogik",
    "Modul Nr.": "04-00-0121/de",
    "Kreditpunkte": "5  CP",
    "Arbeitsaufwand": "h",
    "Selbststudium": "h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Syntax und Semantik der Aussagenlogik, funktionale Vollständigkeit und Normalformen, \nKompaktheitssatz der Aussagenlogik, vollständige Beweiskalküle: Resolution und ein \nSequenzenkalkül; \nSyntax und Semantik der Logik erster Stufe, Strukturen und Belegungen, Normalformen \nund Skolemisierung, der Satz von Herbrand und der Kompaktheitssatz der Logik erster \nStufe, vollständige Beweiskalküle: (Grundinstanzen-)Resolution und ein Sequenzenkalkül, \nGödelscher Vollständigkeitssatz, Unentscheidbarkeit der Logik erster Stufe; \noptional: Exkurse zu Ausdrucksstärke und model checking",
    "Qualifikationsziele": "Die Studierenden werden mit Inhalten und Methoden der mathematischen Logik und ihrer \nRolle in der Informatik vertraut gemacht. Sie lernen die grundlegenden Begriffe und \nResultate der Logik, insbesondere der Logik erster Stufe, kennen und anzuwenden. Sie \nbeherrschen die grundsätzlichen mathematischen Methoden in der Behandlung von Syntax, \nSemantik und formalen Beweisen, sowie die Diskussion einfacher modelltheoretischer und \nalgorithmischer Aspekte der behandelten logischen Systeme",
    "Vorraussetzungen": "Empfohlen:   mathematische Allgemeinbildung und „Automaten, formale Sprachen und \nEntscheidbarkeit“",
    "Prüfungsform": "Fachprüfung schriftlich 90 min. \nStudienleistung schriftlich/mündlich \nDas erfolgreiche Bestehen der Studienleistung ist  Zulassungsvoraussetzung zur \nFachprüfung. \nStudienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, \nVorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren \nModulhandbuch B. Sc./M. Sc. Informatik  22 \nLeistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen \nBereichen erzielbaren Leistungen erforderlich sein.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "Pflichtveranstaltung in Informatikstudiengängen  \nBestandteil des BSc-Mathematikmoduls „Formale Grundlagen der Informatik“",
    "Literatur": "Burris: Logic for Mathematics and Computer Science \nSchöning: Logik für Informatiker \nBoolos, Burgess, Jeffrey: Computability and Logic \nSkript (2 Teile, elektronisch unter www.mathematik.tu-darmstadt.de&#47;˜otto)"
  },
  {
    "Modulname": "Software Engineering",
    "Modul Nr.": "20-00-0017",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Vermittlung eines grundlegenden Überblicks über die wesentlichen Bereiche des Software \nEngineering sowie der Kenntnisse und Fähigkeiten, die für die Modellierung und \nRealisierung kleinerer Softwaresysteme notwendig sind.  \nDie Schwerpunkthemen sind: \n● Softwareprojektmangement  \n● Softwareprozessmodelle \n● Anforderungsmanagement \n● Softwareentwicklungswerkzeuge \n● Software Qualität; insbesondere: \n○ Testprozesse (automatisiertes Testen, Testabdeckungsmaße, Debugging) \n○ grundlegende Softwaremetriken \n● Objektorientierte Analyse und Entwurf \n● Modellierung mittels UML \n● Entwurfsmuster (Design Patterns)",
    "Qualifikationsziele": "Nach dem erfolgreichen Abschluss der Veranstaltung sind die Studierenden in der Lage \nfolgende Aufgaben zu bewältigen: \n● Die wesentlichen Bereiche des Software Engineering zu benennen und im Kontext eines \nSoftwareentwicklungsprojekts einzuordnen; \n● Etablierte Softwareentwicklungswerkzeuge zielgerichtet einzusetzen; \n● Grundlegende Qualitätssicherung mit Hilfe von automatisierten Tests durchzuführen; \n● Entwurf und Implementierung von objektorientierten Systemen unter Einsatz von UML \nund grundlegender Entwurfsmuster. \nModulhandbuch B. Sc./M. Sc. Informatik  24",
    "Vorraussetzungen": "Empfohlen:  \nFunktionale und Objektorientierte Programmierkonzepte \nAlgorithmen und Datenstrukturen",
    "Prüfungsform": "Fachprüfung schriftlich 90 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Computational Engineering \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Lehrbuch der Softwaretechnik: Softwaremanagement; H. Balzert; Springer \n● Design Patterns - Elements of Reusable Object-Oriented Software; E. Gamma, R. Helm, R. \nJohnson, J. Vlissides; Prentice Hall  \n● Software Qualität - Testen, Analysieren und Verifizieren von Software; P. Liggesmeyer; \nSpringer \n● WHY PROGRAMS FAIL: A Guide to Systematic Debugging; A. Zeller; Morgan Kaufmann \n● Writing Effective Use Cases; A. Cockburn; Pearson"
  },
  {
    "Modulname": "Computersystemsicherheit",
    "Modul Nr.": "20-00-0018",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Teil I: Kryptographie \n- Mathematische Grundlagen der Kryptographie \n- Schutzziele: Vertraulichkeit, Integrität, Authentizität \n- Symmetrische und Asymmetrische Kryptographie \n- Hash-Funktionen und Digitale Signaturen \n- Protokolle zum Schlüsseltausch \nTeil II: IT-Sicherheit und Zuverlässigkeit \n- Grundlegende Konzepte der IT-Sicherheit \n- Authentifizierung und Biometrie \n- Access Control Modelle und Mechanismen \n- Grundkonzepte der Netzwerksicherheit \n- Grundkonzepte der Software-Sicherheit \n- Zuverlässige Systeme: Fehlertoleranz, Redundanz, Verfügbarkeit",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die wichtigsten Konzepte, \nMethoden und Modelle im Bereich der Kryptographie und der IT-Sicherheit. Sie verstehen \ndie wichtigsten Methoden, um Software und Hardwaresysteme gegen Angriffe abzusichern \nund können diese auf konkrete Szenarien anwenden.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich 90 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  26",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "- J. Buchmann, Einführung in die Kryptographie, Springer-Verlag, 2010 \n- C. Eckert, IT-Sicherheit, Oldenbourg Verlag, 2013 \n- M. Bishop, Computer Security: Art and Science, Addison Wesley, 2004"
  },
  {
    "Modulname": "Einführung in den Compilerbau",
    "Modul Nr.": "20-00-0904",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Aufbau von Compilern \n- Kontextfreie Grammatiken zur Beschreibungen der Syntax von Programmiersprachen \n- Lexing- und Parsingverfahren \n- Zwischendarstellungen \n- Semantische Analyse \n- Laufzeitorganisation \n- Code-Erzeugung \n- Software-Werkzeuge für den Compilerbau \n- Implementierungstechniken für Compiler",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung den Aufbau von \nCompilern. Sie verstehen formale Konzepte zur Beschreibung von Syntax und Semantik von \nProgrammiersprachen. Sie können diese Konzepte mit algorithmischen Verfahren \nkombinieren, um selbständig zu einer spezifizierten Programmiersprache einen passenden \nCompiler zu implementieren, der die Sprache auf die gewünschte Zielmaschine abbildet. Sie \nkennen Software-Werkzeuge zur Unterstützung des Compilerbaus und können diese \nzusammen mit manuellen Techniken bei der Implementierung von Compilern einsetzen.",
    "Vorraussetzungen": "Empfohlen: Erfolgreicher Besuch der Vorlesungen “Algorithmen und Datenstrukturen”, \n“Funktionale und objektorientierte Programmierung” sowie “Rechnerorganisation”, bzw. \nentsprechende Kenntnisse aus anderen Studiengängen",
    "Prüfungsform": "Sonderform \nDie Studienleistung kann erbracht werden durch die erfolgreiche Bearbeitung von \nÜbungsblättern und praktischen Programmieraufgaben sowie deren erfolgreicher Diskussion \nin Kolloquien. Für ein Bestehen sind dabei mindestens ausreichende Leistungen in jedem \ndieser Teilbereiche erforderlich. \nModulhandbuch B. Sc./M. Sc. Informatik  28",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, ein Beispiel für verwendete \nLiteratur könnte sein: \nWatt/Brown: Programming Language Processors in Java"
  },
  {
    "Modulname": "Architekturen und Entwurf von Rechnersystemen",
    "Modul Nr.": "20-00-0012",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "-     Technologische Grundlagen und Trends der Mikroelektronik \n-     Entwurfsflüsse für mikroelektronische Systeme \n-     Beschreibung von Hardware-Systemen \n-     Charakteristika von Rechnersystemen \n-     Architekturen für parallele Ausführung \n-     Speichersysteme \n-     Heterogene Systems-on-Chip \n-     On-Chip und Off-Chip Kommunikationsstrukturen \n-     Aufbau eingebetteter Systeme, z.B. im Umfeld von Cyber-Physical Systems",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung funktionale und \nnichtfunktionale  Anforderungen an heterogene diskrete und integrierte Rechnersysteme. \nSie verstehen Techniken zum Aufbau solcher Systeme und können Entwurfsverfahren und -\nwerkzeuge  anwenden, um selbständig mit Hilfe der Techniken Rechner(teil)systeme zu \nkonstruieren, die gegebene Anforderungen erfüllen. Sie können die Qualität der Systeme in \nverschiedenen Gütemaßen bewerten.",
    "Vorraussetzungen": "Empfohlen: Erfolgreicher Besuch der Vorlesungen „Digitaltechnik“ und \n„Rechnerorganisation“ bzw. entsprechende Kenntnisse aus anderen Studiengängen",
    "Prüfungsform": "Fachprüfung schriftlich 90 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  30",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete \nLiteratur könnten sein: \nNikhil/Czeck: Bluespec by Example \nArvind/Nikhil/Emer/Vijayaraghavan: Computer Architecture: A Constructive Approach \nHennessy/Patterson: Computer Architecture – A Quantitative Approach \nCrockett/Elliott/Enderwitz/Stewart: The Zynq Book \nFlynn/Luk: Computer System Design \nSass/Schmidt: Embedded Systems Design"
  },
  {
    "Modulname": "Systemnahe und Parallele Programmierung",
    "Modul Nr.": "20-00-0905",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Programmiersprachen für systemnahe Programmierung  \n- Grundlagen paralleler Systeme \n- parallele Architekturen, Multi- und Many-Core Systeme, Rechnernetze \n- Programmierparadigmen und Modelle für paralleles Rechnen \n- Parallele Algorithmen \n- Vertiefung der gelernten Inhalte in Praktika mit signifikantem Umfang",
    "Qualifikationsziele": "Nach dem erfolgreichen Besuch der Veranstaltung verstehen Studierende die Grundlagen \nparalleler Systeme und ihrer effizienten Programmierung. Sie können einfache \nAnwendungen mittels systemnaher und/oder paralleler Programmierung auf ausgewählten \nPlatformen entwickeln and analysieren.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Sonderform \nDie Studienleistung kann erbracht werden durch die erfolgreiche Bearbeitung von \nÜbungsblättern und praktischen Programmieraufgaben sowie deren erfolgreicher Diskussion \nin Kolloquien. Für ein Bestehen sind dabei mindestens ausreichende Leistungen in jedem \ndieser Teilbereiche erforderlich.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  32",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekanntgegeben"
  },
  {
    "Modulname": "Modellierung, Spezifikation und Semantik",
    "Modul Nr.": "20-00-0013",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "● Einführung in die Modellierung mit logischen und algebraischen Konzepten \n● Interpretation und Adäquatheit formaler Modelle \n● strukturiertes Vorgehen bei der Modellierung und Umgang mit Entwurfsentscheidungen \n● Abstraktion, Verfeinerung, Komposition und Zerlegen von Modellen \n● Syntax und operationale Semantik von Programmiersprachen \n● elementare Beweistechniken und deren Verwendung \n● Einführung in Spezifikationssprachen \n● Syntax und denotationale Semantik von Spezifikationssprachen \n● Modellierung von Kommunikation und Koordination in  nebenläufigen Systemen \n● Klassifikation von Systemeigenschaften",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende grundlegende \nKonzepte aus den Bereichen Modellierung, Spezifikation und Semantik.  Sie können \nPrädikatenlogik und algebraische Konzepte zur Formalisierung von informell gegebenen \nSachverhalten verwenden.  Sie können formale Modelle schrittweise erstellen, mit den dabei \nnotwendigen Entwurfsentscheidungen umgehen und während der Modellierung als \nHilfestellung auch informelle Notationen und Graphiken sinnvoll einsetzen.   Sie kennen \neine Auswahl relevanter, formaler Spezifikationssprachen und können mindestens eine \nsolche Sprache einsetzen.  Sie verstehen die Trennung zwischen Syntax und Semantik \nformaler Sprachen und können sowohl Aussagen über Ausdrücke in formalen Sprachen als \nauch einfache Metaaussagen über Programmier- und Spezifikationssprachen beweisen. Sie \nkönnen Systemanforderungen als Prädikate formalisieren und die Angemessenheit solcher \nFormalisierungen beurteilen.",
    "Vorraussetzungen": "Modulhandbuch B. Sc./M. Sc. Informatik  34 \nEmpfohlen: Fähigkeit mit formalen Sprachen und Kalkülen umzugehen und grundlegende \nLogikkenntnisse, z.B. durch Besuch der Pflichtveranstaltungen “Automaten, formale \nSprachen und Entscheidbarkeit” und “Aussagen- und Prädikatenlogik”",
    "Prüfungsform": "Fachprüfung schriftlich 90 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "U. Kastens, H. Kleine Büning: Modellierung - Grundlagen und formale Methoden, Hanser  \nG. Winskel: The Formal Semantics of Programming Languages, MIT Press  \nC. A. R. Hoare: Communicating Sequential Processes, Prentice-Hall \nDie Literaturempfehlungen werden kontinuierlich aktualisiert."
  },
  {
    "Modulname": "Informationsmanagement",
    "Modul Nr.": "20-00-0015",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Grundkonzepte des Informationsmanagement: \nKonzepte von Informationssystemen \nInformationsspeicherung/abfrage, Suchen, Durchstöbern, deklarativer Zugriff und  \nZugriff über explizite Navigation \nQualitätsmerkmale:  \nKonsistenz, Skalierbarkeit, Verfügbarkeit, Zuverlässigkeit \nDatenmodellierung: \nKonzeptuelle Datenmodelle (ER / UML Strukturdiagramme) \nKonzeptueller Entwurf \nOperationale Modelle (relationales Modell) \nAbbildung vom konzeptuellen auf das operationale Modell \nRelationales Modell: \nOperatoren \nRelationale Algebra \nRelationale Kalküle \nAuswirkungen auf Abfragesprachen basierend auf relationaler Algebra und relationalen \nKalkülen \nEntwurfstheorie und Normalisierung \nAbfragesprachen: \nSQL (im Detail) \nModulhandbuch B. Sc./M. Sc. Informatik  36 \nQBE, Xpath (übersichtsartig) \nSpeichermedien: \nRAID, SSD \nZwischenspeicherung und Caching \nImplementierung relationaler Operatoren: \nImplementierungsalgorithmen \nKostenfunktionen \nAbfrageoptimierung: \nHeuristische Abfrageoptimierung \nKostenbasierte Abfrageoptimierung \nTransaktionsverarbeitung: \nFlache Transaktionen \nNebenläufigkeitssteuerung und Korrektheitskriterien:  \nSerialisierbarkeit, Wiederherstellbarkeit, ACA, Striktheit \nIsolationsgrade \nLock-basierte Ablaufplanung, 2PL \nMultiversionen zur Kontrolle der Nebenläufigkeit \nOptimistische Ablaufplanung \nLogging \nZwischenstände (Checkpointing) \nWiederherstellung / Neustart \nAktuelle Trends im Bereich Informationsmanagement: \nHauptspeicherdatenbanken \nSpaltenbasierte Datenhaltung \nNoSQL",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die Grundlagen des \nInformationsmanagements. Sie verstehen Techniken zum Aufbau von \nInformationsmanagementsystemen und können diese Modelle, Algorithmen und Sprachen \nanwenden, um selbständig Informationsmanagementsysteme zu benutzen bzw. (Teile \ndavon) zu erstellen. Sie können die Qualität der Systeme in verschiedenen Gütemaßen \nbewerten. \nModulhandbuch B. Sc./M. Sc. Informatik  37",
    "Vorraussetzungen": "Empfohlen: Erfolgreicher Besuch der Vorlesungen „Funktionale und Objektorientierte \nProgrammierkonzepte“ und „Algorithmen und Datenstrukturen“ bzw. entsprechende \nKenntnisse aus anderen Studiengängen",
    "Prüfungsform": "Fachprüfung schriftlich 90 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird jeweils aktuell bekanntgegeben, Beispiele sind \nHaerder, Rahm, \"Datenbanksysteme - Konzepte und Techniken der Implementierung\", \nSpringer 1999 \nElmasri, R., Navathe, S. B.: Fundamentals of Database Systems, 3rd. ed., Redwood City, CA: \nBenjamin/Cummings  \nUllman, J. D.: Principles of Database and Knowledge-Base Systems, Vol. 1 Computer Science"
  },
  {
    "Modulname": "Computational Engineering und Robotik",
    "Modul Nr.": "20-00-0011",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Grundlagen der Modellierung und Simulation \n- Problemspezifikation und Systembeschreibung im Computational Engineering \n- Modellbildung am Beispiel mechanischer Systeme \n- Modellanalyse am Beispiel mechanischer Systeme \n- Implementierung von Simulationen an Beispielen aus der Robotik und anderer Bereiche \n- Interpretation und Validierung anhand von Messdaten \n- Anwendungen in der Simulation und Steuerung von Robotern sowie der physikalisch \nbasierten Animation und Computerspiele",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die grundlegenden \nSchritte zur Entwicklung von ersten Modellen und Simulationen und sind in der Lage erste \nSimulationsstudien in der Robotik durchzuführen. Sie kennen die wesentlichen Schritte zum \nAufbau solcher Simulationssysteme (Problemspezifikation, Modellbildung, Modellanalyse, \nImplementierung und Validierung) und können mit diesen erste Simulationen konstruieren, \ndie gegebene Anforderungen erfüllen.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich 90 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  39 \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nB. Sc. Computational Engineering \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literatur zu einzelnen Kapiteln der Lehrveranstaltung: \nF. Föllinger: Einführung in die Zustandsbeschreibung dynamischer Systeme (Oldenbourg, \n1982) \nP. Corke: Robotics, Vision & Control, Springer, 2011 \nF.L. Severance: System Modeling and Simulation: An Introduction, J. Wiley & Sons, 2001"
  },
  {
    "Modulname": "Computer Netzwerke und verteilte Systeme",
    "Modul Nr.": "20-00-0016",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Übersichtswissen zu Net-Centric Computing (NCC), einem grundlegenden Aspekt der \nmodernen Informatik; tiefes Verständnis und Kenntnis fundamentaler Konzepte im \nTeilbereich Rechnernetze; Kenntnis grundlegender Methoden zur Modellierung, Planung \nund Bewertung von Net-Centric Systems \n• Grundbegriffe: Dienst, Protokoll, Verbindung, Schichtenmodell \n• Wichtigste Protokollmechanismen zu Media Access, Routing, Broad--‐/Multicast \n• Multimedia Data Handling \n• Eigenschaften kontinuierlicher Datenströme und deren Verarbeitung \n• Dienstgüte: Definition und zentrale Mechanismen \n• Multimedia--‐Synchronisation: Grundlagen \n•Kompression: Verfahren; Grundlagen zu Standards(Verweis Auf Weiterführendes)",
    "Qualifikationsziele": "●  Überblickswissen über relevante Gebiete und wesentliche Fragestellungen des Net-Centric \nComputing (NCC); \n● Reproduzierbares und tiefes Verständnis elementarer Protokolle und Verfahren und deren \nEinsatz im Internet; \n● Anwendbares Methodenwissen zu weit verbreiteten Bestandteilen der Modellierung und \ndes \"Engineering\" von NCC-Systemen; \nNCC wird dabei verstanden als \"Internettechnologie im weitesten Sinne\" und umfasst \ninsbesondere die „klassischen“ Bereiche Rechnernetze, Verteilte Systeme, Multimedia und \nMobilkommunikation / Mobiles Rechnen sowie die „modernen“ Bereiche \nUbiquitous/Pervasive Computing, Peer-to-Peer-Computing und Ambient Intelligence. Die \n„kanonische“ Vorlesung konzentriert sich auf das Gebiet Rechnernetze, dessen Verständnis \nModulhandbuch B. Sc./M. Sc. Informatik  41 \ngrundlegend ist für alle anderen aufgeführten Bereiche; letztere werden in vertiefenden \nLehrveranstaltungen des Bereichs Netze und verteilte Systeme thematisiert",
    "Vorraussetzungen": "Empfohlen:   Funktionale und objektorientierte Programmierkonzepte“,  „Algorithmen und \nDatenstrukturen“,  „Betriebssysteme“,  „Einführung in den Compilerbau“, \n„Rechnerorganisation“ und „Systemnahe und parallele Programmierung“.",
    "Prüfungsform": "Fachprüfung schriftlich 90 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Hauptliteratur: \n● A. Tanenbaum, D. Wetherall: Computernetzwerke, 5te Aufl., Pearson Studium 2012 \n● (englisch: Computer Networks, 5th Ed., Prentics Hall 2010) \n● J. Kurose, K. Ross: Computernetzwerke; Pearson Studium 2012   \n● (ebenfalls auch englisch bei Prentice Hall erhältlich) \n● Ausgewählte Kapitel aus folgenden Büchern: \n● G. Coulouris, J. Dollimore, T. Kindberg: Distributed Systems – Concept and Design, \nPearson Studium \n● G. Krüger, D. Reschke: „Lehr- und Übungsbuch Telematik“ \n● L. Kleinrock: Queueing Systems, vol. 1 (Wiley) \n● W.R. Stevens: Unix Network Programming, Volume 1: The Sockets Networking API \n(Addison Wesley)"
  },
  {
    "Modulname": "Mathematik III für Informatiker",
    "Modul Nr.": "04-00-0112",
    "Kreditpunkte": "8  CP",
    "Arbeitsaufwand": "h",
    "Selbststudium": "h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Numerik: Numerische Lösung linearer Gleichungssysteme, Interpolation, Numerische \nQuadraturverfahren, Nichtlineare Gleichungssysteme, Anfangswertprobleme für \ngewöhnliche Differentialgleichungen, Eigenwert-/Eigenvektorberechnung, \nStatistik: Grundbegriffe der Statistik und Wahrscheinlichkeitstheorie, Regression, \nmultivariate Verteilungen, Schätzverfahren und Konfidenzintervalle, Tests bei \nNormalverteilungsannahme, robuste Statistik",
    "Qualifikationsziele": "Fähigkeit für grundlegende Aufgabenstellungen geeignete numerische Verfahren \nauszuwählen und anzuwenden. Fähigkeit statistische Auswertungen vorzunehmen, \ngrundlegende Schätzverfahren und Testverfahren durchzuführen.",
    "Vorraussetzungen": "Empfohlen:  Mathematik I für Informatiker und Mathematik II für Informatiker",
    "Prüfungsform": "Fachprüfung schriftlich 90 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "Pflichtveranstaltung in Informatikstudiengängen",
    "Literatur": "Von Finckenstein, Lehn, Schellhaas, Wegmann: Arbeitsbuch für Ingenieure II, Teubner \nVerlag Stuttgart"
  },
  {
    "Modulname": "Formale Methoden im Softwareentwurf",
    "Modul Nr.": "20-00-0901",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "● Modellierung nebenläufiger Software mit der Sprache ProMeLa \n● Formalisierung von Sicherheits- und Lebendigkeitseigenschaften mit temporaler \nAussagenlogik \n● Theoretische Grundlagen von Modellprüfungsverfahren \n● Verifikation von ProMeLa Programmen mittels des Modellprüfers SPIN \n● Syntax, Semantik und Sequenzenkalkül für typisierte Logik erster Stufe \n● Grundlagen der kontraktbasierten Softwarespezifikationssprache JML \n● Dynamische Logik als eine Programmlogik erster Stufe \n● Formale Programmverifikation durch symbolische Ausführung und Invariantenschließen \n● Werkzeugunterstützte Verifikation von Java-Programen mit der KeY System",
    "Qualifikationsziele": "Nach erfolgreichem Besuch der Veranstaltung haben die Studierenden praktisch \nanwendbare Grundkenntnisse in den beiden wichtigsten Verfahren zur formalen \nSpezifikation und Verifikation von Software:  \n1. Modellprüfung gegen in temporaler Aussagenlogik spezifierte Eigenschaften \n2. Deduktive Verifikation von Methodenkontrakten",
    "Vorraussetzungen": "Empfohlen: Programmierkenntnisse in Java und Vertrautheit mit Aussagenlogik wird \nerwartet. Empfohlen ist der Besuch der Vorlesung “Aussagen- und Prädikatenlogik”. \nAnsonsten genügt grundlegende mathematische Reife.",
    "Prüfungsform": "Fachprüfung schriftlich 90 min. \nModulhandbuch B. Sc./M. Sc. Informatik  44",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Für den ersten Teil des Kurses: \n● Ben-Ari: Principles of the SPIN Model Checker, Springer \n● Holzmann: The SPIN Model Checker, Addison-Wesley \nFür den zweiten Teil des Kurses: \n● Beckert et al.: Verification of Object-Oriented Software, Springer \nDie Literaturempfehlungen werden kontinuierlich aktualisiert"
  },
  {
    "Modulname": "Betriebssysteme",
    "Modul Nr.": "20-00-0903",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "● Einführung in Betriebsysteme (BS) - Notwendigkeit, Design \n● Prozesse und Threads - BS Datenstrukturen, Abstraktionen, Kernel/User mode, context \nswitches, Interrupts \n● Interprozeß-Kommunikation - IPC, RPC, Schnittstellen, Hierarchien, Messaging-\nSemantiken \n● Koordination: Deadlocks - Critical sections, Deadlock-Charakterisierung, Entdeckung, \nRecovery und Vermeidung. \n● Scheduling/Ressourcen-Management - Prozess-Reihenfolgen, unterbrechendes und \nunterbrechungsfreies Scheduling, verschiedene Scheduling-Konzepte und -Algorithmen, \nImplementierungen in BS \n● Nebenläufigkeit: Races, Mutual Exclusions - Critical sections, races, spin locks, \nSynchronisation \n● Semaphoren - Semaphoren, Monitore \n● Speicherverwaltung - BS-Datenstrukturen, Management- und Austausch-Ansätze, \nvirtueller Speicher, paging, caching, segmentation \n● I/O - Geräte-Management, Treiber, Interrupt-Behandlung, DMA \n● Dateisysteme - Anforderungen, Design, Implementierungen, Datenstrukturen, \nVerzeichnisse, virtuelle Dateisysteme \n● Fehlertoleranz und Stabilität - Fehlertypen, zuverlässige Nachrichten, BS Zuverlässigkeit \nund Verfügbarkeit, Sicherheits-Aspekte \n● Eingebettete & Echtzeit BS - Speicher/Festplatten/Performanz-Management, \nFehlertoleranz, Echtzeit-Aspekte \n● Verteilte BS - verteilte Berechnung und Kommunikation, Abstraktionen, Synchronisation, \nKoordination, Konsistenz \n● Virtuelle Maschinen (VM) - Grundlagen und Typisierung von VMs und Hypervisoren",
    "Qualifikationsziele": "Studierende erhalten nach erfolgreichem Besuch der Veranstaltung einen Überblick über \ngrundlegende Betriebssystem-Konzepte. Verschiedene Ansätze einzelner BS-Konzepte \nkönnen von Studierenden diskutiert und ausgewählte Ansätze hinsichtlich variierender \nModulhandbuch B. Sc./M. Sc. Informatik  46 \ntechnischer Anforderungen - insbesondere Fehlertoleranz, Sicherheit, Performanz - \nanalysiert werden. Weiterhin verstehen sie Techniken zum Aufbau solcher Systeme.",
    "Vorraussetzungen": "Empfohlen: “Algorithmen und Datenstrukturen”, “Funktionale und objektorientierte \nProgrammierung”, “Rechnerorganisation”",
    "Prüfungsform": "Fachprüfung schriftlich 90 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Modern Operating Systems; A. Tanenbaum, Prentice Hall, ISBN 0-13-813459-6 \n● Operating System Concepts; Silberschatz et al, John Wiley and Sons, ISBN 0-470-23399-3"
  },
  {
    "Modulname": "Visual Computing",
    "Modul Nr.": "20-00-0014",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "● Grundlagen der Wahrnehmung \n● Grundlagen der Fouriertransformation \n● Bilder, Bildfilterung, -kompression & -verarbeitung \n● Grundlagen der Objekterkennung \n● Geometrische Transformationen \n● Grundlagen der 3D-Rekonstruktion \n● Oberflächen- und Szenenrepräsentationen \n● Renderingverfahren \n● Farbe: Wahrnehmung, Räume & Modelle \n● Grundlagen der Visualisierung",
    "Qualifikationsziele": "Nach erfolgreichem Besuch der Veranstaltung beschreiben Studierende die Grundkonzepte \nsowie grundlegende Modelle und Methoden des Visual Computings. Sie erklären wichtige \nVerfahren zur Bildsynthese (Computergraphik & Visualisierung) sowie zur Bildanalyse \n(Computer Vision) und können damit einfache Bildsynthese- und -analyseaufgaben lösen.",
    "Vorraussetzungen": "Empfohlen: Der vorige (ggf. parallele) Besuch der Veranstaltungen “Mathematik I/II/III”.",
    "Prüfungsform": "Fachprüfung schriftlich 90 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  48 \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nB. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Computational Engineering \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden regelmäßig aktualisiert und beinhalten beispielsweise: \n● R. Szeliski, “Computer Vision: Algorithms and Applications”, Springer 2011 \n● B. Blundell, “An Introduction to Computer Graphics and Creative 3D Environments”, \nSpringer 2008"
  },
  {
    "Modulname": "Bachelor-Praktikum",
    "Modul Nr.": "20-00-0906",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Anwendung des im Rahmen der grundlegenden Veranstaltungen erworbenen Wissens im \nKontext eines komplexen Softwareentwicklungsprojektes. Die einzelnen Aufgabenstellungen \nwerden dabei von Fachgebieten der TU Darmstadt gestellt und leisten im Regelfall einen \nBeitrag zu deren Forschung. \nSchwerpunkte des Praktikums sind: \n● Planung und Durchführung eines Softwareentwicklungsprojektes \n● Anwendung von Softwareentwicklungsprozessen \n● Ermittlung und Priorisierung von Anforderungen \n● Durchführung systematischer Qualitätssicherung \n● Präsentationstechnik  \n● Teamarbeit",
    "Qualifikationsziele": "Nach erfolgreichem Abschluss des Bachelor-Praktikums sind die Studierenden in der Lage, \nfolgende Aufgaben lösen zu können: \n● Umsetzung kleinerer Programmierprojekte über einen längeren Zeitraum (~ 6 Monate) in \neinem kleinen Team (4 bis 5 Personen); \n● Systematische Organisation und Planung von Softwareprojekten; \n● Ermittlung und Dokumentation von Projektanforderungen; \n● Systematische Durchführung grundlegender, dem Projekt angemessener, \nQualitätssicherung; \n● Effektiver Einsatz grundlegender Softwarewerkzeuge (z.B. Testwerkzeuge, \nVersionskontrollsysteme und Projektplanungswerkzeuge); \nModulhandbuch B. Sc./M. Sc. Informatik  50 \n● Projektpräsentation für Außenstehende im Rahmen eines kurzen Vortrags sowie \nDarlegung des Projektstands.",
    "Vorraussetzungen": "Empfohlen: Erfolgreicher Abschluss der Veranstaltungen: \n● Funktionale und Objektorientierte Programmierkonzepte \n● Software Engineering",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Allgemein: \n● Lehrbuch der Softwaretechnik: Softwaremanagement; H. Balzert; Springer \n● Design Patterns - Elements of Reusable Object-Oriented Software; E. Gamma, R. Helm, R. \nJohnson, J. Vlissides; Prentice Hall  \n● Software Qualität - Testen, Analysieren und Verifizieren von Software; P. Liggesmeyer; \nSpringer \n● Writing Effective Use Cases; A. Cockburn; Pearson \n● Clean Code: A Handbook of Agile Software Craftsmanship; R. C. Martin; Prentice Hall \nWeiterhin ist je nach bearbeiteter Aufgabenstellung weitere Literatur notwendig."
  },
  {
    "Modulname": "Public Key Infrastrukturen",
    "Modul Nr.": "20-00-0063",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "1. Security Goals \n1. Confidentiality \n2. Integrity \n3. Authenticity of Data \n4. Entity Authentication/Identification \n5. Non-repudiation \n6. Availability \n7. Other Goals \n2. Public Key Cryptography \n1. Encryption (symmetric, assymetric, hybrid, cryptosystems, key exchange, \nperformance, security, computational problems) \n2. Cryptographic Hash Functions \n3. Message Authentication Codes \n4. Digital Signatures (performance, standards) \n3. Certificates \n1. X.509 Public Key Certificates (properties, content, extensions) \n2. PGP \n3. WAP Certificates \n4. Attribute Certificates \n4. Trust Models \n1. Direct Trust (fingerprints, examples of) \n2. Web of Trust (key legitimacy, owner trust, trusted introducers) \n3. Use of PGP \n4. Hierarchical Trust (trusted list, common root, cross-certification, bridge) \n5. Private Keys \n1. Software Personal Security Environments (PKCS#12, Java Keystore, application \nspecific ) \nModulhandbuch B. Sc./M. Sc. Informatik  53 \n2. Hardware Personal Security Environments (smart cards, hardware security modules, \njava cards) \n3. Private Key Life-cycle \n6. Revocation \n1. Revocation (reaons for, requirements, criteria) \n2. Certificate Revocation Lists \n3. Delta Certificate Revocation Lists \n4. Other Certificate Revocation Lists (over-issued, indirect, redirect) \n5. OCSP \n6. Other Revocation Mechanisms (NOVOMODO) \n7. Policies \n1. Certificate Life-cycle \n2. Certificate Policy and Certification Practice Statement \n3. Set of Provisions \n8. Validity Models \n1. Shell Model \n2. Modified Shell Model \n3. Chain Model \n9. Certification Path Validation \n10. Trust Center \n1. Registration Authority (registration protocols, proof-of-possession, extended \nvalidation certificates) \n2. Certification Authority \n3. Certificate Management Authority \n11. Certification Paths and Protocols \n1. Construction \n2. LDAP and other methods \n3. SCVP \n4. Timestamping \n5. Long Term Archiving Signatures",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung Public Key Infrastrukturen besucht haben, können \nSie \n● die IT Sicherheitsziele und die kryptographischen Primitive zu deren Realisierung \nverstehen. \n● die Grundlagen von Public Key Infrastrukturen, insbesondere die verschiedenen \nKomponenten (bspw. private Schlüssel, Zertifikate, Policies), Akteure (bspw. Trust Center, \nSchlüsselinhaberinhaber) und Prozesse (bspw. Zertifikatsbeantragung, Zertifikatserstellung, \nRevokation, Zertifikatsvalidierung) verstehen und erklären. \n● die zugrundeliegenden theoretischen Modelle (bspw. Vertrauensmodelle, \nGültigkeitsmodelle) verstehen, erklären und anwenden. \nModulhandbuch B. Sc./M. Sc. Informatik  54 \n● Public Key Infrastrukturen in der Praxis anwenden (bspw. für Email Signatur und -\nVerschlüsselung, Prüfung der Authentizität von Webseiten).",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "●  J. Buchmann, E. Karatsiolis, and A. Wiesmaier. \"Introduction to Public Key \nInfrastructures\", Springer-Verlag Berlin Heidelberg, 2013. ISBN: 978-3-642-40656-0 (Print) \n978-3-642-40657-7 (Online) \n● J. Buchmann, \"Einführung in die Kryptographie\", ISBN 3-540-41283-2 \n● C. Adams / S. Lloyd, \"Understanding Public-Key Infrastructure\", ISBN 1-57870-166-X \n● Tom Austin, \"PKI / A Wiley Tech Brief\", ISBN 0-471-35380-9 \n● R. Housley / T. Polk, \"Planning for PKI\", ISBN 0-471-39702-4 \n● A. Nash / W. Duane / C. Joseph/ D. Brink, \"PKI Implementing and Managing E-Security\", \nISBN 0-007-213123-3 \n● Henk C.A. van Tilborg, \"Encyclopedia of Cryptography and Security\", ISBN-13: 978-\n0387234731"
  },
  {
    "Modulname": "Einführung in die Kryptographie",
    "Modul Nr.": "20-00-0085",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Math. Grundlagen: \n● Berechnungen in Kongruenz- und Restklassenringen \nGrundlagen der Verschlüsselung: \n● Symmetrische vs. Asymmetrische Kryptosysteme \n● Block- und Stromchiffren, AES, DES \n● Kryptanalyse \n● Wahrscheinlichkeit und Perfekte Sicherheit \n● Verschlüsselung mit öffentlichen Schlüsseln \n● RSA, Diffie-Hellman, ElGamal \n● Faktorisierung großer Zahlen \n● Diskrete Logarithmen \n● Kryptografische Hashfunktionen \n● Digitale Signaturen \n● Identifikation",
    "Qualifikationsziele": "● Verstehen der mathematischen Grundlagen der Kryptographie wie z.B. Berechnungen in \nKongruenz- und Restklassenringen, Faktorisierung großer Zahlen, Wahrscheinlichkeit und \nPerfekte Sicherheit \n● Verstehen der Prinzipien von Public und Secret-Key-Verschlüsselung und der relevanten \nVerfahren einschließlich ihrer Sicherheit und Effizienz \n● Verstehen der Prinzipien digitaler Signaturen und der relevanten Verfahren einschließlich \nihre Sicherheit und Effizienz",
    "Vorraussetzungen": "Modulhandbuch B. Sc./M. Sc. Informatik  56 \nEmpfohlen:  \n● Lineare Algebra  \n●  Funktionale und objektorientierte Programmierkonzepte",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Johannes Buchmann: Einführung in die Kryptographie, 5. Auflage, Springer-Verlag, 2010, \n278 p. ISBN: 978-3-642-11185-3 \n● Johannes Buchmann: Cryptographic Protocols. Vorlesungsskript (u.a. Undeniable, Fail-\nStop und Blind Signatures) \n● Neal Koblitz: A Course in Number Theory and Cryptography, Springer Verlag, 1994 \n● Alfred J. Menezes, Paul C. van Oorschot, Scot A. Vanstone: Handbook of Applied \nCryptography, CRC Press, 1997 (erhältlich als PDF) \n● Bruce Schneier: Applied Cryptography, John Wiley & Sons, Inc., 1994 \n● Douglas R. Stinson: Cryptography - Theory and Practice, CRC Press, 1995 \n● Gustavus J. Simmons: Contemporary Cryptology - The Science of Information Integrity, \nIEEE Press, 1992"
  },
  {
    "Modulname": "IT-Sicherheits-Management",
    "Modul Nr.": "20-00-0088",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "  Einführung in die 10 Normenelemente nach ISO/IEC 17799:2005 bzw.  \nISO 27002:2007 und ISO 27001:2005  \n  Diskussion der Assets aus Sicht der Informationsverarbeitung /  \nInformationssicherheitsverarbeitung  \n  Informationssicherheit, IT-Sicherheitsziele und -strategien,  \nIT-Sicherheitsmanagementprozess   \n  Abgrenzung der IT-Sicherheit gegenüber der Informationssicherheit  \n  ISO 27001 auf Basis von IT-Grundschutz (BSI, Bonn) versus ISO/IEC  \n27001:2005  \n  Stand und Entwicklung der Normenfamilie ISO/IEC 2700X (x=  \n1,2,3,4,5)  \n  Abgrenzung: Informationsmanagementsystem (IMS),  \nInformationsicherheitsmanagementsystem (ISMS), IT-Sicherheitsmanagement  \n(ITSM)  \n  Analysen von Schwachstellen und Bedrohungen in Abhängigkeit der  \nAssets \n  Betrachtung und Vergleich von Risikoanalysen und -verfahren wie  \nz.B. das des IT-GsHbs (BSI, Bonn) und das des British Standards (BS  \n7799-3:2006 zukünftig: ISO/IEC 27003:2006) sowie verschiedene ROSI  \nAnsätze.  \n  Stochastische und zeitliche Aspekte des Risikos,  \nRisikomanagementsysteme  \nModulhandbuch B. Sc./M. Sc. Informatik  58 \n  Entscheidung im Umgang/Übernahme von Risiken mit Methoden der  \nnormative/deskriptiven Entscheidungstheorie  \n  Modellierungsaspekte des Risikos mittels Prozess Algebra und  \nGraphentheorie  \n BASEL II und des Sarbanes-Oxley Acts (SOX)  \n  Beispiel eines höherwertigen Ansatzes nach BASEL II durch  \nbaysianische Netze und Monte-Carlo Simulation  \n  Bewertungsverfahren und Metriken der IT-Sicherheit sowie eines ISMS \n  Die Verfügbarkeit der Wertschöpfungskette im K-Fall/Desaster oder  \nAnsätze zum Bussiness Continuity Planning (BCP) und Business Continuity  \nManagement System (BCMS) nach BS 25999-2:2007 \n  Metriken zur Bewertung eines ISMS, BCMS, QMS und IMS  \n  Kritische Dikussion der \"losen\" und \"starken\" Kopplungen innerhalb  \nder IT-Sicherheitsarchitektur  \n  Anwendung des Capability Maturity Model (CMM) auf die IT-Sicherheit",
    "Qualifikationsziele": "Kenntnisse, Inhalte und Strukturen eines IT-Sicherheitsmanagementsystems (ISMS). Überblick \nüber gängige Verfahren und deren Grenzen hinsichtlich eines IT-Sicherheitsmanagements, wie \nz.B. ISO/IEC 27001:2005, IT-GsHb des BSI, CoBiT und OCTAVE. Erkenntnisse über die \nBestimmung der Assets eines Unternehmens bzgl. der IT-Sicherheit und deren Einordnung \nhinsichtlich Verfügbarkeit, Vertraulichkeit und Integrität. Systematische Bewertung einer \nUnternehmenssicherheit anhand von Metriken. Entwicklung von Reifgrad-Modellen in Form \neines Capability Maturity Model (CMM)",
    "Vorraussetzungen": "Empfohlen: \nKenntnisse der Kanonik Trusted Systems/Computersystemsicherheit",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0088-vl] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehend der Prüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  59 \nBausteinbegleitende Prüfung:  \n  [20-00-0088-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Sicherheit in Multimedia Systemen und Anwendungen",
    "Modul Nr.": "20-00-0093",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i. d. R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Studenten erhalten einen Überblick über die Herausforderungen der Multimedia \nSicherheit und den bekannten Lösungsansätzen hierzu. Dazu gehören die Konzepte der \nMedien-Integrität, -Vertraulichkeit und -Authentizität. Verfahren aus dem Bereichen digitale \nWasserzeichen, robuste Hashverfahren, partielle Verschlüsslung, Multimedia Forensik und \nDRM sind dem Studenten bekannt. Er kann Herausforderungen der Multimedia Sicherheit \naus einer Palette von Lösungsmechanismen bedarfsabhängig optimal adressieren. \n●  Partielle Verschlüsselungsverfahren für Video und Audio zur Sicherung der \nVertraulichkeit und der Authentizität \n● Digitale Wasserzeichen für Bild und Audio - Anwendungsgebiete, Methoden und \nVerfahren \n● Digital Rights Management und Kopierschutzverfahren \n● Visuelle Kryptographie  \nNeben der Diskussion von Algorithmen, deren Möglichkeiten, Grenzen und Schwachstellen \nnehmen auch die kommerziellen und gesellschaftlichen Aspekte des Einsatzes von \nSchutzmaßnahmen ihren Platz in der Vorlesung ein.",
    "Qualifikationsziele": "Die Studenten erhalten einen Überblick über die Herausforderungen der Multimedia \nSicherheit und den bekannten Lösungsansätzen hierzu. Dazu gehören die Konzepte der \nMedien-Integrität, -Vertraulichkeit und -Authentizität. Verfahren aus dem Bereichen digitale \nWasserzeichen, robuste Hashverfahren, partielle Verschlüsslung, Multimedia Forensik und \nDRM sind dem Studenten bekannt. Er kann Herausforderungen der Multimedia Sicherheit \naus einer Palette von Lösungsmechanismen bedarfsabhängig optimal adressieren.",
    "Vorraussetzungen": "Empfohlen: Grundkenntnisse in Multimedia-Formaten und IT-Sicherheit.",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  61 \nFachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Visual Computing \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Steinmetz: Multimedia-Technologie. Grundlagen, Komponenten und Systeme, ISBN: \n3540673326, Springer, Heidelberg, 2000 \n● Dittmann: Digitale Wasserzeichen, Springer Verlag, ISBN 3 - 540 - 66661 - 3, 2000 \n● Cox, Miller, Bloom: Digital Watermarking, Academic Press, San Diego, USA, ISBN 1-\n55860-714-5, 2002 \n● und spezifische Veröffentlichungen aus Tagungsbänden"
  },
  {
    "Modulname": "Virtuelle Private Netze",
    "Modul Nr.": "20-00-0096",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "  Verfahren der Kommunikationstechnik für ein VPN  \n  Offene Kommunikation in Datennetzen \n  OSI-Referenzmodell  \n  Dienste und Protokolle  \n  Dienstgüten CoS und QoS in IP-Netzen (IntServ und DiffServ)  \n  Multiprotokoll Label Switching (MPLS)  \n  Fast-Paket-Switching (FPS) und Frame-Relay  \n  MPLS über Frame-Relay  \n  ATM-Referenzmodell   \n  MPLS über ATM-Verbindungen  \n  Verfahren der IuK-Sicherheit  \n  Vergleich zwischen CC und ITSEC  \n  Sicherheitsarchitekturen offener Systeme  \n  Verschlüsselungstechniken  \n  Technologie zur Überbrückung der Luftschnittstelle  \n  Zellenbasierte (2,5G und 3G) und Wireless-LAN-Lösungen (WLAN)  \n  VPN über fremde Netze (IETF-Referenzmodelle)  \n  Service Level Agreements (SLAs)  \nModulhandbuch B. Sc./M. Sc. Informatik  63 \n  VPN-Klassifizierungen  \n  Einsatz von virtuellen privaten Netzen  \n  Planungsaspekte  \n  Interessenkonflikte   \n  Randbedingungen",
    "Qualifikationsziele": "  Wichtige Verfahren zur Absicherung virtueller (logischer) Netze verstehen und \nnachvollziehen können. Insbesondere wird ein Schwerpunkt auf IPSec gelegt.   \n  Einbettung der Kryptographie in die Übertragung in drahtgebundene und drahtlose \nÜbertragungswege: Erkennen der Stärken und Schwächen.   \n  Verstehen der Diskrepanz zwischen formalen Richtlinien und Implementierungen.",
    "Vorraussetzungen": "Empfohlen: \nGrundstudium in Informatik Kryptographie, Netze, IT-Sicherheit",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0096-vl] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0096-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "",
    "Literatur": ""
  },
  {
    "Modulname": "IT-Sicherheit",
    "Modul Nr.": "20-00-0219",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Ausgewählte Konzepte der IT-Sicherheit (Kryptographie; Sicherheitsmodelle; \nAuthentifikation; Zugriffskontrolle; Sicherheit in Netzen; Trusted Computing; Security \nEngineering; Privatsphäre und Datenschutz; Web- und Browser-Sicherheit; \nInformationssicherheitsmanagement, IT-Forensik, Cloud Computing)",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung sind die Studierenden in der Lage \nkritisch über gängige Mechanismen und Protokolle zur Erhöhung der IT-Sicherheit heutiger \nSysteme zu diskutieren. Studenten haben nach Abschluss der Veranstaltung in breites \nWissen über IT-Sicherheit, Datenschutz und Privatsphäre im Internet. \nStudierende sind vertraut mit modernen IT-Schutzkonzepten aus dem Bereich \nKryptographie, Identitätmanagement, Web-, Browser- und Netzwerksicherheit. Sie sind in \nder Lage Angriffsvektoren in IT-Systemen zu erkennen und Gegenmaßnahmen zu \nentwickeln.",
    "Vorraussetzungen": "Empfohlen: Besuch der Vorlesung  Computersystemsicherheit",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  65 \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "• C. Eckert: IT-Sicherheit, 3. Auflage, Oldenbourg Verlag, 2004 \n• J. Buchmann, Einführung in die Kryptographie, 2.erw. Auflage, Springer Verlag, 2001 \n• E. D. Zwicky, S. Cooper, B. Chapman: Building Internet Firewalls, 2. Auflage, O'Reilly, \n2000 \n• B. Schneier, Secrets & Lies: IT-Sicherheit in einer vernetzten Welt, dpunkt Verlag, 2000 \n• W. Rankl und W. Effing: Handbuch der Chipkarten, Carl Hanser Verlag, 1999 \n• S. Garfinkel und G. Spafford: Practical Unix & Internet Security, O'Reilly & Associates"
  },
  {
    "Modulname": "Formale Methoden der Informationssicherheit",
    "Modul Nr.": "20-00-0362",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "● formale Modellierung sicherheitskritischer Systeme in Prädikatenlogik \n● Theoretische Grundlagen von Zugriffskontrollen und Informationsflusskontrollen \n● formale Modellierung von Sicherheitseigenschaften in Prädikatenlogik \n● Unterscheidung von qualitativen und quantitativen Sicherheitseigenschaften \n● Entscheidbarkeits- und Komplexitätsresultate für Sicherheitseigenschaften \n● Verifikation von Sicherheitsgarantien in verteilten Systemen \n● Auswirkung von Komposition und Verfeinerung auf Sicherheitsgarantien \n● formale Sprachen zur Beschreibung von Sicherheitspolitiken und deren Semantik \n● Zertifizierung sicherheitskritischer Systeme",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende relevante formale \nSicherheitsmodelle und Analysetechniken. Sie verstehen fundamentale Unterschiede \nzwischen verschiedenen Klassen von Sicherheitseigenschaften und das Zusammenspiel \nzwischen schrittweiser Softwareentwicklung und Sicherheitseigenschaften.  Sie können \nSysteme und Sicherheitsanforderungen formal modellieren und sicherheitsrelevante Aspekte \nbasierend auf formalen Spezifikationen formal analysieren.",
    "Vorraussetzungen": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern \ndes Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und \nFähigkeit mit formalen Sprachen und Kalkülen umzugehen",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  67",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● M. Bishop: Computer Security, Addison-Wesley \n● J. Biskup: Security in Computing Systems, Springer-Verlag \n● C. P. Pfleeger, S. L. Pfleeger: Security in Computing, Prentice Hall \n● D. Denning: Cryptography and Data Security, Addison Wesley \nDie Literaturempfehlungen werden kontinuierlich aktualisiert."
  },
  {
    "Modulname": "Netzsicherheit",
    "Modul Nr.": "20-00-0512",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "Die integrierte Veranstaltung Netzsicherheit umfasst Sicherheits-Prinzipien und -Praxis in \nTelekommunikationsnetzen und dem Internet. Die grundlegenden Verfahren aus dem \nBereich IT Sicherheit und Kryptographie werden auf den Bereich der Kommunikationsnetze \nübertragen. Hierbei verfolgen wir einen Top-down Ansatz. Beginnend mit der \nAnwendungsschicht erfolgt eine detaillierte Betrachtung von Prinzipien und Protokollen zur \nAbsicherung von Netzen. Ergänzend zu etablierten Mechanismen werden ausgewählte \naktuelle Entwicklungen im Bereich Netzsicherheit erläutert. \nLerninhalte: \n- Netzsicherheit: Einführung, Motivation und Herausforderungen \n- Grundlagen: Ein Referenzmodell für Netzsicherheit, Sicherheitsstandards für Netze und \ndas Internet, Bedrohungen, Angriffe, Sicherheitsdienste und -mechanismen \n- Kryptographische Grundlagen zur Absicherung von Netzen: Symmetrische Kryptographie \nund deren Anwendung in Netzen, asymmetrische Kryptographie und deren Anwendung in \nNetzen, unterstützende Mechanismen zur Implementierung von Sicherheitslösungen \n- Sicherheit auf der Anwendungschicht \n- Sicherheit auf der Transportschicht \n- Sicherheit auf der Vermittlungsschicht \n- Sicherheit auf der Sicherungsschicht \n- Sicherheit auf der Bitübertragungsschit und physische Sicherheit \n- Angewandte Netzsicherheit: Firewalls, Intrusion Detection Systeme \n- Ausgewählte Themen der Netzsicherheit",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung haben die Studierenden ein \numfassendes Wissen auf dem Gebiet der Netzsicherheit mit dem Schwerpunkt auf \nInternetsicherheit. Sie können die wichtigsten Grundlagen der IT Sicherheit sowie der \nKryptographie auf den Bereich Kommunikationsnetze übertragen und anwenden. Die \nStudierenden können die wichtigsten Basistechnologien zur Absicherung von Netzen \nunterscheiden. Sie weisen ein tiefgehendes Verständnis von Sicherheitsmechanismen auf \nModulhandbuch B. Sc./M. Sc. Informatik  69 \nden unterschiedlichen Protokollschichten auf (Anwendungschicht, Transportschicht, \nVermittlungsschicht, Sicherungsschicht, physikalische Schicht). Somit sind sie in der Lage, \ndie Charakteristiken und Grundprinzipien des Problemraumes Netzsicherheit detailliert zu \nerläutern und weisen auf diesem Feld ein fundiertes Wissen in Praxis und Theorie auf. \nDarüber hinaus können sie aktuelle Entwicklungen im Bereich Netzsicherheit erläutern (z.B. \nSicherheit in peer-to-peer Systemen, Sicherheit in mobilen Netzen, etc.). Die Übung vertieft \ndas theoretische Wissen durch Literatur-, Rechen- und praktische Implementierungs-\n/Anwendungsübungen.",
    "Vorraussetzungen": "Empfohlen: Grundlagen der IT-Sicherheit, Kryptographie und Kommunikationsnetze",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Distributed Software Systems \nM. Sc. Autonome Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Charlie Kaufman, Radia Perlman, Mike Speciner: Network Security – Private \nCommunication in a Public World, 2nd Edition, Prentice Hall, 2002, ISBN: 978-0-14-\n046019-6; weiterhin ausgewählte Buchkapitel und ausgewählte wissenschaftliche \nVeröffentlichungen"
  },
  {
    "Modulname": "Secure, Trusted and Trustworthy Computing",
    "Modul Nr.": "20-00-0561",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "90 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Grundbegriffe \n● Vertrauens- und Sicherheitsziele \n● Vertrauensmodelle \nTrusted Computing \n● Vertrauenswürdige Architekturen und Anwendungen \n● Einführung in den TCG-Ansatz (Terminologie und Annahmen) \n● Einführung Trusted Platform Module (TPM) \nTrusted Platform Module (TPM) \n● TPM Architektur und Schlüsselhierarchie \n● Authentikation und Autorisierungsprotokolle \n● Schlüsselmanagement und –wartung \nLaufzeitangriffe \n● Buffer Overflows \n● Return-Oriented Programming",
    "Qualifikationsziele": "Durch die erfolgreiche Teilnahme an dieser Veranstaltung erhalten Studenten einen \nÜberblick über die wesentlichen Konzepte, Methoden und Modelle im Bereich sicheres und \nvertrauenswürdiges Rechnen. Außerdem erwerben sie detailliertes Wissen über die Trusted \nComputing Technologie in der Praxis.",
    "Vorraussetzungen": "Empfohlen: Grundlagen der Kryptographie",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min. \nModulhandbuch B. Sc./M. Sc. Informatik  71",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Challener, David, VanDoorn, Leendert, Safford, David, Yoder, Kent, Catherman, Ryan \"A \nPractical Guide to Trusted Computing\", IBM Press, 2007  \n● Pei, Din-gyi, Yung, Moti, Lin, Dongdai, Wu, Chuankun \"Information Security and \nCryptology\", Springer, 2007  \n● Smith, Sean W. \"Trusted Computing Platforms: Design and Applications\", Springer Verlag, \n2005  \n● Müller, Thomas \"Trusted Computing Systeme\", Springer, 2008"
  },
  {
    "Modulname": "Embedded System Security",
    "Modul Nr.": "20-00-0581",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "135 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Trusted Computing \n● Authentifiziertes Booten \n● Binding und Sealing \n● Messen der Plattform-Integrität und Attestierung \n● Direct Anonymous Attestation \n● Trusted Platform Modules (TPM/MTM) \n● On-board Credentials \nMobile Sicherheit mit Fokus auf Smartphones \n● Sicherheitsarchitekturen \n● Ausgewählte Zugriffsmodelle \n● Kontext-basierte Sicherheitsrichtlinien \n● Ausgewählte moderne Angriffstechniken \nHardware-basierte Kryptographie \n● Sichere Berechnungen basierend auf Hardware \n● Einführung in Physikalisch Unklonbare Funktionen (PUFs)",
    "Qualifikationsziele": "Durch die erfolgreiche Teilnahme an dieser Veranstaltung erwerben Studenten detailliertes \nWissen über ausgewählte Aspekte der eingebetteten Systemsicherheit (Hardware- und \nSoftware-basiert).",
    "Vorraussetzungen": "Empfohlen: Grundlagen der Kryptographie",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min. \nModulhandbuch B. Sc./M. Sc. Informatik  73",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Challener, David, VanDoorn, Leendert, Safford, David, Yoder, Kent, Catherman, Ryan \"A \nPractical Guide to Trusted Computing\", IBM Press, 2007  \n● Smith, Sean W. \"Trusted Computing Platforms: Design and Applications\", Springer Verlag, \n2005"
  },
  {
    "Modulname": "Sichere Mobile Systeme",
    "Modul Nr.": "20-00-0583",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Die integrierte Veranstaltung Sichere Mobile Systeme befasst sich mit Fragen zur Sicherheit \nin drahtlosen und Mobilen Netzen und Kommunikationssystemen. Grundlagen der Thematik \nwerden durch aktuelle Forschungsthemen ergänzt. \nLerninhalte: \n- Sicherheitsbetrachtung und Modellierung von Bedrohungen bei mobilen und drahtlosen \nSystemen \n- Ausgewählte Angriffe und Sicherheitsmechanismen spezifisch für mobile und drahtlosen \nSysteme \n- Sicherheit in drahtlosen Sensornetzen \n- Sicherheit in drahtlosen Mesh-Netzen \n- Bedrohungen und Schutz der Privatsphäre in mobilen und drahtlosen Systemen \n- Sicherheit in zellularen Netzen (GSM, UMTS, LTE) \n- Sicherheit auf der Bitübertragungsschicht \n- Ausgewählte Forschungsthemen in mobilen und drahtlosen Systemen",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden ein \nspezialiertes Wissen auf dem Gebiet der Sicherheit in mobilen, verteilten, drahtlosen Netzen \nmit dem Schwerpunkt auf Internetsicherheit. Sie können die wichtigsten Grundlagen der IT \nSicherheit, der Kryptographie sowie der Netzsicherheit in klassischen Netzen auf mobile \nSysteme übertragen und anwenden. \nDie Studierenden weisen ein tiefgehendes Verständnis von Sicherheitsmechanismen auf den \nunterschiedlichen Protokollschichten auf (Anwendungschicht, Transportschicht, \nVermittlungsschicht, Sicherungsschicht, physikalische Schicht). Somit sind sie in der Lage, \ndie Charakteristiken und Grundprinzipien des Problemraumes zu erfassen und weisen auf \ndem Feld sicherer mobiler Systeme ein fundiertes Wissen in Praxis und Theorie auf. \nModulhandbuch B. Sc./M. Sc. Informatik  75",
    "Vorraussetzungen": "Empfohlen: Grundlagen der Netzsicherheit und der Mobilen Netze",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Levente Buttyan, Jean-Pierre Hubaux: Security and Cooperation in Wireless Networks, \nCambridge University Press, 2008, ISBN: 978-0-521-87371-0 (book is available online for \ndownload). \nAusgewählte Buchkapitel und ausgewählte wissenschaftliche Veröffentlichungen."
  },
  {
    "Modulname": "Kryptoplexität",
    "Modul Nr.": "20-00-0585",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Algorithmische Komplexität von kryptographischen Bausteinen wie One-Way-Funktionen, \ndigitalen Signaturen, Commitments, Verschlüsselungen etc. Insbesondere ihre Relationen, \nz.B. ob man aus jedem Signaturverfahren auch ein Verschlüsselungsverfahren bauen kann. \nGelegentliche \"Ausflüge\" in die Komplexitätstheorie, sofern relevant.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme können die Teilnehmer abstrakte kryptographische \nEigenschaften und ihr Verhältnis untereinander beurteilen. Die lernen die Zusammenhänge \nzwischen Kryptographie und Komplexitätstheorie und werden in die Lage versetzt, unter \nSchranken in der Kryptographie mittels verschiedener Techniken zu beweisen.",
    "Vorraussetzungen": "Empfohlen: Einführung in die Kryptographie",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nModulhandbuch B. Sc./M. Sc. Informatik  77 \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Arora, Barak: Computational Complexity: A Modern Approach, 2007 (auch online \nerhältlich). \n● Balcazar, Diaz, Gabarro; Structural Complexity I und II, 1995 (nicht mehr als Hardcover \nverfügbar) \n● Katz, Lindell: Introduction to Modern Cryptography, 2007 \n● Goldreich: Foundations of Cryptography, Volume I und II, 2001 und 2004 (als Online-\nVariante erhältlich) \n● Goldreich: Computational Complexity: A Conceptual Approach, 2006 (als Online-Variante \nerhältlich)"
  },
  {
    "Modulname": "Privacy Enhancing Technologies",
    "Modul Nr.": "20-00-0599",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Überblick über Probleme des Datenschutzes, Privacy By Design \n- Anonyme Kommunikation und Zensurresistenz \n- Identitätsmanagement \n- Anonymität in Datenbanken und Data Mining \n- Kryptographische Ansätze zum Schutz sensitiver Daten \n- Location privacy",
    "Qualifikationsziele": "Studenten kennen nach dem Besuch der Vorlesung die wichtigsten Probleme mit dem \nUmgang sensitiver persönlicher Daten und verstehen die wichtigsten technischen Verfahren, \num diese Daten zu schützen.",
    "Vorraussetzungen": "Empfohlen: Computersystemsicherheit",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nModulhandbuch B. Sc./M. Sc. Informatik  79 \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Vorlesung bekanntgegeben"
  },
  {
    "Modulname": "Algorithmen und Komplexität",
    "Modul Nr.": "20-00-0627",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch",
    "Lerninhalt": "Berechenbarkeit, Komplexitätstheorie, Parametrisierte Komplexität, Randomisierte \nAlgorithmen, Parallele Algorithmen, Quanten-Algorithmen, Online-Algorithmen",
    "Qualifikationsziele": "Nach erfolgreicher Absolvierung können die Teilnehmer strukturell  an algorithmische \nProbleme herangehen. Sie lernen Effizienzkriterien für Algorithmen einzuschätzen und \nverstehen dann inhärente Schranken für Algorithmen. Sie lernen Algorithmenmodelle \nkennen und können sie anwenden.",
    "Vorraussetzungen": "Empfohlen: Algorithmische Kenntnisse wie in Einführungsveranstaltungen der Informatik",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nModulhandbuch B. Sc./M. Sc. Informatik  81 \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Arora, Barak: Computational Complexity: A Modern Approach, 2007 (auch online \nerhältlich). \n● Cormen, Leiserson, Rivest, Stein: Introduction to Algorithms, 2009. \n● Motwani, Raghavan: Randomized Algorithms, 1995. \n● Hochbaum: Approximation Algorithms for NP-hard Problems,1996. \n● Li, Vitanyi: An Introduction to Kolmogorov Complexity and Its Applications, 1997."
  },
  {
    "Modulname": "Post-Quantum Kryptographie",
    "Modul Nr.": "20-00-0632",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Fähigkeiten und Grenzen von Quantencomputern, Hash-basierte Kryptographie, Gitter-basierte \nKryptographie, multivariate Kryptographie, Code-basierte Kryptographie, kryptanalytische \nMethoden",
    "Qualifikationsziele": "Kenntnisse über quantencomputer-resistente Verfahren, Kenntnis der modernen Kryptanalyse, \nErlernen von Techniken zur Kryptanalyse und deren Anwendung in der Praxis",
    "Vorraussetzungen": "Empfohlen: \nLineare Algebra, Einführung in die Kryptographie",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0632-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0632-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Forschungsorientierte Kryptographie",
    "Modul Nr.": "20-00-0680",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch",
    "Lerninhalt": "Aktuelle Arbeiten aus dem Gebiet der Kryptographie und Komplexitätstheorie verstehen und \nneue Forschungsansätze herausarbeiten.",
    "Qualifikationsziele": "Durch eine erfolgreiche Teilnahme am Kurs werden die Teilnehmer in die Lage versetzt, \nwissenschaftliche Arbeiten weitgehend selbstständig zu lesen und wichtige Details einer \nArbeit  zu erkennen. Sie können die  Arbeiten anderer präsentieren und neue \nForschungsfragen ableiten.",
    "Vorraussetzungen": "Empfohlen:  \nEinführung in die Kryptographie \nKryptoplexität",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nModulhandbuch B. Sc./M. Sc. Informatik  84 \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Arora, Barak: Computational Complexity: A Modern Approach, 2007 (auch online \nerhältlich). \n● Balcazar, Diaz, Gabarro; Structural Complexity I und II, 1995 (nicht mehr als Hardcover \nverfügbar) \n● Katz, Lindell: Introduction to Modern Cryptography, 2007 \n● Goldreich: Foundations of Cryptography, Volume I und II, 2001 und 2004 (als Online-\nVariante erhältlich) \n● Goldreich: Computational Complexity: A Conceptual Approach, 2006 (als Online-Variante \nerhältlich)"
  },
  {
    "Modulname": "Perlen der Kryptographie",
    "Modul Nr.": "20-00-0685",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch",
    "Lerninhalt": "Herausragende Ergebnisse der Kryptographie wie Fully Homomorphic Encryption, Leftover \nHash Lemma, Non-Black-Box Constructions, Random Oracles, Multi-Party Computations, \nZero-Knowledge",
    "Qualifikationsziele": "Nach erfolgreicher Absolvierung beherrschen Teilnehmer aktuelle und wichtige Resultate \nund Techniken der Kryptographie. Sie verstehen ihre Bedeutung und können sie \nselbstständig in anderen Zusammenhängen anwenden.",
    "Vorraussetzungen": "Empfohlen: Einführung in die Kryptographie",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nModulhandbuch B. Sc./M. Sc. Informatik  86 \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Arora, Barak: Computational Complexity: A Modern Approach, 2007 (auch online \nerhältlich). \n● Balcazar, Diaz, Gabarro; Structural Complexity I und II, 1995 (nicht mehr als Hardcover \nverfügbar) \n● Katz, Lindell: Introduction to Modern Cryptography, 2007 \n● Goldreich: Foundations of Cryptography, Volume I und II, 2001 und 2004 (als Online-\nVariante erhältlich) \n● Goldreich: Computational Complexity: A Conceptual Approach, 2006 (als Online-Variante \nerhältlich)"
  },
  {
    "Modulname": "Usable Security: Sozio-technische Aspekte der Informationssicherheit",
    "Modul Nr.": "20-00-0704",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Wenn Menschen Sicherheitsmechanismen in Informationssystemen falsch verwenden – also \netwa unsichere Passwörter wählen – bricht die jeweilige Sicherheit zusammen. Effektive \nSicherheit bedeutet also insbesondere auch, dass die beteiligten Personen das Wissen und \ndie Motivation haben, die Sicherheitsmechanismen richtig zu verwenden. Diese \nVeranstaltung soll die Kompetenzen vermitteln, um in der Praxis sichere Systeme entwickeln \nund die Sicherheit von Systemen hinsichtlich ihrer Effektivität evaluieren zu können. \nDie Inhalte der Veranstaltung sind: \n● Grundlagen der Informationssicherheit in der Mensch-Computer-Interaktion \n● Grundlagen der Psychologie und weiterer sozialer Faktoren (Vertrauen, Recht) zur \neffektiven Sicherheit von Informationssystemen \n● Probleme mit und Lösungsansätze zur effektiven Sicherheit verschiedener \nSicherheitsmechanismen (z.B. Authentisierung/Passwörter und \nAutorisierung/Berechtigungen) \n● Probleme mit und Lösungsansätze zur effektiven Sicherheit in verschiedenen \nAnwendungsfeldern (z.B. Web, Social-Networks, eVoting) \n● Methoden zur Entwicklung von in der Praxis sicheren Informationssystemen \n● Methoden zur empirischen Evaluation der effektiven Sicherheit von Informationssystemen",
    "Qualifikationsziele": "Studierende erlernen in dieser Veranstaltungen die Grundlagen über die Entwicklung \npraktisch sicherer Informationssysteme. Zur Entwicklung dieser Kompetenzen erlernen sie \nden Umgang mit interdisziplinären Problemfeldern (Fokus IT-Sicherheit). Studierende \nwerden nach dem erfolgreichen Abschluss dieser Veranstaltung in der Lage sein, die \nEffektivität der Sicherheit von Informationssystemen zu evaluieren.",
    "Vorraussetzungen": "Empfohlen: Computersystemsicherheit, HCI  \nModulhandbuch B. Sc./M. Sc. Informatik  88",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "This is the main literature used throughout the lecture. However, in some lectures explicit \nreference will also be made to other literature. \n● Adams, Sasse: Users are not the enemy, Commun. ACM, 1999 \n● Herley: So Long, And No Thanks for the Externalities: The Rational Rejection of Security \nAdvice by Users, NSPW '09, 2010 \n● Cranor, Garfinkel: Security and Usability: Designing Secure Systems that People Can Use, \nO'Reilly, 2005 \n● Shostack, Stewart: The New School of Information Security, Addison-Wesley, 2008 \n● Sarodnick, Brau: Methoden der Usability Evaluation: Wissenschaftliche Grundlagen und \npraktische Anwendung, Huber 2011 \n● Lazar, Heidi, Hochheiser: Research Methods in human-computer-interaction, Wiley 2009 \n● Proceedings of the ACM SIGCHI Conference on   Human Factors in Computing Systems \n(CHI) and the    Symposium On Usable Privacy and Security (SOUPS)"
  },
  {
    "Modulname": "Sichere Kritische Infrastrukturen",
    "Modul Nr.": "20-00-0720",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Überblick über kritische Infrastrukturen und deren Sicherheitsprobleme \n- Fallbeispiel: Smart Grid \n- Fallbeispiel: Transportwesen und Logistik \n- Fallbeispiel: Telekommunikation \n- Fallbeispiel: Industrieautomation",
    "Qualifikationsziele": "Nach dem Besuch der Veranstaltung kennen die Studierenden die wichtigsten IT-\nSicherheitsprobleme im Bereich kritischer Infrastrukturen. Sie verstehen Techniken zur \nAbsicherung kritischer Infrastrukturen und sind in der Lage diese in verschiedenen Sektoren \n(wie dem Smart Grid, dem Transportwesen oder der Telekommunikation) anzuwenden.",
    "Vorraussetzungen": "Empfohlen: Computersystemsicherheit",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nModulhandbuch B. Sc./M. Sc. Informatik  90 \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekanntgegeben"
  },
  {
    "Modulname": "Physical Layer Security in Drahtlosen Systemen",
    "Modul Nr.": "20-00-0745",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Physical Layer Security Verfahren zur Absicherung drahtloser Kommunikation versprechen \neine informationstheoretische Sicherheit auf der Bitübertragungsschicht (Physical Layer). \nDie integrierte Veranstaltung betrachtet die Theorie und Praxis von Physical Layer Security. \nHierzu werden ausgewählte theoretische Grundlagen eingeführt und die Übertragung dieser \nGrundlagen hin zu praktikablen Lösungen diskutiert. Angriffe auf (praktische) Physical \nLayer Security-Verfahren werden erörtert. Theoretische und praktische Übungen sowie die \nVorstellung ausgewählter Forschungsergebnisse in Seminarvorträgen vertiefen die \nVeranstaltung. \nLerninhalte: \n- Eigenschaften des Physical Layer \n- Grundlagen informationstheorischer Sicherheit und Abgrenzung zur Kryptographie \n- Physical Layer Security Verfahren (u.a. Cooperative Jamming, Orthogonal Blinding, Zero-\nForcing, Interference Alignment, Key Extraction) \n- Praktische Aspekte von Physical Layer Security Verfahren \n- Praktische Implementierung von Physical Layer Security-Verfahren mit Software Defined \nRadios \n- Ausgewählte aktuelle Ansätze zu Physical Layer Security",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden ein \ntheoretisches Grundwissen sowie ein fundiertes praktisches Wissen auf dem Gebiet von \nPhysical Layer Security. Sie können die wichtigsten informationstheoretischen Grundlagen \nerläutern und kennen theoretische wie praktische Verfahren im Detail. Sie sind in der Lage \npraktische Verfahren zu beurteilen und Schwächen darzulegen. Die Studierenden haben \nKompetenzen in der praktischen Realisierung von Physical Layer Security-Verfahren auf \nBasis von Software-defined Radios. Sie können sich aktuelle Arbeiten zum Stand der \nModulhandbuch B. Sc./M. Sc. Informatik  92 \nForschung zu Physical Layer Security selbstständig aneignen und das erarbeitete Wissen \nverständlich vermitteln.",
    "Vorraussetzungen": "Empfohlen: Grundlagen der Mobilen Netze",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Ausgewählte Buchkapitel und ausgewählte wissenschaftliche Veröffentlichungen"
  },
  {
    "Modulname": "Network Protection and Endpoint Assesment",
    "Modul Nr.": "20-00-0749",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Verfügbarkeit und Sicherheit von IT Infrastrukturen und Diensten benötigt Techniken, um \ndie Sicherheit der beteiligten Geräte zur Laufzeit zu überwachen. Verschiedene Techniken \nzu Endpoint Assessment und Network Access Control, die auf dem jeweiligen aktuellen \nZustand der Geräte basieren, werden im Vorlesungsteil vorgestellt und im Praktikumsteil \numgesetzt.",
    "Qualifikationsziele": "Die Veranstaltung liefert Detailwissen zu neuartigen Sicherheitslösungen auf der Basis von \nTrusted Computing. Der Fokus für theoretisches Wissen und praktische Umsetzung liegt \ndabei auf Trusted Network Connect und unterschiedlichen Anwendungen von Remote \nAttestation. \nNachdem Studierende die Veranstaltung besucht haben, können sie \n• Techniken der Netzwerksicherheit und des Endpoint Assessment unterscheiden, \nvergleichen und bewerten. \n• Sicherheitsarchitekturen für Trusted Network Connect und portbasierte Zugriffskontrolle \nverstehen, deren Komponenten und Protokolle beschreiben. \n• Die zum Endpoint Assessment verfügbaren Sicherheitsmechanismen erklären und \nbewerten. \n• Anwendbarkeit von hardware-basierter Sicherheit / Trusted Platform Module im Bereich \nNetzwerksicherheit beurteilen. \n• Die Bedeutung von Metadaten für die Netzsicherheit einschätzen. \n• Techniken der Netzwerksicherheit und des Endpoint Assessment praktisch anwenden. \nModulhandbuch B. Sc./M. Sc. Informatik  94",
    "Vorraussetzungen": "Empfohlen: Vorlesung IT Sicherheit. Besuch von Secure, Trusted and Trustworthy \nComputing Teil1 ist von Vorteil",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "IEEE 802.1: 802.1X-2010 \nhttps://www.trustedcomputinggroup.org/solutions/network_access_and_identity/ \nTCG Trusted Network Connect TNC Architecture for Interoperability Specification Version \n1.5"
  },
  {
    "Modulname": "Sicherheitskonzepte im Eisenbahnbetrieb 2",
    "Modul Nr.": "20-00-0786",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Konzepte zur sicheren Anwendung von Eisenbahnsicherungsanlagen im Störungsfall. Es wird \nsich primär mit Problemsituationen sowie technischen und organisatorischen Lösungsverfahren \nfür diese befasst. Zudem werden aktuelle Forschungsthemen auf diesem Gebiet eingeführt.",
    "Qualifikationsziele": "Sicherheitskonzepte für die Nutzung von Eisenbahnsicherungsanlagen im Falle einer Störung. \nÜberblick über die Rückfallebenen und aktuelle Forschungsthemen.",
    "Vorraussetzungen": "Empfohlen: \nBesuch der Veranstaltung Sicherheitskonzepte im Eisenbahnbetrieb 1! \nGrundkenntnisse über zuverlässige Systeme (z.B. Besuch der VL Trusted Systems) und Interesse \nam Eisenbahnbetrieb.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0786-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0786-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nModulhandbuch B. Sc./M. Sc. Informatik  96 \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Zivile Sicherheit",
    "Modul Nr.": "20-00-0805",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Unter dem Begriff \"zivile Sicherheit\" versteht man neben Katastrophenschutz und \nTerrorismusbekämpfung auch die Aspekte der Sicherheit, die einen direkten Bezug zum Bürger \nund dessen Alltag aufweisen. Sie ist also auch dann bedroht, wenn der Bürger im täglichen \nLeben eine latente Unsicherheit hinsichtlich gewöhnlicher Handlungen verspürt. \nIn dieser Veranstaltung werden drei ausgewählte Szenarien der zivilen Sicherheit adressiert, die \neinen Bezug zur IT haben: Medikamentenhandel über das Internet, Versicherungsbetrug und \nGeldwäsche sowie Handel mit Antiken aus Raubgrabungen über das Internet. Dabei sind \nsowohl die Methoden der Betrüger als auch die der Betrugsaufdeckung von Interesse. Basis für \ndiese Themen sind die BMBF Forschungsprogramme zur Wirtschaftskriminalität und zur \norganisierten Kriminalität. Es sollen Technologien entwickelt, Dunkelfeldforschung betrieben \nsowie interdisziplinäre Eigenschaften bezüglich beispielsweise Recht und Wirtschaft betrachtet \nwerden. \nDie Veranstaltung kombiniert Vorlesung und Seminar. Zu Beginn wird eine Einführung in die \nThematik gegeben, in welcher unter anderem internationale Sicherheitsstrategien, \ncomputerisierte Methoden der Aufdeckung von Betrugsfällen und Aspekte des Datenschutzes \nbehandelt werden. \nIn dem anschließenden Seminar werden einzelne Themen vertieft betrachtet, wie \nbeispielsweise: \n• Umschlagplätze für Medikamente im Internet \n• Bildmanipulationen als Grundlage für Versicherungsbetrug \n• Forensische Erkennung von Identitäten \n• Ähnlichkeitssuche: Welche Methoden für Bild und Text werden in der Praxis genutzt \n• Wie schützen sich Auktionsplattformen vor illegalen Angeboten? \nDie Vertiefung geschieht auf Basis empfohlener Publikationen, von denen ausgehend der \nTeilnehmer einen Seminarvortrag und eine begleitende Ausarbeitung erstellt und diese mit den \nübrigen Teilnehmern der Veranstaltung diskutiert.",
    "Qualifikationsziele": "- Erstellen von wissenschaftlichen Kurzvorträgen \n- Verwendung von Zitaten \n- Interdisziplinäre Sicherheitsbetrachtung \n- Einsatz von Methoden der Betrugserkennung \nModulhandbuch B. Sc./M. Sc. Informatik  98",
    "Vorraussetzungen": "Empfohlen: \nHilfreich sind Grundkenntnisse in Internettechnologie und IT Security. \nFür einzelne Seminarthemen werden in der Veranstaltungen weitere Empfehlungen hinsichtlich \nder Vorkenntnisse ausgesprochen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0805-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0805-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Post-Quantum Kryptographie II",
    "Modul Nr.": "20-00-0941",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- Vertiefung von Kenntnissen über Post-Quantum Kryptographie \n- Vertiefung in Gitter-basierte Kryptographie und Analysemethoden",
    "Qualifikationsziele": "- Lesen von wissenschaftlichen Publikationen \n- Selbstständges Verstehen von aktuellen Forschungsergebnissen \n- Präsentieren von selbstständig erarbeiteten Wissen",
    "Vorraussetzungen": "Empfohlen: \nLineare Algebra \nEinführung in die Kryptographie \nPost-Quantum Kryptographie",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0941-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0941-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  100",
    "Literatur": ""
  },
  {
    "Modulname": "Schutz in vernetzten Systemen—Vertrauen, Widerstandsfähigkeit und Privatheit",
    "Modul Nr.": "20-00-0969",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "- Schutz in vernetzten Systemen: Hintergrund, Motivation und Herausforderungen \n- Vertrauen (Computational Trust): Modelle und Mechanismen \n- Vertrauen (Computational Trust): PKI-Anwendungen, Cloud Computing, Reputationssysteme \nund Web Services \n- Vertrauen: Verwaltung von Enttäuschungen and Komfort von Geräte \n- Privatheit: Definitionen, Modelle, Daten-Anonymität und Kommunikations-Anonymität \n- Privatheit und Vertrauen: Privatheit-respektierende Vertrauensmodelle, Mechanismen und \nAnwendungen für Identitätsmanagement \n- Sicherheit &amp; Ökonomie \n- Widerstandsfähigkeit: Modelle, Netzwerk-Angriffserkennungs-Systeme, kollaborative \nAngriffserkennung, Honeypots \n- Resilient networks",
    "Qualifikationsziele": "Die integrierte Veranstaltung Schutz in vernetzten Systemen—Vertrauen, Widerstandsfähigkeit \nund Privatheit deckt die Themenbereiche berechenbares Vertrauen (computational trust), \nWiderstandsfähigkeit (resilience), anonyme Netzwerke, sowie kollaborative \nSchutzmechanismen ab. Mit der Teilnahme an diesem Kurs wird das Verständnis von \nHerausforderungen und Lösungen im Kontext von vernetzten Systemen vermittelt. Dieser Kurs \nbetrachtet das Konzept von Ende-zu-Ende Systemen mit Schwerpunkt auf Nutzer, Geräte, \nNetzwerke, sowie Anwendungen und Dienste.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0969-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  102",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0969-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "- Trust and Reputation for Service-Oriented Environments: Technologies For Building Business \nIntelligence And Consumer Confidence, Elizabeth Chang, Tharam Dillon, and Farookh K. \nHussain, 374 pages, 2006. ISBN: 978-0-470-01547-6 \n- On anonymity in an electronic society: A survey of anonymous communication systems, \nMatthew Edman and Bülent Yener, ACM Computing Surveys, Vol. 42, Issue 1, 2009. \n- Taxonomy and Survey of Collaborative Intrusion Detection, Emmanouil Vasilomanolakis, \nShankar Karuppayah, Max Mühlhäuser, Mathias Fischer, ACM Computing Surveys, Vol. 47 \nIssue 4, 2015. \n- Selected book chapters and scientific publications"
  },
  {
    "Modulname": "Secure Computation",
    "Modul Nr.": "20-00-0991",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Sicheres Rechnen ist ein wichtiges kryptographisches Verfahren zum Erstellen von \nAnwendungen, die kritische Daten auf Rechnern verarbeiten, die nicht vertrauenswürdig sind. \nIn der Vorlesung werden die grundlegenden Konzepte des \"Sicheren Rechnens\" vorgestellt: \ninsbesondere Konstruktionen basierend auf homomorpher Verschlüsselung sowie auf \"garbled \ncircuits\". Darüberhinaus werden prominente Anwendungen vorgestellt sowie \nProgrammierwerkzeuge für das sichere Rechnen besprochen.",
    "Qualifikationsziele": "Grundkenntnisse in den wichtigsten Protokollen des sicheren Rechnens; Verständnis der \nMöglichkeiten sowie der Limitierungen der Technik; Anwenden von Verfahren des sicheren \nRechens auf verschiedene Szenarien.",
    "Vorraussetzungen": "Empfohlen: \nKenntnisse in der Kryptographie etwa duch Besuch der Vorlesung \"Einführung in die \nKryptographie\"",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0991-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0991-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  104 \nB. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Kryptographie in der Praxis",
    "Modul Nr.": "20-00-0993",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Schlüsselableitung, Schlüsselaustausch, sichere Kommunikation, credentials, crypto currencies \n(TLS, SSH, IPSec, Bitcoin,…).",
    "Qualifikationsziele": "Nach erfolgreicher Absolvierung verstehen die Teilnehmer das Design und die \nSicherheitsgarantien von kryptographischen Verfahren in der Praxis, die heutzutage im \nalltäglichen Einsatz sind. Die Teilnehmer lernen die Bedeutung und Grenzen von \nSicherheitsmodellen und Sicherheitsbeweisen für die Praxis kennen.",
    "Vorraussetzungen": "Empfohlen: \nEinführung in die Kryptographie",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0993-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0993-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  106",
    "Literatur": ""
  },
  {
    "Modulname": "Sichere kritische Infrastrukturen am Beispiel Eisenbahn",
    "Modul Nr.": "20-00-1007",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Grundlagen der Steuerungssysteme, Datennetze und des Eisenbahnwesens; Safety; Security; \nStandardisierung; Rechtliche Aspekte und Zulassung; Philosophische Aspekte \nInhalte: \nEinführung \n- Überblick über die Vorlesungsthemen \n- Begriffe Betriebssicherheit (Safety) und Angriffssicherheit (Security) \nGrundlagen der Steuerungssysteme kritischer Infrastrukturen \n- Merkmale kritischer Infrastrukturen \n- Genereller Aufbau von Steuerungssystemen, wie sie in Systemen des Eisenbahnwesens, aber \nauch anderen kritischen Infrastrukturen zum Einsatz kommen \n- Rolle der Software \nGrundlagen Datennetze \n- OSI Modell mit Fokus auf Schicht 2 \n- Bussysteme (PROFINET) \nGrundlagen Eisenbahnwesen \n- Zusammenspiel Ortsfeste Anlagen, Signaltechnik, Fahrzeuge \n- Eisenbahnbetrieb \nSafety \n- Methoden des Safetyengineerings \n- Zusammenspiel von Hard- und Software \n- Softwaresicherheit (EN 50 128) \n- Failure Mode and Effects Analysis (FMEA) \nSecurity \n- Organisatorische Anforderungen an Betreiber kritischer Infrastrukturen \n- Technische Anforderungen an Produkt- und Systemhersteller \n- Threat & Risk Analysis \nStandardisierung \nModulhandbuch B. Sc./M. Sc. Informatik  108 \n- Detaillierung der bei den Kapiteln Safety und Security eingeführten Normen \n- Zweck von Normen \n- Zusammenspiel deutsche (DKE), europäische (CENELEC) und weltweite (IEC) Normung \nRechtliche Aspekte und Zulassung \n- Zulassung am Beispiel EBA \n- Anwendung der in den Safetykapiteln erarbeiteten Inhalte \n- Security: Gesetz zum Schutz kritischer Infrastrukturen und europäische NIS Direktive. \nPhilosophische Aspekte \n- Philosophische Abhandlung des Sicherheitsbegriffes \n- Würde des Menschen vs. kosteneffiziente Bereitstellung kritischer Infrastrukturen \n- Herausforderungen bei der Zulassung von Systemen mit künstlicher Intelligenz für kritische \nInfrastrukturen \nZusammenfassung und Ausblick \n- Zusammenfassung der Vorlesungsinhalte \n- Offene Forschungsfragen",
    "Qualifikationsziele": "- Rolle von Hardware, Steuerungssoftware und Netzwerktechnologie bei kritischer Infrastruktur \n- Überblick über das Eisenbahnwesens \n- Methoden des Nachweises der Betriebssicherheit bei kritischer Infrastruktur (Safety) \n- Methoden zum Schutz kritischer Infrastruktur gegen Angreifer (Security) \n- Vorgehen bei der Standardisierung \n- Kennenlernen von rechtlichen und philosophischen Aspekten rund um kritischer Infrastruktur",
    "Vorraussetzungen": "Empfohlen: \nGrundlagen der Informatik (Embedded Systems, Kommunikationsnetze, Software-Engineering, \nIT-Security)",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1007-vl] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1007-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  109",
    "Literatur": ""
  },
  {
    "Modulname": "Cryptocurrencies",
    "Modul Nr.": "20-00-1010",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Konzepte von Kryptowährungen: \n- Kryptographische Bausteine: Kryptographische Hashfunktionen, Signaturen, Blinde \nSignaturen, Commitments \n- Chaum’s eCash Verfahren und dessen Sicherheitseigenschaften \n- Verteilte System und Fehlermodelle \n- Broadcast- und Konsensusverfahren \n- Einführung in Bitcoin und dessen Konsensusverfahren \n- Mining Bitcoins und sicheres Speichern von Bitcoins \n- Anonymität in Kryptowährungen \n- Angriffe auf Kryptowährungen \n- Smart Contracts und Anwendungen \n- Skalierbarkeit von Kryptowährungen \n- Altcoins and Blockchain ecosystem",
    "Qualifikationsziele": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die technischen und \ntheoretischen Grundkonzepte von kryptographischen Währungen. Insbesondere lernen sie: \n• Den Umgang mit kryptographischen Bausteinen und deren formale Sicherheitsanalyse mittels \nBeweise \n• Die Entwicklung kryptographischer Protokolle und verteilter Systeme \n• Die Grundkonzepte Blockchain-basiertere Kryptowährungen insbesondere der Konsensus \nMechanismen \n• Mögliche Angriffe auf Bitcoin und die zugrundeliegende Technologie \n• Die Grundkonzepte der Entwicklung von Smart Contracts und deren Anwendung \n• Neue Lösungsansäte zur Verbesserung von Kryptowährungen hinsichtlich Anonymität, \nSkalierbarkeit und Sicherheit \n• Eine Übersicht über verschiedene Altcoins und deren Vorteile/Nachteile",
    "Vorraussetzungen": "Modulhandbuch B. Sc./M. Sc. Informatik  111 \nEmpfohlen: \nBesuch der Vorlesung “Introduction to Cryptography / Einführung in die Kryptographie” bzw. \nentsprechende Kenntnisse aus anderen Studiengängen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1010-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1010-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, ein Beispiel für verwendete Literatur \nkönnte sein: \nBitcoin and Cryptocurrency Technologies: A Comprehensive Introduction Arvind Narayanan, \nJoseph Bonneau, Edward Felten, Andrew Miller & Steven Goldfeder"
  },
  {
    "Modulname": "Sicherheitskritische Mensch-Computer-Interaktion",
    "Modul Nr.": "20-00-1025",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Diese Lehrveranstaltung gibt eine fundierte und praxisbezogene Einführung sowie einen \nÜberblick über Grundlagen, Methoden und Anwendungen der Mensch-Computer-Interaktion im \nKontext von Sicherheit, Notfällen, Krisen, Katastrophen, Krieg und Frieden. Dies adressierend \nwerden interaktive, mobile, ubiquitäre und kooperative Technologien sowie Soziale Medien \nvorgestellt. Hierbei finden klassische Themen wie benutzbare (IT-)Sicherheit, Industrie 4.0, \nKatastrophenschutz, Medizin und Automobil, aber auch Augmented Reality, Crowdsourcing, \nShitstorm Management, Social Media Analytics und Cyberwar ihren Platz. Methodisch wird das \nSpektrum von Usable Safety- bis Usable Security Engineering von Analyse über Design bis \nEvaluation abgedeckt. \nDetails für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
    "Qualifikationsziele": "• Verständnis sicherheitskritischer MCI und der zugrundeliegenden Disziplinen MCI sowie \nKrisen- und Sicherheitsmanagement \n• Überblick über ausgewählte Grundlagen und Methoden sicherheitskritischer MCI (Usable \nSafety; Usable Security; Analyse, Design, Umsetzung, Evaluation; Recht, Ethik und Kultur) \n• Orientierung in Anwendungsdomänen und -feldern \n• Kenntnisse über sicherheitskritische interaktive Systeme (Betriebliche Informationssysteme, \nKrisenmanagementsysteme, Medizintechnik, Warn- und Assistenzsysteme) \n• Kenntnisse über sicherheitskritische kooperative Systeme (Soziale Medien, \nKooperationssysteme, Freiwillige Partizipation, Frieden und Sicherheit)",
    "Vorraussetzungen": "Empfohlen: \nGrundlagen der Informatik",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1025-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  113",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1025-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Informationstechnologie für Frieden und Sicherheit",
    "Modul Nr.": "20-00-1026",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Grundlagen: Friedens-, Konflikt- und Sicherheitsforschung \no (Naturwissenschaftliche) Friedensforschung \no Informatische Friedensforschung \n- Informatik in Militär, Krieg und Konflikten \no Militärische Nutzung von Informatik und Dual-Use-Problematik \no Cyberwar: Konflikte im Cyberspace mit Information Warfare, Vulnerabilität und Resilienz \nkritischer (IT-)Infrastrukturen, Fake News und Social Bots \no Terrorismus und terroristische Propaganda in sozialen Medien \n- Informatik und Frieden \no Mensch-Computer-Interaktion zur Friedensförderung \no IT im Kontext politischer Aktivisten \no Bekämpfung terroristischer Propaganda in sozialen Medien \nThemen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
    "Qualifikationsziele": "- Kenntnisse von Grundlagen der informatischen Friedens-, Konflikt- und Sicherheits-forschung \n- Bewertung von IT zur Förderung oder Verhinderung von Frieden und Sicherheit \n- Kenntnisse in der Gestaltung und Entwicklung von IT für Frieden",
    "Vorraussetzungen": "Empfohlen: \nGrundlagen der Informatik",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1026-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  115 \nBausteinbegleitende Prüfung:  \n  [20-00-1026-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Kryptographische Protokolle",
    "Modul Nr.": "20-00-1032",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Kryptographische Protokolle erlauben es mehreren Parteien mit möglicherweise \nunterschiedlichen Interessen, gemeinsam bestimmte Aufgaben zu erfüllen. Diese \nLehrveranstaltung behandelt grundlegende und fortgeschrittene kryptographische Protokolle \nund ihre Anwendungen, wie z.B. Commitments, Secure Coin Flipping, Zero-Knowledge \nBeweise, Mixnetze, Anonyme Credentials, Private Information Retrieval, Sichere \nMehrparteienberechnungen und Hardware-unterstützte kryptographische Protokolle.",
    "Qualifikationsziele": "Studierende kennen grundlegende und fortgeschrittene kryptographische Protokolle, können \nderen Effizienz und Sicherheit bewerten und vergleichen, und kennen deren grundlegenden \nAnwendungen.",
    "Vorraussetzungen": "Empfohlen: \nGrundkenntnisse der Kryptographie werden sehr empfohlen, z.B. durch erfolgreiches Bestehen \nder Veranstaltung \"Einführung in die Kryptographie\".",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1032-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1032-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  117 \nB. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit",
    "Literatur": ""
  },
  {
    "Modulname": "Beweisbare Sicherheit",
    "Modul Nr.": "20-00-1051",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "In dieser Vorlesung wird gezeigt, wie man Sicherheitseigenschaften von \nkryptografischen Protokollen formal beweisen kann. Dabei konzentrieren \nwir uns auf starke Sicherheitsgarantien und realistische \nAngreifermodelle und lernen verschiedene Beweistechniken kennen. Die \nerlernten Techniken werden wir auf teils real eingesetzte \nVerschlüsselungsverfahren anwenden und so eine gute Vorstellung von \nderen Sicherheitseigenschaften erhalten. \n(1) Einführung beweisbare Sicherheit \n* Definition von Sicherheit \n* Einführung Sicherheitsparameter und PPT Angreifer \n* Der Begriff der Reduktion \n* Kryptographische Annahmen (Faktorisieren, diskrete Logarithmen) \n* IND-CPA Sicherheit und das ElGamal Verschlüsselungsverfahren \n* Beweis durch Reduktion: ElGamal ist IND-CPA-sicher unter der \nDecisional Diffie-Hellman Annahme (DDH) \n(2) IND-CCA Sicherheit \n* ElGamal ist nicht IND-CCA sicher \n* Das Verfahren von Naor und Yung \n* Das Verfahren von Cramer und Shoup \n(3) Das Random-Oracle Modell (ROM) \n* Einführung ROM \n* Hashfunktionen \n* Ist das ROM sinnvoll? \n* IND-CPA und IND-CCA Sicherheit von RSA-OAEP im ROM \n(4) Simulationsbasierte Sicherheit \n* Vergleich simulationsbasierte und spielbasierte Sicherheitsdefinition \n* Komponierbare Sicherheitsdefinitionen \n* Das Universal Composability Framework \n* Programmierbare Random Oracles \n* Sicherer Nachrichtentransfer im (programmierbaren) ROM \nModulhandbuch B. Sc./M. Sc. Informatik  119",
    "Qualifikationsziele": "Nachdem die Studierenden die Vorlesung besucht haben können sie \n- verschiedene Sicherheitsdefinitionen von Verschlüsselungsverfahren wiedergeben und \nvergleichen \n- beschreiben, welche Voraussetzungen hinreichend sind, um starke Sicherheitseigenschaften zu \nerreichen \n- formale Sicherheitsbeweise für einige Verschlüsselungsverfahren präsentieren",
    "Vorraussetzungen": "Empfohlen, aber nicht notwendig: \"Einführung in die Kryptographie\"",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1051-vl] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1051-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Srudiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Grundlagen des Symmetrischen Kryptographischen Designs",
    "Modul Nr.": "20-00-1062",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In diesem Kurs werden die Studenten in die Grundlagen der symmetrischen Kryptographie \neingeführt. Der Fokus wird auf dem Design verschiedener Typen von \nVerschlüsselungsverfahren, kollisionsresistenten Hashfunktionen und \nNachrichtenauthentifizierungscodes (MACs) aus grundlegenden Primitiven wie Blockchiffren \nund universellen Hashfunktionen liegen. \nWir werden insbesondere die neuesten kryptographischen Verfahren wie GCM, HMAC, OCB, \nSHA3 und SIV untersuchen, die heute verwendet werden. Der Kurs wird unter Verwendung der \nMethode der beweisbaren Sicherheit mit einem Ausblick auf die kryptografische Praxis \ndurchgeführt, wobei auch praktische Angriffe auf solche kryptografische Verfahren behandelt \nwerden. Dieser Kurs beinhaltet jedoch nicht das Design von Blockchiffren oder deren \nKryptanalyse.",
    "Qualifikationsziele": "Die Studenten lernen die notwendigen Werkzeuge und Abstraktionen, um moderne \nkryptografische Designs und die Hintergründe für ihr Design zu verstehen. Außerdem werden \ndie Studierenden mit der Methode der beweisbaren Sicherheit vertraut gemacht und erfahren, \nwie Kryptosysteme in der Praxis scheitern können. Dieser Kurz befähigt NICHT dazu, neue \nkryptografische Designs zu entwerfen.",
    "Vorraussetzungen": "Empfohlen wird mindestens eine der folgenden Vorlesungen: \nEinführung in die Kryptographie, Kryptographie in der Praxis und Kryptoplexität.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1062-vl] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  121 \nBausteinbegleitende Prüfung:  \n  [20-00-1062-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Hardware-orientierte Sicherheit",
    "Modul Nr.": "20-00-1082",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "• Zufallszahlengeneratoren \n• Physically Unclonable Functions \n• Hardware-Trojaner \n• Seitenkanalangriffe gegen kryptographische Implementierungen \n• Trusted Platform Modules und Trusted Execution Environments \n• Techniken des Remote Attestation \n• Covert Channels \n• Effiziente Implementierung kryptographischer Verfahren",
    "Qualifikationsziele": "Kenntnisse: \nDie Studierenden erwerben grundlegende Kenntnisse im Bereich der hardware-orientierten \nSicherheit: Mit diesen Verfahren können effektiv moderne Rechnerplattformen abgesichert \nwerden. Sie lernen verschiedene Klassen von Verfahren der Hardware-Sicherheit kennen und \nkönnen diese auf neue Problemstellungen anwenden. \nFähigkeiten: \nDie Studierenden lernen Einsatzbereiche von Techniken der hardware-orientierten Sicherheit \nkennen. Sie erwerben die Fähigkeit, die besprochenen Techniken in der Praxis umzusetzen. \nKompetenzen: \nDie Studierenden lernen die Sicherheit von Methoden der hardware-basierten Sicherheit zu \nbeurteilen und die für einen Anwendungsfall geeigneten Methoden auszuwählen.",
    "Vorraussetzungen": "Empfohlen: Fortgeschrittene IT-Security",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  123 \n  [20-00-1082-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1082-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Privatheit biomedizinischer Daten",
    "Modul Nr.": "20-00-1084",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Grundlagen Genetik, Epigenetik \nGrundlagen Bioinformatik in der Humanmedizin \nBiomedizinische Sensorik \nDas TMF-Konzept zum Datenschutz \nPrivacy Metriken \nSecure-Multi-Party-Computations",
    "Qualifikationsziele": "Die Studierenden können aktuelle Forschungsliteratur erfassen und Technologieentwicklungen \nhinsichtlich ihrer Datenschutzniveaus im Bereich der Biomedizin unterscheiden. \nSie können weiterhin anhand der erläuterten Grundlagen potentielle Re-Identifikationsrisiken \neinschätzen und Mechanismen zu deren Behebung konzeptionell vorschlagen. \nSie können weiterhin einfach Abfragen/Auswertungen/Studien-Designs hinsichtlich ihrer \nPrivacy-Implikationen einschätzen.",
    "Vorraussetzungen": "Empfohlen: Grundlagen der Kryptographie",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1084-vl] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1084-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%) \nModulhandbuch B. Sc./M. Sc. Informatik  125",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Cyber Range",
    "Modul Nr.": "20-00-1096",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Der Kurs basiert auf der Fraunhofer Cyber Range-Plattform, einer  \nSimulationsumgebung für Sicherheitstrainings. Die Plattform kann  \nUnternehmensnetzwerke verschiedener Größen simulieren und darin echte  \nMalware ausführen und Sicherheitsprobleme simulieren. In verschiedenen  \nSzenarien müssen Studenten das Netzwerk überwachen, Sicherheitsprobleme  \nzeitnah erkennen, analysieren und geeignete Gegenmaßnahmen treffen.  \nDie Studenten werden alleine als auch in Gruppen mit realer  \nSIEM-/Monitoring-Software arbeiten. Von dort ausgehend werden sie eine  \nReihe von Untersuchungen durchführen an einer Vielzahl von Linux- und  \nWindows-basierten Systemen, um die Ursachen für Sicherheitsprobleme zu  \nentdecken. Während den Untersuchungen setzen sie dabei eine Vielzahl von  \nStandard-Systemwerkzeugen und spezielle forensische Software ein. Am  \nEnde eines jeden Szenarios werden sie die Ursachen der  \nSicherheitsprobleme beheben und das Netzwerk geeignet absichern.  \nEin Trainer wird die Studenten während den Szenarien unterstützen und  \nanleiten, gefundene Schwachstellen in dem System wie in einem SOC  \nordnungsgemäß zu dokumentieren. Für die Dokumentation vergibt das System  \nautomatisiert Punkte.  \nDer Kurs wird eine ganze Woche am Fraunhofer-Institut für Sichere  \nInformationstechnologie stattfinden und enthält sowohl Vorlesungsanteile als auch praktische \nAnteile. Studenten bekommen eine Einführung  \nin die verwendete Software, aber der Fokus des Kurses ist die Anwendung  \nvon Sicherheitswissen in der Simulationsumgebung unter Anleitung eines  \nTrainers.  \nDie Inhalte der Szenarien enthalten unter anderem grundlegende  \nNetzwerkprobleme wie unerwartete Dienstausfälle, Web Defacement,  \nSQL-Injections als auch fortgeschrittene Themen wie  \nMalware/Ransomeware-Ausbrüche, forensische Malware-Analysen und  \nErkennung von Man-in-the-Middle-Angriffen. Die meisten Szenarien sind  \n\"Blue Team\"-Szenarien, in denen Studenten ein Netzwerk verteidigen  \nModulhandbuch B. Sc./M. Sc. Informatik  127 \nmüssen. Einige \"Red Team\"-Szenarien runden den Kurs ab, bei denen  \nStudenten selbst in Systeme eindringen müssen.",
    "Qualifikationsziele": "* Grundlegende Bedienung von SIEM-/Netzwerküberwachungssoftware \n* Verständnis für Netzwerkanalyse \n* Wissen über grundlegende forensische Methoden zur Analyse von Windows- \nund Linux-Systemen \n* Umgang mit grundlegender Malware-Analyse \n* Umgang mit netzwerkbasierten Sicherheitsproblemen",
    "Vorraussetzungen": "Empfohlen werden:  \n* Fortgeschrittene Netzwerkkenntnisse \n* Grundlegendes Wissen über Linux- und Windows-Administration, \ninsbesondere Log-Analyse \n* Programmierkenntnisse in mehreren Programmier- und Skriptsprachen \n* Kenntnisse über relationale Datenbanksysteme \n* Grundlegende Assembler-Kenntnisse",
    "Prüfungsform": "Modulabschlussprüfung: \n  Modulprüfung (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Modulabschlussprüfung:  \n  Modulprüfung (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Netz-, Verkehrs- und Qualitäts-Management für Internet Services",
    "Modul Nr.": "20-00-0056",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Einführung in das Management von Internet Service Provider (ISP-)Netzen zur Integration \nvon Service Plattformen mit ihren Qualitäts- und Verkehrsprofilen",
    "Qualifikationsziele": "Stoffplan:  \nAnforderungen und Maßnahmen zur Sicherung der Quality-of-Service (QoS) \n- Kriterien aus Anwendungs- & Nutzer-Sicht (QoE: Quality of Experience)  \n- QoS Architektur in IP-Netzen: Differentiated & Integrated Services  \n- QoS Support & Auswirkung je Anwendung im IP Verkehrs-Mix     \n(Video-Streaming, VoIP, Web Browsing, Downloads, Social Networking etc.)  \nQualitätssicherung für Internet Services in ISP Netzinfrastrukturen  \n- Einfluss der Netz- und Transportebene:  \nRouting (OSPF, BGP), Multiprotocol Label Switching (MPLS), TCP  \nmit Absicherung gegen Fehler und Ausfälle  \n- Messung, Monitoring, Optimierung von IP Verkehr bzgl. QoS  \nQualitätssicherung in Service Overlays und auf Anwendungsebene  \n- Content Delivery Netze (CDN), Clouds und Peer-to-Peer Netze (P2P)  \ninkl. verteilter Caches, Transportpfad-Optimierung, Skalierbarkeit  \n- IETF Standardisierung (CDN Interconnection, ALTO: Appl. Layer Traffic Opt.)",
    "Vorraussetzungen": "Empfohlen: \nModulhandbuch B. Sc./M. Sc. Informatik  130 \nVorwissen: Grundlegende Kenntnisse der Informatik und Internet-Anwendungen werden \nvorausgesetzt. Die Vorlesungen Kommunikationsnetze I und II sind empfohlen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0056-vl] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0056-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "",
    "Literatur": "Wird in der Vorlesung angesprochen"
  },
  {
    "Modulname": "TK1: Verteilte Systeme und Algorithmen",
    "Modul Nr.": "20-00-0065",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Lernziele: \n● Umfassendes Überblickswissen über die grundlegenden Probleme und Ansätze \n● Tiefgehendes Methodenwissen zu klassischen verteilten Algorithmen und \nProgrammierparadigmen \n● Anwendbare exemplarische Kenntnis aktueller Entwicklungen und Standards \nStoffplan: \n● Einführung \n● Auffrischung und Ergänzung von Kapitel 1 der Kanonik Net-Centric Computing \n● Überblick über die Vorlesung \n● Verteilte Algorithmen \n○ Elementaralgorithmen (z.B. globaler Zustand) \n○ Basisalgorithmen (z.B. Ausschluss, Konsens, Kooperation) \n○ Formalisierung (Eigenschaften und deren Nachweis) \n● Verteiltes Programmieren \n○ Push-Paradigmen (z.B. IPC, RPC, DOC) \n○ aktuelle Ansätze (z.B. Pull-Paradigmen, Objektmobilität)",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die Grundlagen der \nverteilten Programmierung und verteilter Algorithmen. Sie verstehen die grundlegenden \nModulhandbuch B. Sc./M. Sc. Informatik  132 \nProbleme verteilter Systeme und die klassischen verteilen Algorithmen und \nProgrammierparadigmen. Sie können klassische und aktuelle Standards verteilter \nProgrammierung praktisch anwenden.",
    "Vorraussetzungen": "Empfohlen:  „Computer-Netzwerke und verteilte Systeme“",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete \nLiteratur könnten sein: \n● George Coulouris, Jean Dollimore, Tim Kindberg: Distributed Systems. Concepts and \nDesign (Gebundene Ausgabe) 832 Seiten, Addison Wesley; Auflage: 4th (14. Juni 2005), \nISBN: 0321263545 \n● M. Boger: Java in verteilten Systemen, 1999, dpunkt-Verlag, Heidelberg, ISBN: \n3932588320 \n● G. Tel: Introduction to Distributed Algorithms, 2nd Ed 2001, Cambridge University Press, \nISBN: 0521794838 \nModulhandbuch B. Sc./M. Sc. Informatik  133 \n● A. Tanenbaum, M.v.Steen, Verteilte Systeme: Grundlagen und Paradigmen, Pearson \nStudium 2003, ISBN: 3827370574 \n● A. Tanenbaum: Computernetzwerke. 4te Auflage. Pearson Studium 2003, ISBN-10: \n3827370469 \n● J. Kurose, K. Ross: Computer Networking, 1. Ed. 2000, Adison-Wesley. ISBN: 0201477114 \n● L. Peterson, B. Davie, Computernetze, 1. Aufl. 2000, dpunkt Heidelberg, ISBN: \n393258869X \n● Hammerschall, U.: Verteilte Systeme und Anwendungen. Pearson, München 2005, ISBN: \n3827370965"
  },
  {
    "Modulname": "TK3: Ubiquitous / Mobile Computing",
    "Modul Nr.": "20-00-0120",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "●  Kenntnis technischer Grundlagen der Mobilkommunikation \n● Kenntnis wichtiger Herausforderungen, Thesen und Modelle des Ubiquitous Computing \n● Methodenwissen über aktuelle Ansätze des Ubiquitous Computing \nStoffplan: \n● Einführung in Ubiquitous Computing \n○ Definitionen und Bedeutung \n○ Herausforderungen und Klassifikation \n○ Wichtiges zur historischen Entwicklung (Mark Weiser u.a.) \n○ Von Terminologie zu Taxonomie \n○ Referenzarchitekture \n● Mobilkommunikation als ‘Enabling Technology’ \n○ Einordnung und physikalische Grundlagen \n○ Elementare Mehrfachzugriffs- und Modulationsverfahren \n○ Zellulare Weitverkehrsnetze: von GSM bis LTE \n○ Drahtlose lokale Netze: wLAN, Bluetooth und ZigBee \n● Internet-of-Things: RFID und Smart Items \n○ Grundlagen von RFID-Systemen \n○ EPC und Smart Items \n○ NFC: Nahfeld-Kommunikation \nModulhandbuch B. Sc./M. Sc. Informatik  135 \n● Service Discovery und Cloudlets \n○ Grundlagen der Skalierbarkeit im Ubiquitous Computing \n○ Service Discovery: Grundlagen \n○ Service Discovery: konkurrierende Ansätze \n○ Cloudlets: Forschungsansätze für Ubiquitous Cloud Computing \n● Context- und Location Aware Computing \n○ Grundlagen der Adaptivität in Ubiquitous Computing \n○ Kontext-Modelle und Ansätze für Context-Aware Computing \n○ Technische Grundlagen der Ortsbestimmung und Location Awareness \n● Mensch-Maschine-Interaktion für Ubiquitous Computing \n○ Einführung: Ease-of-Use und Post-Desktop-Interaktion \n○ Interaction Design und Mulitmodale Interaktion \n○ Grundlagen von Multitouch-Systemen \n○ Pen-and-Paper-Interaktion und Tangible Interaction \n○ UI Design: Evaluationstechniken \n○ Systematisches UI Engineering \n● Privatsphäre und Vertrauen im Ubiquitous Computing \n○ Einführung in Privacy und rechtliche Grundlagen \n○ Zum Wesen personenbezogener Daten \n○ Privacy-Enhancing Technologies (PETs) und Anonyme Kommunikation \n○ Einführung in Vertrauen und Reputation \n○ Vertrauensmodelle und Computational Trust \n○ Trust-Management-Systeme",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die technische Grundlage \nmobiler Kommunikation. Sie verstehen die grundlegenden Herausforderungen von \nUbiquitous Computing. Sie kennen aktuelle Ansätze um diese Herausforderungen zu lösen. \nSie sind außerdem in der Lage ihre Kenntnisse auf aktuelle Probleme anzuwenden.",
    "Vorraussetzungen": "Empfohlen:  „Computer-Netzwerke und verteilte Systeme“",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  136",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete \nLiteratur könnten sein: \nA Primärliteratur: \nHandbook of Research: Ubiquitous Computing Technology for Real Time Enterprises edited \nby Prof. Dr. Max Mühlhäuser, Dr. Iryna Gurevych, 2008, Information Science Reference, \nISBN-10: 1599048329 \nB Sekundärliteratur:  \n1. F. Adelstein, S. Gupta et al.: Fundamentals of Mobile & Pervasive Computing McGraw \nHill 2004, \n2. Stefan Poslad: Ubiquitous Computing, Wiley 2009, ISBN 978-0-470-03560-3 \n3. Kapitel Mobilkommunikation: M. Sauter: Grundkurs Mobile Kommunikationssysteme: \nUMTS, HSDPA und LTE, GSM, GPRS und Wireless LAN; Vieweg-Teubner Studium 2010 \n4. J. Krumm (Ed.): Ubiquitous Computing Fundamentals, CRC Press 2010 \nD. Cook, S. Das (Ed.): Smart Environments, Wiley 2005"
  },
  {
    "Modulname": "Ubiquitous Computing in Geschäftsprozessen",
    "Modul Nr.": "20-00-0121",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "●  Nutzungsmöglichkeiten aktueller Ubiquitous Computing Technologien in \nGeschäftsprozessen und im Bereich von Smart Cities \n● Ermittlung des ökonomischen Potentials verschiedener Ubiquitous Computing \nTechnologien im Kontext verschiedener Geschäftsprozesse und im Bereich von Smart Cities \n● Verständnis der grundlegenden Technologien und Darstellung der mit diesen \nverbundenen Vorteile, Herausforderungen und Anwendungsfälle \n● Spezifische Technologien wie RFID, Smart Items (z.B. Smart Shelf) etc. und ihre \nIntegration in Prozesse \n● Darstellung der Integration zwischen physischer und virtueller Welt, wie sie z.B. in \naktuellen Enterprise Software Systemen realisiert wird \n● Sammeln praktischer Erfahrungen im Umgang mit Ubiquitous Computing Technologien \nim Kontext verschiedener Anwendungsfälle, z.B. mittels Live-Demonstrationen",
    "Qualifikationsziele": "Nach der Teilnahme an dieser Lehrveranstaltungen haben sich Studierende Kenntnissen \nüber Auswirkungen des ubiquitären Computing auf Geschäftsprozesse und Smart Cities in \nVerbindung mit grundlegenden Konzepten angeeignet",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  138",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Mühlhäuser, M.; Gurevych, I. (Eds.): Ubiquitous Computing Technology for Real Time \nEnterprises Information Science Reference, Dezember, 2007 \n● Finkenzeller, K: RFID-Handbuch. Grundlagen und praktische Anwendungen von \nTranspondern, kontaktlosen Chipkarten und NFC. Hanser Fachbuch; Auflage: 5., aktual. u. \nerw. Aufl. (1. Oktober 2008) \n● Fleisch, E.; Mattern, F. (Hrsg.): Das Internet der Dinge: Ubiquitous Computing und RFID \nin der Praxis, Springer, Berlin, Heidelberg, New York 2005 \n● Österle, H.; Fleisch, E.; Alt, R.: Business Networking – Shaping Collaboration between \nEnterprises, Springer \n● Callaway, E.H.: Wireless Sensor Networks: Architectures and Protocols, Auerbach \nPublications"
  },
  {
    "Modulname": "Resiliente Netzwerke",
    "Modul Nr.": "20-00-0710",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Englisch",
    "Lerninhalt": "Die Veranstaltung Resilient Networking bietet einen Überblick über Grundlagen sicherer \nNetzwerke sowie über aktuelle Bedrohungen und mögliche Gegenmaßnahmen. So stellen \nvor allem bandbreitenerschöpfende Denial of Service Angriffe eine große Bedrohung in \ngegenwärtigen Netzen dar. Des Weiteren konnte man über die letzten Jahre auch eine \nstetige Zunahme sehr zielgerichteter Angriffe auf Unternehmens- und Regierungsnetze \nbeobachten. Trotz aller dieser Unzulänglichkeiten bestehender IT-Systeme und Netze, \nschreitet die Vernetzung kritischer Infrastrukturen, wie beispielsweise von Energienetzen, \nunaufhaltsam voran. \nDie Vorlesung stellt den aktuellen Stand der Forschung zu widerstandsfähigen Netzwerken \ndar. Maßnahmen zur Erhöhung der Widerstandsfähigkeit lassen sich grob in proaktive und \nreaktive Maßnahmen gliedern. Proaktive Maßnahmen unterteilen sich wiederum in das \nEinfügen zusätzlicher Redundanz und in die Abgrenzung kritischer Komponenten. Mittels \nzusätzlicher Redundanz lassen sich Angriffe bis zu einem gewissen Grad tolerieren. Die \nAbgrenzung kritischer Komponenten kann die Angriffsauswirkungen lokal begrenzen und \ndamit die Ausweitung des Angriffs auf das Gesamtsystem verhindern. Reaktive Maßnahmen \nlassen sich in drei Phasen gliedern: die Erkennung von Angriffen, die Eingrenzung des \nAngriffs sowie letztlich die Wiederherstellung des Normalzustands. \nAusgehend von dieser Kategorisierung folgt ein Exkurs in die Graphentheorie und in \ngenerelle Maßnahmen zur Erhöhung der Widerstandsfähigkeit von Netzwerken, wie \nbeispielsweise das proaktive Finden von Backup-Routen. Darüber hinaus behandelt die \nVorlesung die für das Internet essentiellen Basisdienste BGP-Routing und Domain Name \nService. Beide Dienste werden im Detail vorgestellt und aktuelle Angriffe sowie \nentsprechende Gegenmaßnahmen erläutert. \nDes Weiteren werden Denial of Service Angriffe und ihre Eingrenzung im Detail betrachtet \nund Mechanismen zur Erhöhung der Widerstandsfähigkeit von P2P Netzen vorgestellt. Das \nGanze wird abgerundet durch Intrusion Detection Systeme die als zusätzlicher \nVerteidigungsmechanismus innerhalb von Netzen eingesetzt werden können um die \nAuswirkungen eines erfolgreichen Angriffs zu begrenzen.",
    "Qualifikationsziele": "Modulhandbuch B. Sc./M. Sc. Informatik  140 \nZiel der Vorlesung ist es, einen Überblick über Maßnahmen zur Erhöhung der \nWiderstandsfähigkeit von Netzen und essentiellen Basisdiensten zu geben. Darüber hinaus \nsoll das Bewusstsein für Sicherheitsprobleme in vernetzten Umgebungen geschärft werden. \nDie Teilnehmer bekommen dazu einen umfassenden Überblick über generische Maßnahmen \nzur Erhöhung der Widerstandsfähigkeit innerhalb von Netzen. Darauf aufbauend werden \nBasisdienste des Internets diskutiert und Verteidigungsstrategien gegenüber ausgefeilten \nAngriffen behandelt. Abgerundet wird die Vorlesung durch eine Reading Group, in der sich \ndie Teilnehmer mit aktueller Literatur im betrachteten Themenfeld auseinandersetzen.",
    "Vorraussetzungen": "Empfohlen: Grundwissen in Computernetzwerken und P2P-Netzen ist vorteilhaft.",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete \nLiteratur könnten sein: \n1. G. Schäfer, M. Roßberg -  Netzsicherheit, dpunkt.verlag, 676 pages, August 2014 \n2. Michal Pioro and Deepankar Medhi - Routing, Flow, and Capacity Design in \nCommunication and Computer Networks, The Morgan Kaufmann Series in Networking, 800 \npages, 2004 \n3. Network Analysis: Methodological Foundations, Springer: Lecture Notes in Computer \nScience / Theoretical Computer Science and General Issues, 484 pages,2005 \nModulhandbuch B. Sc./M. Sc. Informatik  141 \n4. Andrew S. Tanenbaum and Maarten Van Steen, Distributed Systems: Principles and \nParadigms (2nd Edition). 2006. Prentice Hall. ISBN:  978-0132392273"
  },
  {
    "Modulname": "Simulation und Evaluation von Computernetzwerken",
    "Modul Nr.": "20-00-0736",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Englisch",
    "Lerninhalt": "Die Teilnehmer des Seminars werden Schritt für Schritt an die Leistungsbewertung von \nComputernetzwerken herangeführt. Das Seminar besteht aus einem einführenden \ntheoretischen und einem nachfolgenden praktischen Teil. Im theoretischen Teil werden die \nKernkonzepte der diskreten Ereignissimulation sowie die Grundlagen der \nLeistungsbewertung von Protokollen vermittelt. Dazu werden auch grundlegende \nKenntnisse zur statistischen Auswertung von Simulationen vermittelt. Der praktische Teil \ndes Seminars beinhaltet die simulative Modellierung realer Protokolle aus \nComputernetzwerken und deren Leistungsbewertung. Dazu werden konkrete \nImplementierungsaufgaben an die Teilnehmer gestellt, die innerhalb eines vorab zur \nVerfügung gestellten Simulationsmodells zu Laborterminen umzusetzen sind. \nDie gestellten Aufgaben umfassen die folgenden Themen: \n1. Introduction to OMNeT++: Ping-Pong-Application and Flooding \n2. Hot Potato Routing and Backward Learning \n3. Distance Vector Routing and Dijkstra \n4. State Machines \n5. Distributed Denial of Service - Queuing and Delay \nP2P Storage System",
    "Qualifikationsziele": "Teilnehmer lernen die Grundlagen diskreter ereignisbasierter Simulation and werden Schritt \nfür Schritt an den Simulator OMNeT++ herangeführt. Am Ende des Seminars sind \nTeilnehmer in der Lage eigene Simulationsmodelle  in OMNeT++ zu entwickeln.",
    "Vorraussetzungen": "Empfohlen: Grundwissen in objektorientierter Programmierung ist nötig. Grundwissen in \nC++, Computernetzwerken, P2P-Netzen und Statistik ist vorteilhaft.  \nModulhandbuch B. Sc./M. Sc. Informatik  143",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete \nLiteratur könnten sein: \n1. OMNet++ Documentation \n2. R. K. Jain, The Art of Computer Systems Performance Analysis. 1991. John Wiley & Sons, \nISBN: 978-0-471-50336-1 \n3. B. Stroustrup, The C++ Programming Language (Fourth Edition). May 2013. Addison \nWesley.  ISBN: 0-321-56384-0 \n4. B. Eckel, Thinking in C++, Volume I. 2001. (Free E-book Download) \nAndrew S. Tanenbaum and Maarten Van Steen, Distributed Systems: Principles and \nParadigms (2nd Edition). 2006. Prentice Hall. ISBN:  978-0132392273"
  },
  {
    "Modulname": "Mobile Netze",
    "Modul Nr.": "20-00-0748",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "Mobilkommunikation und drahtlose Kommunikationstechniken haben sich in den letzten \nJahren rapide weiterentwickelt. Die integrierte Lehrveranstaltung erläutert Charakteristiken \nund Grundprinzipien mobiler Netze, und praktische Lösungsansätze werden vorgestellt. Der \nFokus der Veranstaltung liegt hierbei auf der Vermittlungsschicht (Netzwerkschicht). \nZusätzlich zum Stand der Technik werden in der Veranstaltung aktuelle Forschungsfragen \ndiskutiert und Methoden und Werkzeuge zur systematischen Behandlung dieser Fragen \nerläutert. Die Inhalte werden in Übungseinheiten vertieft. \nLerninhalte: \n- Einleitung: Drahtlose und mobile Kommunikation: Anwendungen, Geschichte, \nMarktchancen \n- Überblick über drahtlose Kommunikation: Drahtlose Übertragung, Frequenzen und \nFrequenzregulierung, Signale, Antennen, Signalausbreitung, Multiplex, Modulation, \nSpreizband-Technik, Zellulare Systeme \n- Medienzugriff: SDMA, FDMA, CDMA, TDMA (Feste Zuordnung, Aloha, CSMA, DAMA, \nPRMA, MACA, Kollisionsvermeidung, Polling) \n- Drahtlose Lokale Netze (Wireless LAN): IEEE 802.11 Standard inklusive \nBitübertragungsschicht, Sicherungsschicht und Zugriffverfahren, Dienstgüte, \nEnergieverwaltung \n- Drahtlose Stadtnetze, drahtlose Mesh Netze, IEEE 802.16 Standard inklusive Betriebsmodi, \nMedienzugriff, Dienstgüte, Ablaufkoordination \n- Mobilität auf der Netzwerkschicht: Konzepte zur Mobilitätsunterstützung, Mobile IP \n- Ad hoc Netze: Terminologie, Grundlagen und Applikationen, Charakteristika von Ad hoc \nKommunikation, Ad hoc Routing Paradigmen und Protokolle \n- Leistungsbewertung von mobilen Netzen: Einführung in die Leistungsbewertung, \nsystematischer Ansatz/häufige Fehler und wie man sie vermeiden kann, experimentelles \nDesign und Analyse \n- Mobilität auf der Transportschicht: Varianten von TCP (Indirect TCP, Snoop TCP, Mobile \nTCP, Wireless TCP) \nModulhandbuch B. Sc./M. Sc. Informatik  145 \n- Mobilität auf der Anwendungsschicht: Anwendungen für mobile Netze und drahtlose \nSensornetze",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung haben Studierende ein umfassendes \nWissen der Funktionsweise mobiler Kommunikationsnetze. Sie können die wichtigsten \nGrundlagen drahtloser Kommunikationstechniken erläutern. Die Studierenden können \nweiterhin Medienzugriffsverfahren kategorisieren und die Funktionsweise dieser Verfahren \nim Detail erklären. Insbesondere weisen sie ein tiefgehendes Verständnis von Verfahren auf \nVermittlungsschicht und Transportschicht auf, mit Schwerpunktsetzung auf Ad hoc und \nMesh Netze. Die Studierenden erlangen Wissen über die Zusammenhänge zwischen \nunterschiedlichen Protokollschichten und können ihr erworbenes Wissen auf die \nmethodische Analyse von realen Kommunikationssystemen anwenden. Sie sind somit in der \nLage, die Charakteristiken und Grundprinzipien des Problemraumes drahtloser und mobiler \nKommunikation detailliert zu erläutern und weisen auf diesem Feld ein fundiertes Wissen in \nPraxis und Theorie auf. Die Übungsteile der integrierten Veranstaltung vertiefen das \ntheoretische Wissen durch Literatur-, Rechen- und praktische Implementierungs-\n/Anwendungsübungen.",
    "Vorraussetzungen": "Empfohlen: Grundlagen der Kommunikationsnetze",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nModulhandbuch B. Sc./M. Sc. Informatik  146 \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Ausgewählte Buchkapitel und ausgewählte wissenschaftliche Veröffentlichungen"
  },
  {
    "Modulname": "Social Learning und Knowledge Sharing Technologien",
    "Modul Nr.": "20-00-0773",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Lehrveranstaltung hat das Ziel, grundlegendes Wissen zu vermitteln zu den wichtigsten \nTechnologien und Aspekten des Systemdesigns, die für moderne, web-basierte \nLernumgebungen benötigt werden. Das schließt das Management von Lernressourcen, \nModellierung Lernender, Empfehlung von passenden Ressourcen, sowie die Adaption des \nSystemverhaltens an die Bedürfnisse der Lernenden ein. Darüber hinaus werden Social Media \nInteraktionskonzepte genutzt, um die Vernetzung und den Wissensaustausch der Lernenden \nuntereinander zu fördern. \n1. Einführung, Theorien und Systeme für das Lernen und den Wissensaustausch: Lernen und \ngrundlegende Theorien, Herausforderungen des Lernen und des Wissensaustausches in \nCommunities beim Einsatz interaktiver, sozialer Systeme. \n2. Datenstrukturen für das Lernen und Wissensressourcen: Syntax und Repräsentation, \nStrukturen, Ressourcenbeschreibungen, Repositories \n3. Datenstrukturen für Lernenden-Modelle und Commmunitystrukturen: Benutzer/innen-\nProfile, Wissensdomänenmodelle, Graphentheorie spezielle tripartite Repräsentation und \nInteraktionsgraphen \n4. Social Media Web-Systeme und Muster: Systementwurf, Basisfunktionalität, Sichtbarkeit und \nRechtemanagement, Mechanismen für Verbreitung, Mechanismen für Reputation, \nKommunikationsdesign \n5. Assistenz in Social Learning Systemen: Artefakt-zentrierte Sammlung und Analyse, \nRessourcenempfehlungssysteme, Lernpfadanalyse \n6. Kooperationsunterstützung: Community Mining, Human Recommender Systems, Social \nNetwork Analysis \n7. Kollaborationsunterstützung: Peer Tutoring, kollaborative Aufgaben, CSCL Systeme, \nGruppenformation \n8. Feedback: Peer Assessment, Peer Feedback, Learning Analytics, Awareness Mecha-nismen \n9. Kontextbewußtes Lernen: Kontext, Methoden für Kontexterkennung, Umsetzung \nkontextbewußter Dienste \n10. Evaluationsmethoden: Metriken, Evaluation mit historischen Daten, Methoden zur \nValidierung von Theorien und Hypothesen, Formative und summative Evaluation.",
    "Qualifikationsziele": "Modulhandbuch B. Sc./M. Sc. Informatik  148 \nNach erfolgreichem Abschluss des Moduls sind die Studierenden in der Lage, moderne Web-\nAnwendungen für den Wissenserwerb und das Lernen in Communities zu analysieren und \nselbst zu entwerfen. Basierend auf etablierte Entwurfsmuster und Technologien für Lern-/Web-\nSysteme können die Teilnehmenden die Informations-Repräsentation (Datenschicht), das \nDesign und die Funktionalität (Anwendungs-schicht), sowie die dazugehörigen Algorithmen \nauswählen und parametrisieren um Anwender/innen gezielt im Lernprozess zu unterstützen. \nDie Studierenden können dazu Lösungen zur Adaption der Anwendung an die Bedürfnisse \nLernender einsetzen und kennen passende Evaluationsmethoden, um die Qualität und die \nEffekte der Web-Plattformen für Social Learning und Wissensaustausch zu bewerten.",
    "Vorraussetzungen": "Empfohlen: \nKenntnisse und Fertigkeiten in Methoden des Software-System-Entwurfs, Webtechnologien wie \nHTML und CSS, sowie Kommunikationsprotokollen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0773-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0773-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Drahtlose Netze zur Krisenbewältigung: Grundlagen, Entwurf und Aufbau von Null",
    "Modul Nr.": "20-00-0780",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Kommunikationsfähigkeit der Bevölkerung untereinander ist für die Bewältigung von \nKrisen von höchster Bedeutung. In dieser Veranstaltung wird der Aufbau von drahtlosen \nKommunikationsnetzen von Null behandelt, d.h. unter der Annahme, dass keinerlei \nKommunikationsinfrastruktur mehr vorhanden ist. Die Veranstaltung vermittelt theoretische \nGrundlagen aus den Bereichen der Nachrichtentechnik und des Amateurfunks und vertieft \ndiese um die nötigen Kenntnisse, um Netze für den Krisenfall zu entwerfen und praktisch zu \nrealisieren. Die vorgestellten Verfahren umfassen dabei Reichweiten von lokaler \nKommunikation bis hin zur Kommunikation um den ganzen Globus, ohne auf bestehende \nInfrastruktur angewiesen zu sein. \nTheoretische Übungen sowie das Durchführen von Messungen, der Aufbau von Schaltungen \nund die Vorführung von Funkverfahren in unserer Laborumgebung vertiefen die \nVeranstaltung. \nLerninhalte: \n- Signale, Wellenausbreitung, Antennen und elektrotechnische Grundlagen \n- Verfahren zur Modulation und Demodulation analoger und digitaler Signale (OFDM, \nATV/SSTV, Packet Radio, SSB, ...) \n- Systemaspekte für Kommunikation im Krisenfall \n- Entwurf und praktischer Aufbau von drahtlosen Kommunikationssystemen für den \nKrisenfall von Null",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden theoretisches \nund praktisches Wissen auf dem Gebiet der drahtlosen, infrastrukturlosen Kommunikation \nim Krisenfall. Sie verstehen die physikalischen und elektrotechnischen Grundlagen der \ndrahtlosen Kommunikation und kennen theoretische wie praktische Funkverfahren im \nDetail. Sie sind in der Lage ein Praktisches Kommunikationsystem von Null aufzubauen und \nzu betreiben. Die Studierenden erwerben Kompetenzen im Bereich Amateurfunk und \nSoftware-Defined Radios. \nModulhandbuch B. Sc./M. Sc. Informatik  150",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Ausgewählte Buchkapitel und ausgewählte wissenschaftliche Veröffentlichungen"
  },
  {
    "Modulname": "Kommunikationsnetze I",
    "Modul Nr.": "18-sm-1010",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "In dieser Veranstaltung werden die Technologien, die Grundlage heutiger \nKommunkationsnetze sind, vorgestellt und analysiert. \nDie Vorlesung deckt grundlegendes Wissen über Kommunikationssysteme ab und betrachtet \nim Detail die 4 unteren Schichten des ISO-OSI-Modells: Bitübertragungsschicht, \nSicherungsschicht, Vermittlungsschicht und Teile der Transportschicht. \nDie Bitübertragungsschicht, die zuständig ist für eine adäquate Übertragung über einen \nKanal, wird kurz betrachtet. Danach werden fehlertolerante Kodierung, Flusskontrolle und \nZugangskontrollverfahren (Medium access control) der Sicherungsschicht betrachtet. \nAnschließend wird die Netzwerkschicht behandelt. Der Fokus liegt hier auf Wegefindungs- \nund Überlastkontrollverfahren. Abschließend werden grundlegende Funktionen der \nTransportschicht betrachtet. Dies beinhaltet UDP und TCP- Das Internet und dessen \nFunktionsweise wird im Laufe der Vorlesung detailliert betrachtet. \nThemen sind: \n- ISO-OSI und TCP/IP Schichtenmodelle \n- Aufgaben und Eigenschaften des Bitübertragungsschicht \n- Kodierungsverfahren der Bitübertragungsschicht \n- Dienste und Protokolle der Sicherungsschicht \n- Flußkontrolle (sliding window) \n- Anwendungen: LAN, MAN, High-Speed LAN, WAN \n- Dienste der Vermittlungsschicht \n- Wegefindungsalgorithmen \n- Broadcast- und Multicastwegefindung \n- Überlastbehandlung \n- Adressierung \n- Internet Protokoll (IP) \nModulhandbuch B. Sc./M. Sc. Informatik  152 \n- Netzbrücken \n- Mobile Netze \n- Services und Protokolle der Transportschicht \n- TCP, UDP",
    "Qualifikationsziele": "Diese Vorlesung betrachet Grundfunktionalitäten, Serives, Protokolle, Algorithmen und \nStandards von Kommunikationssystemen. Vermitteltet Kompetenzen sind grundlegedes \nWissen über die vier unteren Schichten des ISO-OSI-Modells: Bitübertragungsschicht, \nSicherungsschicht, Vermittlungsschicht und Transportschicht. Desweiteren wird \nGrundwissen über Kommunikationssysteme vermittelt. Besucher der Vorlesung werden \nFunktionen heutiger Netzwerketechnologien und des Internets erlernen.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "Wi-CS, Wi-ETiT, BSc CS, BSc ETiT, BSc iST",
    "Literatur": "Ausgewählte Kapitel aus folgenden Büchern: \n- Andrew S. Tanenbaum: Computer Networks, 5th Edition, Prentice Hall, 2010 \n- Andrew S. Tanenbaum: Computernetzwerke, 3. Auflage, Prentice Hall, 1998 \n- Larry L. Peterson, Bruce S. Davie: Computer Networks: A System Approach, 2nd Edition, \nMorgan Kaufmann Publishers, 1999 \n- Larry L. Peterson, Bruce S. Davie: Computernetze, Ein modernes Lehrbuch, 2. Auflage, \nDpunkt Verlag, 2000 \n- James F. Kurose, Keith W. Ross: Computer Networking: A Top-Down Approach Featuring \nthe Internet, 2nd Edition, Addison Wesley-Longman, 2002 \n- Jean Walrand: Communication Networks: A First Course, 2nd Edition, McGraw-Hill, 1998"
  },
  {
    "Modulname": "Kommunikationsnetze II",
    "Modul Nr.": "18-sm-2010",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "Die Vorlesung Kommunikationsnetze II umfasst die Konzepte der Computervernetzung und -\ntelekommunikation mit dem Fokus auf dem Internet. Beginnend mit der Geschichte werden \nin der Vorlesung vergangene, aktuelle und zukünftige Aspekte von Kommunikationsnetzen \nbehandelt. Zusätzlich zu bekannten Protokollen und Technologien wird eine Einführung in \nNeuentwicklungen im Bereich von Multimedia Kommunikation (u.a. Video Streaming, P2P, \nIP-Telefonie, Cloud Computing und Service-orientierte Architekturen) gegeben. Die \nVorlesung ist als Anschlussvorlesung zu Kommunikationsnetze I geeignet. \nThemen sind: \n- Grundlagen und Geschichte von Kommunikationsnetzen (Telegrafie vs. Telefonie, \nReferenzmodelle, ...) \n- Transportschicht (Adressierung, Flusskontrolle, Verbindungsmanagement, \nFehlererkennung, Überlastkontrolle, ...) \n- Transportprotokolle (TCP, SCTP) \n- Interaktive Protokolle (Telnet, SSH, FTP, ...) \n- Elektronische Mail (SMTP, POP3, IMAP, MIME, ...) \n- World Wide Web (HTML, URL, HTTP, DNS, ...) \n- Verteilte Programmierung (RPC, Web Services, ereignisbasierte Kommunikation) \n- SOA (WSDL, SOAP, REST, UDDI, ...) \n- Cloud Computing (SaaS, PaaS, IaaS, Virtualisierung, ...) \n- Overlay-Netzwerke (unstrukturierte P2P-Systeme, DHT-Systeme, Application Layer \nMulticast, ...) \n- Video Streaming (HTTP Streaming, Flash Streaming, RTP/RTSP, P2P Streaming, ...) \n- VoIP und Instant Messaging (SIP, H.323) \nModulhandbuch B. Sc./M. Sc. Informatik  154",
    "Qualifikationsziele": "Die Vorlesung Kommunikationsnetze II umfasst die Konzepte der Computervernetzung und -\ntelekommunikation mit dem Fokus auf dem Internet. Beginnend mit der Geschichte werden \nin der Vorlesung vergangene, aktuelle und zukünftige Aspekte von Kommunikationsnetzen \nbehandelt. Zusätzlich zu bekannten Protokollen und Technologien wird eine Einführung in \nNeuentwicklungen im Bereich von Multimedia Kommunikation (u.a. Video Streaming, P2P, \nIP-Telefonie, Cloud Computing und Service-orientierte Architekturen) gegeben. Die \nVorlesung ist als Anschlussvorlesung zu Kommunikationsnetze I geeignet.",
    "Vorraussetzungen": "Empfohlen: Grundlegende Kurse der ersten 4 Semester werden benötigt. Die Vorlesung \nKommunikationsnetze I wird empfohlen. Das Theoriewissen aus der Vorlesung \nKommunikationsnetze II wird in praktischen Programmierübungen vertieft. Gundlegende \nProgrammierkenntnisse sind daher hilfreich.",
    "Prüfungsform": "Fachprüfung",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "MSc ETiT, MSc iST, Wi-ETiT, CS, Wi-CS",
    "Literatur": "Ausgewählte Kapitel aus folgenden Büchern: \n- Andrew S. Tanenbaum: Computer Networks, 5th Edition, Prentice Hall, 2010 \n- James F. Kurose, Keith Ross: Computer Networking: A Top-Down Approach, 6th Edition, \nAddison-Wesley, 2009 \n- Larry Peterson, Bruce Davie: Computer Networks, 5th Edition, Elsevier Science, 2011"
  },
  {
    "Modulname": "Kommunikationsnetze IV",
    "Modul Nr.": "18-sm-2030",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "Kommunikationsnetze IV behandelt die Modellierung und Leistungsbewertung von \nComputernetzwerken und Kommunikationssystemen. Der Schwerpunkt liegt auf aktuellen \nAnalysemethoden mit denen ein grundlegendes Verständnis der Leistungsfähigkeit sowie \neine Basis zur Planung, Optimierung und Weiterentwicklung von Kommunikationsnetzen \nvermittelt wird. Bedeutung und Implikationen der einzelnen Theorien werden an Beispielen \nmit Schwerpunkt auf dem Internet erläutert. Neben den analytischen Methoden gibt die \nVorlesung eine Einführung in die Simulation von Kommunikationsnetzen sowie in die \nMessung in realen oder prototypischen Systemen und Testumgebungen. Über die gängigen \nVerfahren und ihre Anwendungen hinaus werden in der Vorlesung ausgesuchte Aspekte \naktueller Forschungsfragen vertieft. \nThemen der Vorlesung sind: \n- Einführung in die Leistungsbewertung und ihre Anwendungen \n- Leaky-bucket-Verkehrsregulatoren, deterministische Verkehrsmodelle, deterministische \nund empirische Einhüllende \n- Scheduling, Generalized Processor SharingNetzwerkkalkül, min-plus Systemtheorie, \ndeterministische Leistungsschranken \n- Poisson-Prozesse, Markov-Ketten , klassische Warteschlangentheorie, M|M|1 und M|G|1 \nModelle \n- Modellierung von Paketdatenverkehr, Selbstähnlichkeit \n- Effektive Bandbreiten, Momente erzeugende Funktionen, statistisches Multiplexen \n- Statistisches Netzwerkkalkül, effektive Einhüllende, effektive Leistungsschranken \n- Simulation, Generierung von Zufallszahlen, Verteilungen, Konfidenzintervalle \n- Instrumentierung, Messung, Bandbreitenabschätzung im Internet \nModulhandbuch B. Sc./M. Sc. Informatik  156",
    "Qualifikationsziele": "Die Studierenden erhalten einen Überblick über die Bedeutung, grundlegende Methoden \nund wichtige Anwendungen der Leistungsbewertung von Kommunikationsnetzen. Sie \nkennen die typischen Mechanismen und Schedulingverfahren in Dienste integrierenden \nNetzen und können deren Wirkungsweise mit dem Netzwerkkalkül in der min-plus \nSystemtheorie erklären. Neben den Grundlagen der Warteschlangentheorie erlangen die \nStudenten detailliertes Wissen über die Theorie der effektiven Bandbreiten und weisen \nsomit ein theoretisch fundiertes Verständnis des statistischen Multiplexens auf. Über die \nAnalyse hinaus erhalten die Studenten Einblick in die Simulation und in ausgewählte \nMethoden und Werkzeuge zur Messung in realen Netzwerken. Sie sind in der Lage die \nerarbeiteten Verfahren gegeneinander abzugrenzen, problemspezifisch geeignete Methoden \nauszuwählen, auf typische Fragestellungen anzuwenden und relevante Schlussfolgerungen \nzu ziehen.",
    "Vorraussetzungen": "Empfohlen: Grundlegende Kurse der ersten 4 Semester werden benötigt. Die Vorlesungen in \nKommunikationsnetze I und II werden empfohlen.",
    "Prüfungsform": "Fachprüfung",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "Wi-CS, Wi-ETiT, BSc/MSc CS, MSc ETiT, MSc iST",
    "Literatur": "Ausgewählte Kapitel aus folgenden Büchern: \n- J.-Y. Le Boudec, P. Thiran: \"Network Calculus: A Theory of Deterministic Queuing Systems \nfor the Internet\", Springer LNCS 2050, \n[url]http://ica1www.epfl.ch/PS_files/netCalBookv4.pdf[/url], 2004. \n- A. Kumar, D. Manjunath, J. Kuri: \"Communication Networking: An Analytical Approach\", \nMorgan Kaufmann, 2004. \n- A. M. Law, W. D. Kelton: \"Simulation, Modeling and Analysis\", McGraw Hill, 3rd Ed., \n2000. \n- Selected Journal Articles and Conference Papers"
  },
  {
    "Modulname": "Software Defined Networking",
    "Modul Nr.": "18-sm-2280",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Der Kurs behandelt Themen aus dem Bereich Software Defined Networking: \n SDN Data Plane \n SDN Control Plane \n SDN Application Plane \n Network Function Virtualization \n Network Virtualization and Slicing \n QoS and QoE in Software Defined Networks",
    "Qualifikationsziele": "Studierende erhalten einen vertieften Einblick in Software Defined Networking, sowie \ngrundlegende Technologien und Anwendungen.",
    "Vorraussetzungen": "Grundlegende Kurse der ersten 4 Semester werden benötigt. Die Vorlesungen in \nKommunikationsnetze I und II werden empfohlen.",
    "Prüfungsform": "Modulabschlussprüfung: \n  Modulprüfung (Fachprüfung, fakultativ,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  158",
    "Benotung": "Modulabschlussprüfung:  \n  Modulprüfung (Fachprüfung, fakultativ, Gewichtung: 100%)",
    "Verwendbarkeit": "MSc ETiT, BSc/MSc iST, MSc Wi-ETiT, CS, Wi-CS",
    "Literatur": "Lehrbücher gemäß Ankündigung. \nFolienskript der Vorlesung und Artikelkopien nach Bedarf."
  },
  {
    "Modulname": "Algorithmen für Hardware-Entwurfswerkzeuge",
    "Modul Nr.": "20-00-0183",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- Das VLSI-Entwurfsproblem \n- Grundlegende Graphenrepräsentationen und -algorithmen \n- Darstellung von hierarchischen Schaltungen \n- Realisierungstechnologien für integrierte Schaltungen \n- Layout-Kompaktierung \n- Timing-Analyse \n- Heuristische Optimierungsverfahren \n- Platzierungsprobleme, -verfahren und -kostenfunktionen \n- Exakte Optimierungsverfahren \n- Partitionierung mit Anwendung in der Platzierung \n- Floorplanningprobleme, -repräsentationen und -verfahren \n- Verdrahtungsprobleme, -verfahren und -kostenfunktionen",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung verschiedene \nTechnologien für die Realisierung von integrierten Schaltungen. Sie können aus den \nverschiedenen Technologien die Anforderungen an Automatisierungswerkzeuge für \nverschiedene Teilaufgaben des Entwurfs- und Realisierungsprozesses herleiten. Sie sind \nvertraut mit der Modellierung technologischer Probleme durch formale Konzepte wie \nGraphen, Gleichungssysteme etc. Sie verstehen grundlegende Verfahren zur Lösung auch \nvon harten Problemen und können aufbauend auf Erfahrungen mit verschiedenen \nBasisalgorithmen neue bzw. verfeinerte Implementierungen zur Erledigung der \nEntwurfsaufgaben entwickeln.",
    "Vorraussetzungen": "Empfohlen: Empfohlen wird der erfolgreiche Besuch der Veranstaltungen “Digitaltechnik” \nsowie “Algorithmen und Datenstrukturen” und “Funktionale und objektorientierte \nProgrammierung”.  \nModulhandbuch B. Sc./M. Sc. Informatik  161",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete \nLiteratur könnten sein: \nGerez: Algorithms for VLSI Design Automation \nWang/Chang/Cheng: Electronic Design Automation"
  },
  {
    "Modulname": "Optimierung statischer und dynamischer Systeme",
    "Modul Nr.": "20-00-0186",
    "Kreditpunkte": "10 CP",
    "Arbeitsaufwand": "300 h",
    "Selbststudium": "210 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Optimierung statischer Systeme: \n- nichtlineare Optimierung ohne und mit Nebenbedingungen, notwendige Bedingungen \n- numerische Newton-Typ- und SQP-Verfahren \n- nichtlineare kleinste Quadrate \n- gradientenfreie Optimierungsverfahren \n- praktische Aspekte wie Problemformulierung, Approximation von Ableitungen, \nVerfahrensparameter, Bewertung einer berechneten Lösung \nOptimierung dynamischer Systeme: \n- Parameteroptimierungs- und Schätzprobleme \n- optimale Steuerungsprobleme \n- Maximumprinzip und notwendige Bedingungen \n- numerische Verfahren zur Berechnung optimaler Trajektorien \n- optimale Rückkopplungssteuerung \n- linear-quadratischer Regulator \nAnwendungen und Fallstudien aus den Ingenieurwissenschaften und der Robotik \nTheoretische und praktische Übungen sowie Programmieraufgaben zur Vertiefung der \nFachkenntnisse und methodischen Fähigkeiten",
    "Qualifikationsziele": "Studierende besitzen nach erfolgreicher Teilnahme grundlegende Kenntnisse und \nmethodische Fähigkeiten der Konzepte und Berechnungsverfahren der Optimierung \nstatischer und dynamischer Systeme und deren Anwendungen bei Optimierungsaufgaben in \nden Ingenieurwissenschaften. \nModulhandbuch B. Sc./M. Sc. Informatik  163",
    "Vorraussetzungen": "Empfohlen: grundlegende mathematische Kenntnisse und Fähigkeiten in Linearer Algebra, \nAnalysis mehrerer Veränderlicher und Grundlagen gewöhnlicher Differentialgleichungen",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "- vorlesungsbegleitende Folien \nzu einzelnen Themen der Lehrveranstaltung: \n- J. Nocedal, S.J. Wright: Numerical Optimization, Springer \n- C.T. Kelley: Iterative Methods for Optimization, SIAM Frontiers in Applied Mathematics \n- L.M. Rios, N.V. Sahinidis: Derivative-free optimization: a review of algorithms and \ncomparison of software implementations, Journal of Global Optimization (2013) 56:1247-\n1293 \n- A.E. Bryson, Y.-C. Ho: Applied Optimal Control: Optimization, Estimation and Control, \nCRC Press \n- J.T. Betts: Practical Methods for Optimal Control and Estimation Using Nonlinear \nProgramming, SIAM Advances in Design and Control"
  },
  {
    "Modulname": "Programmierung Massiv-Paralleler Prozessoren",
    "Modul Nr.": "20-00-0419",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "- Grundlagen massiv-paralleler Hardware mit einem Schwerpunkt auf modernen \nBeschleunigern \n- parallele Algorithmen  \n- effiziente Programmierung massiv-paralleler Systeme \n- praktische Programmierprojekte mit Co-Betreuung durch einen Wissenschaftler au seiner \nAnwendungsdomain",
    "Qualifikationsziele": "Nach dem erfolgreichen Besuch der Veranstaltung sind Studierende dazu in der Lage, \nProblemstellungen im Kontext massiv-paralleler Systeme zu analysieren. Sie können \nselbständig neue Anwendungen entwickeln und ihre Performanz systematisch verbessern. \nSie verstehen grundlegende parallele Algorithmen und Programmierparadigmen und \nkönnen sich selbständig aktuelle Literatur erarbeiten.",
    "Vorraussetzungen": "Empfohlen:  \nsolide Programmierkenntnisse in C/C++ \nSystemnahe und Parallele Programmierung",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  165 \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekanntgegeben"
  },
  {
    "Modulname": "Programmierung paralleler Rechnerarchitekturen",
    "Modul Nr.": "20-00-0626",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "● Grundlagen der parallelen Programmierung \n● Parallele Architekturen, z.B. Mehr- und Vielkernsysteme mit gemeinsamem und verteilten \nSpeicher \n● Message-Passing Interface (MPI), OpenMP, OpenCL Programmierstandards \n● Bausteine für paralleles Rechnen \n● Kriterien für das Design paralleler Algorithmen",
    "Qualifikationsziele": "Studierende können nach erfolgreichem Besuch der Veranstaltung parallele Programme für \ndie aktuellen parallelen Sprachstandards entwerfen. Sie verstehen die Grundlagen paralleler \nProgrammierung sowie grundlegende Bausteine des parallelen Programmierens. Sie können \ndie Eignung von Algorithmen für parallele Architekturen einschätzen.",
    "Vorraussetzungen": "Empfohlen: Grundlegende Programmierkenntnisse (C/C++, Fortran, Java, oder ähnlich).",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  167 \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nM. Sc. Distributed Software Systems \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "●  \"Using OpenMP: Portable Shared Memory Parallel Programming, Volume 10\", Barbara \nChapman, Gabriele Jost and Ruud Van Der Pas, MIT Press, 2007  \n● \"Parallel programming in C with MPI and OpenMP\", Michael J. Quinn, McGraw-Hill, 2004  \n● \"Parallele Programmierung\", T. Rauber and G. Rünger, Springer, 2007  \n● \"Intel Xeon Phi Coprocessor High-Performance Programming\", J Jeffers und J. Reinders, \nMorgan Kaufman, 2013  \n● \"Heterogeneous Computing With OpenCL\", B. R. Gaster, Elsevier, 2011  \n● \"Programming Massively Parallel Processors: A Hands-On Approach\", D. B. Kirk, W. W. \nHwu, Morgan Kaufmann, 2012"
  },
  {
    "Modulname": "Lernende Roboter",
    "Modul Nr.": "20-00-0629",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "- Grundlagen aus der Robotik und des Maschinellen Lernens für Lernende Roboter \n- Maschinellen Lernen von Modellen \n- Representation einer Policy. Hierarchische Abstraktion mit Bewegungsprimitiven \n- Imitationslernen \n- Optimale Steuerung mit gelernten Modellen \n- Reinforcement Learning und Policy Search-Verfahren \n- Inverses Reinforcement Learning",
    "Qualifikationsziele": "Nach erfolgreichen Abschluss der Lehrveranstaltung verstehen Studierende die Grundlagen \ndes Maschinellen Lernens und der Robotik. Sie können maschinelle Lernverfahren \nanwenden um einen Roboter zu befähigen, neue Aufgaben zu erlernen. Studierende \nverstehen die Grundlagen von Reinforcement Learning und können verschiedene \nAlgorithmen anwenden um eine Policy des Roboters aufgrund von Interaktion mit der \nUmgebung zu erlernen. Sie verstehen den Unterschied zwischen Imitation Learning, \nReinforcement Learning, Policy Search und Inverse Reinforcement Learning und können \neinschätzen, wann sie welchen Ansatz verwenden sollen. Sie können diese Ansätze auch \nproblemlos auf geeignete Aufgabenstellungen anwenden.",
    "Vorraussetzungen": "Empfohlen: Gute Programmierkenntnisse in Matlab, Machine Learning 1 - Statistical \nApproaches sind hilfreich aber nicht zwingend erforderlich",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min. \nModulhandbuch B. Sc./M. Sc. Informatik  169",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nM. Sc. Internet- und Web-basierte Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Deisenroth, M. P.; Neumann, G.; Peters, J. (2013). A Survey on Policy Search for Robotics, \nFoundations and Trends in Robotics \nKober, J; Bagnell, D.; Peters, J. (2013). Reinforcement Learning in Robotics: A Survey, \nInternational Journal of Robotics Research \nC.M. Bishop, Pattern Recognition and Machine Learning (2006), \nR. Sutton, A. Barto. Reinforcement Learning - an Introduction \nNguyen-Tuong, D.; Peters, J. (2011). Model Learning in Robotics: a Survey"
  },
  {
    "Modulname": "Grundlagen der Robotik",
    "Modul Nr.": "20-00-0735",
    "Kreditpunkte": "10 CP",
    "Arbeitsaufwand": "300 h",
    "Selbststudium": "210 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Räumliche Darstellungen und Transformationen \n- Manipulatorkinematik \n- Fahrzeugkinematik \n- kinematische Geschwindigkeit und Jacobi-Matrix  \n- Bewegungsdynamik von Robotern \n- Roboterantriebe, interne und externe Sensoren \n- grundlegende Roboterregelungen \n- Bahnplanung \n- Lokalisierung und Navigation mobiler Roboter \n- Fallstudien \n- theoretische und praktische Übungen sowie Programmieraufgaben zur Vertiefung der \nFachkenntnisse und methodischen Fähigkeiten",
    "Qualifikationsziele": "Studierende besitzen nach erfolgreicher Teilnahme die für grundlegende Untersuchungen \nund ingenieurwissenschaftliche Entwicklungen in der Robotik notwendigen grundlegenden \nFachkenntnisse und methodischen Fähigkeiten im Bereich der Modellierung, Kinematik, \nDynamik, Regelung, Bahnplanung und Navigation von Robotern.",
    "Vorraussetzungen": "Empfohlen: grundlegende mathematische Kenntnisse und Fähigkeiten in Linearer Algebra, \nAnalysis mehrerer Veränderlicher und Grundlagen gewöhnlicher Differentialgleichungen",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min. \nModulhandbuch B. Sc./M. Sc. Informatik  171",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "- vorlesungsbegleitendes Skript und Vorlesungsfolien \nUmfassende Übersicht der Robotik: \n- B. Siciliano, O. Khatib: Springer Handbook of Robotics, Springer Verlag \nzu einzelnen Themen der Lehrveranstaltung: \n- J.J. Craig: Introduction to Robotics: Mechanics and Control, 3rd edition, Prentice Hall \n- M.W. Spong, S. Hutchinson, M. Vidyasagar: Robot Modeling and Control, Wiley \n- R. Siegwart, I.R. Nourbakhsh, D. Scaramuzza: Introduction to Autonomous Mobile Robots,  \nMIT Press \n- H. Choset, K.M. Lunch, S. Hutchinson, G.A. Kantor,W. Burgard, L.E. Kavraki, S. Thrun: \nPrinciples of Robot Motion: Theory, Algorithms, and Implementations, Bradford \n- S. Thrun,W. Burgard, D. Fox: Probabilistic Robotics, MIT Press"
  },
  {
    "Modulname": "Intelligente Multi-Agenten Systeme",
    "Modul Nr.": "20-00-0784",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "-  Grundlagen von Multi-Agenten Systemen \n-  Verteilte Constraint Satisfaction Probleme \n-  Verteilte Optimierung \n- Markov Decision Processes (MDPs) und Lernen in MDPs \n- Spieltheorie, Matrix Games, Stochastic Games und Differential Games \n- Partial-Observable Markov Decision Processes (POMDPs) \n- Lernen mit mehreren Agenten und verteiltes Lernen \n- Schwarmintelligenz \n- Kommunikation zwischen mehrerer Agenten",
    "Qualifikationsziele": "Nach erfolgreichen Besuch der Lehrveranstaltung verstehen Studierende die Grundlagen von \nIntelligenten Multi-Agenten Systemen, wie zum Beispiel, verteiltes Lernen und Lernen mit \neinem partiell beobachtbaren Zustand. Sie können verteilte Planungs- und Optimierungs-\nAlgorithmen auf Multi-Agenten Systeme anwenden. Die Studenten verstehen die Grundlagen \nder Spieltheorie und des Lernens mit einem einzelnen sowie mit mehren Agenten. Sie können \nKommunikationsstrategien zwischen mehreren Agenten nachvollziehen und analysieren und  \nAlgorithmen der Schwarmintelligenz nützen, um komplexe Probleme zu lösen.",
    "Vorraussetzungen": "Empfohlen: Gute Programmierkenntnisse in Matlab und gute mathematische Grundkenntnisse.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0784-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  173 \nBausteinbegleitende Prüfung:  \n  [20-00-0784-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "H. Schwartz: Multi-Agent Machine Learning: A Reinforcement Approach, 2014 \nY. Shoham, K. Leyton-Brown: Multiagent Systems: Algorithmic, Game-Theoretic, and Logical \nFoundations \nN. Vlassis: A Concise Introduction to Multiagent Systems and Distributed Artificial Intelligence"
  },
  {
    "Modulname": "Autonom Lernende Systeme: Vertiefungskurs",
    "Modul Nr.": "20-00-0920",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Die Lehrveranstaltung beschäftigt sich mit weiterführenden Themen des maschinellen Lernens \nmit Fokus auf autonom lernende Systeme. Viele der bisher verwendeten Lernalgorithmen \nbenötigen eine Vielzahl an Vorwissen, um die Lernalgorithmen einsetzen zu können. Zum \nBeispiel müssen oft Feature-Räume oder Darstellungen von Funktionen vom menschlichen \nAnwender gewählt werden. Das Ziel von autonom lernenden Systemen ist es, ohne dieses \nVorwissen auszukommen und diese Features selbstständig zu extrahieren. Mögliche Themen \numfassen unter anderem: \n- Einführung in Bayessche Lernmethoden und Hierarchische Bayessche Modelle \n- Bayessche Optimierung \n- Weiterführende Themen in Reinforcement Learning \n- Feature Learning \n- Kernel-Based Feature Generation und Kernel Embeddings \n- Deep Learning für Autonome Systeme \n- Lernen in Multi-Agenten Systemen \n- Anwendung von lernenden Multi-Agenten Systemen (u.a. in Netzwerken und verteilten \nSystemen)",
    "Qualifikationsziele": "Nach erfolgreichen Besuch dieser Lehrveranstaltung kennen die Studierenden die neuesten \nTrends des Maschinellen Lernens für Autonome Systeme. Sie verstehen die mathematischen \nGrundlagen, können Algorithmen analysieren und deren Herleitungen größtenteils \nnachvollziehen und wissen daher auch, wie man neue, ähnliche Algorithmen entwerfen kann. \nDes weiteren können sie wichtige Problemstellungen für Autonom Lernende Systeme und deren \nLösungen analysieren. Die Algorithmen können auf einfache, abstrahierte Probleme angewandt \nwerden.",
    "Vorraussetzungen": "Empfohlen: \nDer Besuch der Lehrveranstaltungen “Lernende Roboter” und “Statistisches Maschinelles \nLernen” ist notwendig. \nModulhandbuch B. Sc./M. Sc. Informatik  175",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0920-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0920-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Je nach Themenschwerpunkt"
  },
  {
    "Modulname": "Beherrschen Moderner Prozessoren für Eingebettete Systeme",
    "Modul Nr.": "20-00-1004",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "* Prozessorarchitekturen in Eingebetteten Systemen \n* ARM Instruktionssatz und Mikroarchitektur \n* ARM Compiler und Simulatoren \n* ARM Bootloading und (Echtzeit-)Betriebssysteme \n* ARM Debugging, Profiling und Tracing \n* ARM Ansteuerung von Peripheriekomponenten \n* ARM Power Management \n* ARM Anwendungsklassen (Cortex-M/-A/-R) \n* Entwicklungsperspektiven eingebetteter Prozessoren \n* Aktuelle Forschungsergebnisse",
    "Qualifikationsziele": "Nach erfolgreichem Abschluss der Lehrveranstaltung können Studierende \n* die wesentlichen Bestandteile und Funktionsweisen von eingebetteten Prozessoren skizzieren, \n* die Vor- und Nachteile verschiedener Prozessorarchitekturen differenzieren, \n* wichtige Entwicklungswerkzeuge für eingebettete Prozessoren anwenden, \n* existierenden Programmcode auf Funktionalität und Effizienz untersuchen, \n* effizienten Programmcode für spezifische Anwendungen entwickeln, \n* aktuelle Forschungsarbeiten zu eingebetteten Systemen einschätzen.",
    "Vorraussetzungen": "Empfohlen: \nErfolgreiche Teilnahme an der Veranstaltung \"Rechnerorganisation\" oder vergleichbare \nQualifikationen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1004-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  177",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1004-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Reinforcement Learning: Von Grundlagen zu den tiefen Ansätzen",
    "Modul Nr.": "20-00-1047",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "• Auffrischung des Hintergrundwissens \n• Black box Reinforcement Learning \n• Modellierung als Bandit, Markov Decision Processes und Partially Observable Markov \nDecision Processes \n• Optimale Steuerung und Regelung \n• Modellernen \n• Wertefunktionslernen \n• Policy Search \n• Tiefe Wertefunktion Methoden \n• Tiefe Policy Search Methoden \n• Exploration vs Exploitation \n• Hierarchisches Reinforcement Learning \n• Intrinsische Motivation",
    "Qualifikationsziele": "Dieser Kurs richtet sich an Studierende mit erster Erfahrung im maschinellen Lernen und \nvermittelt diesen Studierenden das notwendige Wissen, um eigenständig Forschungsprojekte im \nBereich der Reinforcement Learning durchzuführen, z.B. im Rahmen einer Bachelor- oder \nMasterarbeit. Dies betrifft sowohl ein grundlegendes Verständnis der algorithmischen Ansätze \nzum Reinforcement Learning als auch Anwendungen von tiefen Netzen.",
    "Vorraussetzungen": "Empfohlen: \nGute Programmierkenntnisse in Python. \nVorherige Belegung der Vorlesung Statistical Machine Learning ist hilfreich aber nicht zwingend \nerforderlich",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  179 \n  [20-00-1047-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1047-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktische FPGA-Programmierung mit Hochsprachen",
    "Modul Nr.": "20-00-1081",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "FPGAs wurden in den letzten Jahren sehr erfolgreich zur Umsetzung anwendungsspezifischer \nBeschleuniger in heterogenen Systemen eingesetzt. Allerdings ist die Programmierung mit \nkonventionellen Hardware-Beschreiubungssprachen wie Verilog oder VHDL nach wie vor \nmühsam. \nAls Alternative spielen High-Level Synthese Werkzeuge, die Hardware auch aus Hochsprachen \nwie C/C++ erzeugen können, eine zunehmend wichtigere Rolle bei der Implementierung \nsolcher Beschleuniger. Im Rahmen dieser Veranstaltung erwerben Sie nützliches \nHintergrundwissen zu den grundlegenden Algorithmen der High-Level Synthese sowie \nKenntnisse beim praktischen Entwurf und der Optimierung von FPGA-Designs mittels High-\nLevel Synthese-Werkzeugen. \nDarüber hinaus lernen Sie relevante Techniken zur Integration von \nFPGA-basierten Beschleunigern in heterogene Systeme kennen. Im Rahmen der mit dieser \nVeranstaltung verbunden Praxisphase implementieren Sie einen FPGA-basierten Beschleuniger \nfür ein vorgegebenes Problem und setzen diesen auf einem typischen heterogenen System in \nechter Hardware um.",
    "Qualifikationsziele": "- Verständnis der Grundlagen von HLS-Systemen \n- Verständnis von wichtigen Interna von HLS-Systemen (z.B. Optimierung, Scheduling) \n- Fähigkeit zum Entwurf von Hardware-Beschleunigern in Hochsprache und Nutzung von HLS-\nSystemen zur Erzeugung von lauffähigen FPGA-Designs \n- Erfahrung in der Fehlersuche und der Optimierung in mittels HLS erzeugter Hardware-Designs \n- Erfahrung in der Integration von Hardware-Beschleunigern in heterogene Rechensysteme \nmittels Hardware/Software-Co-Design Werkzeugen. \nModulhandbuch B. Sc./M. Sc. Informatik  181",
    "Vorraussetzungen": "Empfohlen: \n– Grundlagen digitaler Logik (Digitaltechnik (DT) \n– Grundlagen Rechnerarchitektur (Rechnerorganisation (RO), AER) \n– Vorwissen zu Compilern vorteilhaft, aber nicht verpflichtend \n– Umgang mit Linux-Systemen und virtuellen Maschinen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1081-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1081-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Grundlagen der Bioinformatik",
    "Modul Nr.": "10-30-0036",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Algorithmen für die Sequence Analyse und Alignments \nMolekulare Visualisierung \nAlgorithmen für Strukturvorhersage und Homologiemodellierung \nMolecular Dynamics als Simulationstechnik in HPC",
    "Qualifikationsziele": "Die Studenten erwerben Grundlagenwissen in der sequenz-basierten Bioinformatik \n(Sequence Alignment, Scoring Schemata, Datenbanken, Mustererkennung) und der \nStrukturmodellierung und Simulation (Strukturvorhersage, Molekulardynamik). \nDie Studenten werden in die Lage versetzt, eigenständig Standard-Werkzeuge der \nBioinformatik einzusetzen und deren grundlegende Algorithmen in diversen \nImplementierungen zu identifizieren. Notwendige statistische und mathematische \nGrundlagen werden vermittelt und in Übungen und Seminarstunden vertieft.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  183 \nStandard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Deonier, Tavare, Waterman Computational Genome Analysis, Springer, 2005 \n● Durbin, Eddy, Krogh, Mitchison, Biological Sequence Analysis, Cambridge University \nPress, \n● 1998 \n● MacKay, Information Theory, Inference, and Learning Algorithms, Cambridge University \n● Press, 2003 \n● Schlick, Molecular Modeling and Simulation, Springer, 2002"
  },
  {
    "Modulname": "Echtzeitsysteme",
    "Modul Nr.": "18-su-2020",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Vorlesung Echtzeitsysteme befasst sich mit einem Softwareentwicklungsprozess, der \nspeziell auf die Spezifika von Echtzeitsystemen zugeschnitten ist. Dieser \nSoftwareentwicklungsprozess wird im weiteren Verlauf während der Übungen in \nAusschnitten durchlebt und vertieft. Der Schwerpunkt liegt dabei auf dem Einsatz \nobjektorientierter Techniken. In diesem Zusammenhang wird das echtzeitspezifische CASE \nTool Rhapsody vorgestellt und eingesetzt. Des weiteren werden grundlegende \nCharakteristika von Echtzeitsystemen und Systemarchitekturen eingeführt. Auf Basis der \nEinführung von Schedulingalgorithmen werden Einblicke in Echtzeitbetriebssysteme \ngewährt. Die Veranstaltung wird durch eine Gegenüberstellung der Programmiersprache \nJava und deren Erweiterung für Echtzeitsysteme (RT-Java) abgerundet.",
    "Qualifikationsziele": "Studenten, die erfolgreich an dieser Veranstaltung teilgenommen haben, sollen in der Lage \nsein, modellbasierte (objektorientierte) Techniken zur Entwicklung eingebetteter \nEchtzeitsysteme zu verwenden und zu bewerten. Dazu gehören folgende Fähigkeiten: \n• Systemarchitekturen zu bewerten und Echtzeitsysteme zu klassifizieren \n• selbständig ausführbare Modelle zu erstellen und zu analysieren \n• Prozesseinplanungen anhand üblicher Schedulingalgorithmen durchzuführen \n• Echtzeitprogrammiersprachen und -Betriebssysteme zu unterscheiden, zu bewerten und \neinzusetzen.",
    "Vorraussetzungen": "Modulhandbuch B. Sc./M. Sc. Informatik  185 \nEmpfohlen: Grundkennntisse des Software-Engineerings sowie Kenntnisse einer \nobjektorientierten Programmiersprache",
    "Prüfungsform": "Fachprüfung",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "MSc ETiT, BSc iST, MSc Wi-ETiT, Informatik",
    "Literatur": "www.es.tu-darmstadt.de/lehre/es/"
  },
  {
    "Modulname": "Konzepte der Programmiersprachen",
    "Modul Nr.": "20-00-0072",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "Die wesentlichen Konzepte von Programmiesprachen. Insbesondere werden dazu \nProgrammiersprachen in ihre Basiskonzepte aufgespalten und diese detailliert betrachtet: \n● Die Rolle von Syntax  \n● Funktionen  \n● Meta-Interpreter  \n● Rekursion  \n● Verzögerte Auswertung  \n● Zustand und Seiteneffekte  \n● Continuations  \n● Statische Typsysteme  \n● Domain-spezifische Sprachen und Makros  \n● Objektorientierte Programmierung",
    "Qualifikationsziele": "Nach dem erfolgreichen Abschluss der Veranstaltung verfügen die Studierenden über die \nfolgenden Fähigkeiten: \n● Sie können die entscheidenden Merkmale von Programmiersprachen benennen und im \nkonkreten Fall identifizieren; \n● die Studierenden sind mit den wesentlichen theoretischen Konzepten von \nProgrammiersprachen vertraut; \n● sie können verschiedene Vorgehensweisen bei der Implementierung von \nProgrammiersprachen benennen und einfache Programmiersprachen umsetzen; \nModulhandbuch B. Sc./M. Sc. Informatik  188 \n● die Studierenden verstehen, wie Programmiersprachen den Lösungsraum von Problemen \nbeeinflussen; sie können die Auswirkung der Wahl einer Programmiersprache auf die \nSoftwareentwicklung abschätzen; \n● die Studierenden sind in der Lage stereotypische Kategorisierungen von \nProgrammiersprachen zu überwinden.",
    "Vorraussetzungen": "Empfohlen: Funktionale und Objektorientierte Programmierkonzepte",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Distributed Software Systems \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● S. Krishnamurthi: Programming Languages - Application and Interpretation  \n● M. Scott: Programming Language Pragmatics, Morgan Kaufmann  \n● D. Friedman et al.: Programming Language Essentials, MIT Press"
  },
  {
    "Modulname": "Effiziente Graphenalgorithmen",
    "Modul Nr.": "20-00-0110",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Effiziente Algorithmen für Graphendurchlauf und Zusammenhangsprobleme in Graphen \n- Optimale Bäume und Branchings \n- Netzwerk-Flussprobleme \n- Matching- und Zuweisungsprobleme \n- Planare Graphen \n- Theorie, generische Ansätze, Verbesessrungen durch Beschleunigungstechniken und  \nDatenstrukturen",
    "Qualifikationsziele": "Nachdem Studierende erfolgreich diese Veranstaltung besucht haben, \n- kennen sie grundlegende Algorithmen  \n- kennen sie Verfahren zur Effizienzsteigerung  \n- können sie Graphenalgorithmen analysieren \n- beherrschen sie Methoden, um spezielle Eigenschaften (Planarität, Dünnbesetztheit) \nauszunutzen \n- können sie die Effizienz von Verfahren in der Praxis beurteilen",
    "Vorraussetzungen": "Empfohlen:",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  190",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Algorithmische Modellierung / Grundlagen des Operations Research",
    "Modul Nr.": "20-00-0113",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Algorithmische Optimierungssprachen wie OPL und Eclipse \n- Modellierung innerhalb eines restriktiven Modellierungsrahmens (zum Beispiel lineare \nOptimierung oder ganzzahlige lineare Optimierung) \n- Modellierung als kombinatorische Optimierungsprobleme  (z.B. Netzwerkflussprobleme, \nFärbungsprobleme, Wegeprobleme) \n- Komplexe Fallbeispiele aus der Praxis, z.B. Anwendungen in Logistik, deterministisches \nund stochastiches Scheduling",
    "Qualifikationsziele": "Nachdem Studierende erfolgreich diese Veranstaltung besucht haben, \n- kennen sie Modellierungsstrategien für Entscheidungs-, Konstruktions- und \nOptimierungsprobleme  \n- können sie zwei algorithmische Modellierungssprachen anwenden \n- können sie komplexe Probleme adäquat modellieren",
    "Vorraussetzungen": "Empfohlen:  „Algorithmen und Datenstrukturen“ oder vergleichbar („Modellierung, \nSpezifikation und Semantik“ wäre ebenfalls wünschenswert).",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  192 \nStandard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Software Engineering - Projektmanagement",
    "Modul Nr.": "20-00-0178",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Die Projektmanagement-Prozesse \n- Project Knowledge Areas in Anlehnung an das PMBOK \n(u.a. Scope/Time/Cost/Qualitiy Management) \nProjektorganisation \nAufgaben, Rollen und Verantwortung des Projektmanagers \nKommunikation \nEntscheiden in Projekten \nKrisen und Havarien \nSelbstmanagement \nAusblick: Multi-Projektmanagement \nÜberblick: Prozess- und Vorgehensmodelle im Software Engineering",
    "Qualifikationsziele": " Kenntnisse über die Grundlagen des Projektmanagements und der Projektorganisation  \n Kenntnisse der Projektmanagement-Prozesse und der Project Knowledge Areas  \n Tools für den Einsatz in Projekten Verständnis über den situativen Einsatz von \nMethoden und Instrumenten im Projektmanagement  \n Verständnis von und über Projektmanagement als People Business und Führungsaufgabe  \n Verständnis des Zusammenhangs von Projektmanagement und Prozess- und \nVorgehensmodellen im Software Engineering",
    "Vorraussetzungen": "Empfohlen: Grundlagen der Softwaretechnik (durch Grundstudium, praktische Erfahrung o.ä.)",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  194 \nBausteinbegleitende Prüfung: \n  [20-00-0178-vl] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0178-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "",
    "Literatur": ""
  },
  {
    "Modulname": "Software Engineering in der industriellen Praxis",
    "Modul Nr.": "20-00-0317",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Vorlesung ist aus der industriellen Softwarepraxis motiviert. Anhand von Praxisbeispielen \nwird die typische Struktur von großen betrieblichen Informationssystemen gezeigt. Weiterhin \nwerden wichtige Aspekte ihrer Gestaltung und Erstellung vorgestellt. Oft spielt ein  \nsolches System die Rolle des Nervenzentrums eines Unternehmens, es enthält wesentliches \nGeschäftswissen und ist Schlüssel für den wirtschaftlichen Erfolg des Unternehmens. Ein \nbetriebliches Informationssystem mit dieser Bedeutung sollte entsprechend als Investitionsgut \nbetrachtet werden. Sowohl für die Erstellung, als auch für den Betrieb und Weiterentwicklung \nwährend der Lebensdauer sind nüchterne Kosten-Nutzen-Rechnungen (u. a. ROI) erforderlich. \nEine durchdachte Software-Architektur verbessert in der Regel die Ergebnisse dieser \nRechnungen. Die Veranstaltung wird durch eingeladene Vorträge von Experten aus der Praxis \nergänzt.",
    "Qualifikationsziele": "Teilnehmer verfügen über einen wissenschaftlich fundierten, ganzheitlichen Überblick über die \nRolle betrieblicher Informationssysteme im Unternehmen. Sie sind mit den entsprechenden \nBerufsbildern des Informatikers und Wirtschaftsinformatikers im Unternehmen vertraut. Sie \nkennen relevante aktuelle Herausforderungen und Entwicklungen der Praxis.",
    "Vorraussetzungen": "Empfohlen: Programmiererfahrung (Sprache unerheblich) und Software Engineering",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0317-vl] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  196 \n  [20-00-0317-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "",
    "Literatur": ""
  },
  {
    "Modulname": "Software Engineering - Design and Construction",
    "Modul Nr.": "20-00-0341",
    "Kreditpunkte": "8 CP",
    "Arbeitsaufwand": "240 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "Der primäre Inhalt der Veranstaltung ist der Entwurf modularer Software, um wartbare, \nwiederverwendbare und erweiterbare Sofwaresysteme zu erhalten.  \nIntegraler Bestandteil der Veranstaltung ist die Diskussion der Beziehung zwischen den \nEigenschaften fortschrittlicher Programmiersprachen und dadurch möglicher \nEntwurfsalternativen. Weiterhin wird die Auswirkung der Programmiersprache auf den \nEntwurf eines Softwaresystems als Ganzes besprochen.  \nDie Vorlesung behandelt insbesondere: \n● Prinzipien des Klassenentwurfs unter Verwendung fortgeschrittener Entwurfsmuster und \nfortschrittlicher Programmiersprachen; \n● Prinzipien des Entwurfs auf Paketebene; \n● Architekturelle Stile; \n● Dokumentation des Entwurfs; \n● Refactorings existierender Software; \n● Metriken zur Evaluierung von Entwürfen.",
    "Qualifikationsziele": "Nach dem erfolgreichen Abschluss der Lehrveranstaltung sind Studierende in der Lage die \nfolgenden Aufgaben durchzuführen: \n● Sie können den Entwurf existierender Systeme in Hinblick auf ihre Modularität \nanalysieren und ggf. Refactorings vorschlagen, die der Verbesserung bzw. Wiederherstellung \nselbiger dienen. \n● Sie verstehen die mittel- und langfristigen Auswirkung nicht-modularer Softwaresysteme. \n● Sie kennen fortgeschrittene Entwurfsmuster und können diese in existierendem Code \nidentifizieren und auch einsetzen, um neue Probleme zu lösen. \n● Sie kennen etablierte architekturelle Stile und können diese einsetzen. \nModulhandbuch B. Sc./M. Sc. Informatik  198 \n● Sie verstehen, dass die Lösung eines Entwurfsproblems von der gewählten \nProgrammiersprache abhängt und sind in der Lage entsprechende Entscheidungen kritisch \nzu hinterfragen.",
    "Vorraussetzungen": "Empfohlen: Successful completion of the lecture Software Engineering",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Distributed Software Systems \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Bass, L.; Clements, P.; Kazman, R. ; Software Architecture in Practice, Addison-Wesley \n● Booch, G. Object-Oriented Analysis and Design with Applications. Addison-Wesley \n● Budd, T. Introduction to Object-Oriented Programming. 2nd. ed., Addison-Wesley \n● Buschmann, F. et al. Pattern-Oriented Software Architecture: A System of Patterns. John \nWiley & Sons.  \n● Czarnecki, K. and Eisenecker, U. Generative Programming. Addison-Wesley.  \n● Garland, D. and Shaw, M. Software Architecture: Perspectives on an Emerging Discipline. \nPrentice Hall.  \n● Gamma, E. et al. Design Patterns: Elements of Reusable Object-Oriented Software. \nAddison-Wesley.  \nModulhandbuch B. Sc./M. Sc. Informatik  199 \n● Martin, Robert. Agile Software Development. Principles, Patterns, and Practices. Pearson \nUS Imports & PHIPEs.  \n● Riel, A. Object-Oriented Design Heuristics. Addison-Wesley."
  },
  {
    "Modulname": "Statische und dynamische Programmanalyse",
    "Modul Nr.": "20-00-0580",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "- operationelle Semantiken für sequentielle und parallele Programme \n- Übersicht über Techniken zur statischen und dynamischen Programmanalyse \n- Abstrakte Interpretation \n- Datenflussanalysen \n- Slicing-Techniken \n- typbasierte Programmanalysen \n- Konzepte der Laufzeitüberwachung \n- Implementierungstechniken zur Laufzeitüberwachung \n- Sprachbasierte Sicherheit \n- Korrektheit und Präzision von Programmanalysen",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende ein Spektrum von \nunterschiedlichen Programmanalysen. Sie verstehen die Funktionsweise der einzelnen \nAnalysetechniken und verstehen die Unterschiede zwischen diesen. Sie können beurteilen, \nwelche Analysetechnik für welche Problemstellung in Frage kommt und haben die Fähigkeit, \ndie ausgewählte Analysetechnik einzusetzen. Sie können Programmanalysen bezüglich ihrer \nPräzision und Korrektheit beurteilen. Sie können Programmanalysen auch implementieren \nund Varianten von bekannten Programmanalysen definieren.",
    "Vorraussetzungen": "Empfohlen: \nInformatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit, \nmit formalen Sprachen und Kalkülen umzugehen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  201 \n  [20-00-0580-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0580-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "IT-Lösungen durch praxiserprobtes Software Engineering",
    "Modul Nr.": "20-00-0635",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "- Modellierung mit UML bzw. DSL und Code-Generierung",
    "Qualifikationsziele": "Die Teilnehmer lernen theoretisch und praktisch - anhand von Fallbeispielen aus der Praxis - \nwie Software-Engineering zur Erarbeitung von IT-Lösungen eingesetzt wird. Dabei werden \nmoderne, praxiserprobte Konzepte zur Erstellung von IT-Lösungen vorgestellt, zum Beispiel \nModellierung (Geschäftsprozesse, UML, DSL), Generierung und Testautomatisierung. Die \nTeilnehmer können die Wirtschaftlichkeit von IT-Projekten bewerten, praxiserprobte \nProjektmanagement-Pattern einsetzen und lernen die umgebenden Rahmenbedingungen einer \nIT-Organisation swoie die Rolle des CIO in einem Unternehmen als Berater der Fachbereiche \nkennen. Sie beherrschen das Anforderungsmanagement und den Lösungsentwurf, insbesondere \nfür mobile Anwendungen und SAP-Lösungen. Die Veranstaltung wird durch eingeladene \nVorträge von Experten aus der Praxis ergänzt.",
    "Vorraussetzungen": "Empfohlen:  \nFunktionale und objektorientierte Programmierkonzepte  \nAlgorithmen und Datenstrukturen \nEinführung in Software Engineering",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0635-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  203",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0635-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Automatisches Beweisen",
    "Modul Nr.": "20-00-0660",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "● Theoretische Grundlagen der im automatischen Beweisen verwendeten Kalküle für Logik \nerster Stufe \n● Korrektheits- und Vollständigkeitsbeweise \n● Algorithmen und Datenstrukturen, die in automatischen Beweisern für Logik erster Stufe \neingesetzt werden \n● Vergleich verschiedener Ansätze im automatischen Beweisen \n● Grundlagen moderner SAT- und SMT-Lösungswerkzeuge",
    "Qualifikationsziele": "Die erfolgreiche Teilnahme an der Lehrveranstaltung versetzt die Studierenden in die Lage, \ndie wichtigsten modernen automatische Beweisverfahren im Detail zu verstehen, ihre Vor- \nund Nachteile zu beurteilen und in der Praxis anzuwenden.",
    "Vorraussetzungen": "Empfohlen: Stark empfohlen wird die Teilnahme an der Vorlesung “Aussagen- und \nPrädikatenlogik” oder vergleichbarer Module. Ansonsten genügt eine gewisse \nmathematische Reife.",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  205",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Robinson, Voronkov: Handbook of Automated Reasoning, 2 vols., North-Holland"
  },
  {
    "Modulname": "Optimierungsalgorithmen",
    "Modul Nr.": "20-00-0667",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Algorithmische Standardansätze für komplexe diskrete Optimierungsprobleme, bspw. \nEvolutionsstrategien, dynamische Programmierung, Branch-and-Bound u.ä.",
    "Qualifikationsziele": "In der Veranstaltung erwerben Studierende systematische Kenntnis generischer \nalgorithmischer Ansätze in der diskreten Optimierung sowie die Fähigkeit, komplexe \ndiskrete Optimierungsprobleme Ziel führend algorithmisch anzugehen.",
    "Vorraussetzungen": "Empfohlen: Funktionale und objektorientierte Programmierkonzepte,  Algorithmen und \nDatenstrukturen oder vergleichbar.",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Visual Computing \nModulhandbuch B. Sc./M. Sc. Informatik  207 \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Fortgeschrittener Compilerbau",
    "Modul Nr.": "20-00-0701",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- Compilierung und Laufzeitumgebung für objektorientierte Programmiersprachen \n- Kontrollflussgraphen als Zwischendarstellung \n- Statische Datenflußanalyse \n- Static Single Assignment Form \n- Eliminierung totaler und partieller Redundanz \n- Skalare Optimierung \n- Registerallokation \n- Ablaufplanung \n- Schleifenoptimerung \n- Aufbau realer Compiler (z.B. Phasen, Zwischendarstellung, Compilefluß)",
    "Qualifikationsziele": "Studierende verstehen nach erfolgreichem Besuch Techniken für die Übersetzung und \nAusführung von objektorientierten Programmen auf Maschinenebene. Sie können die \nstatische Datenflussanalyse auf Kontrollflussgraphen anwenden und sind geübt im \npraktischen Umgang mit deren SSA-Darstellung. Sie beherrschen Optimierungsverfahren für \neine Reihe von Aufgaben sowie fundamentale Verfahren für die Registerallokation. Sie \nkennen die interne Struktur von realen Compilern für den Produktivbetrieb.",
    "Vorraussetzungen": "Empfohlen: Erfolgreicher Besuch der Veranstaltung “Einführung in den Compilerbau”",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  209",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Distributed Software Systems \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete \nLiteratur könnten sein: \nCooper/Torczon: Engineering a Compiler \nMuchnick: Advanced Compiler Design and Implementation \nAho/Lam/Sethi/Ullman: Compilers - Principles, Techniques, and Tools"
  },
  {
    "Modulname": "Formale Spezifikation und Verifikation von Software",
    "Modul Nr.": "20-00-0794",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In dieser Vorlesung behandeln wir fortgeschrittene Themen aus dem Gebiet der formalen \nSpezifikation und deduktiven Verifikation objekt-orientierter Software. \nDer Kurs deckt insbesondere folgende Themen ab: \n* Spezifikation von Interfaces und Klassen mit Hilfe von Queries, Ghost- und Modellfeldern; \n* Das \"Framing\" Problem: Statische und dynamische Frames \n* Programmlogik und -kalkül als Grundlage der deduktiven Verifikation \n* Spezifikation und Verifikation rekursiver Methoden und Schleifen \n* Modulare Verifikation: Sichtbarkeiten, Beweis und Anwendung von Framing-Eigenschaften \n* Automatische Erzeugung von Schleifeninvarianten und Methodenverträgen \nDer Kurs behandelt vorwiegend sequentielle Programme. Es werden aber auch aktuelle \nAnsätze zur Spezifikation und Verifikation nebenläufiger bzw. verteilter Software diskutiert. \nFür fast alle Themen wird deren praktische Anwendung mit Hilfe geeigneter Tools \ndemonstriert und in den Übungen vertieft.",
    "Qualifikationsziele": "* Erwerbung der Fähigkeit zur Spezifikation komplexer objekt-orientierter Software \n* Studierende sollen in der Lage sein einen für das vorliegende Problem passenden \nSpezifikationsansatz auszuwählen und anzuwenden \n* Studierende sollen in der Lage sein rekursive Methoden und Schleifen zu spezifizieren \n* Studierende sollen in der Lage sein mit Hilfe von deduktiver Verifikation ihre Programme als \nkorrekt zu beweisen",
    "Vorraussetzungen": "Empfohlen:  \nGrundlagenwissen über Logik erster Ordnung \nInhalt der Vorlesungen \nModulhandbuch B. Sc./M. Sc. Informatik  211 \nFormale Grundlagen der Informatik 2 und 3 \n(oder vergleichbarer)",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0794-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0794-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Sicheres Service-Computing",
    "Modul Nr.": "20-00-0926",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "- Konzepte und Grundlagen des Service-Computings \n- Modellierungs- und Ausführungssprachen für Geschäftsprozesse \n- Formale Analyse und Durchsetzung von Sicherheitsanforderungen in Geschäftsprozessen \n- Service-Spezifikationen und Service-Matching-Methodiken in \nServicemärkten \n- Laufzeitüberwachung und -durchsetzung for Servicemärkte \n- Service-Integration in Web-Anwendungen \n- Sichere Service-Integration durch Testing und durch Durchsetzung zur Laufzeit",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an diesem Kurs kennen Studenten die zentralen Konzepte des \nService Computing sowie Sicherheitskonzepte im Bereich des Service Computing. Sie \nverstehen, wie Sicherheitsanforderungen an Dienste in Geschäftsprozessen, Servicemärkten \nund Web-Anwendungen modelliert und analysiert werden können. Darüber hinaus sind sie \nfähig, Testfälle zu formulieren, mit denen mögliche Angriffe die Benutzung von Diensten \nerkannt werden können. Sie sind weiterhin fähig, Service-Integrationen in verschiedene \nAnwendungsdomänen mittels Laufzeitüberwachung und -durchsetzung abzusichern.",
    "Vorraussetzungen": "Empfohlen: \nInformatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiengangs Informatik",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0926-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  213 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0926-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Seitenkanalanalyse der Software",
    "Modul Nr.": "20-00-0927",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In dieser Vorlesung sollen Methoden zum Auffinden, Ausnutzen, Auswerten und Abschwächen \nvon Seitenkanälen in Software behandelt werden. Dabei werden u.a. folgende Themen \nbehandelt: \n- Einführung in Informationstheorie und Programmanalyse, \n- Auffinden von Seitenkanalschwachstellen durch Programmanalyse, \n- Design, Konstruktion und Implementierung von Seitenkanalangriffen, \n- Angriffe basierend auf Laufzeitmessungen, Eigenschaften der Mikroarchitektur und des \nEnergieverbrauchs, \n- informationstheoretisches Modellieren von Seitenkanälen und Seitenkanalangriffen, \n- Quantitative Auswertung von Seitenkanälen, \n- Design und Evaluation von Gegenmaßnahmen gegen Seitenkanäle. \nSeitenkanäle sind unbeabsichtigte Kommunikationskanäle zur Übertragung von Information \nwährend der Programmausführung. Laufzeit, Energieverbrauch, elektromagnetische \nEmissionen, Cacheverhalten und andere Charakteristika können zu Seitenkanälen führen. Die \nBeobachtungen in solchen Charakteristika können von geheimen Daten abhängen, die vom \nProgramm verarbeitet werden. Durch das Ausnutzen der Abhängigkeit zwischen den \nInformationen, die über einen Seitenkanal übertragen werden, und geheimen Informationen, \nkann ein Hacker eben jene geheime Informationen sammeln. Dieser Vorgang wird \nSeitenkanalangriff genannt. Ein Beispiel für solch einen Angriff ist das ableiten \nkryptographischer Schlüssel, deren Verlust ein umfassendes Sicherheitsrisiko darstellen. \nAufgrund verbesserter Schutzmechanismen ist es immer schwieriger traditionelle \nSicherheitslücken wie z.B. Programmierfehler auszunutzen. Deswegen werden \nSeitenkanalschwachstellen immer attraktiver für Hacker. Im Laufe der letzten zwei Jahrzehnte \nwurden mehrere Seitenkanalangriffe auf viele kryptographische Algorithmen (z.B. RSA, AES, \nDES), Protokolle (z.B. SSL, TLS, SSH), Webanwendungen, Betriebssysteme, Mobilgeräte und \ndie Cloud erfolgreich ausgeführt. \nDie Seitenkanalanalyse ist der Bereich der IT-Sicherheit, der sich mit dem Auffinden und \nAuswerten von Seitenkanalschwachstellen, der Konstruktion von Seitenkanalangriffen und dem \nDesign wirkungsvoller Gegenmaßnahmen beschäftigt. \nModulhandbuch B. Sc./M. Sc. Informatik  215",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an dieser Vorlesung sind die Studenten fähig \n- verschiedene Arten von Seitenkanalschwachstellen in Software zu erklären und zu \ndifferenzieren, \n- Seitenkanalschwachstellen in Programmcode zu identifizieren, \n- Programmanalysen zur automatischen Erkennung von Seitenkanalschwachstellen zu \nentwerfen, \n- verschiedene Arten von Seitenkanalangriffen zu erklären und zu unterscheiden, \n- Seitenkanalangriffe gegen Software zu entwerfen und zu implementieren, \n- Seitenkanäle und Seitenkanalangriffe mit Hilfe von Informationstheorie zu modellieren, \n- informationstechnische Schranken für den Informationsfluss über Seitenkanäle abzuleiten, \n- die Bedrohung durch einen Seitenkanal empirisch zu evaluieren, \n- Gegenmaßnahmen für Seitenkanäle zu erklären und zu differenzieren, \n- Programme mit Hilfe von Programmtransformation gegen Seitenkanäle abzusichern, \n- über die Effektivität und Effizienz von Gegenmaßnahmen gegen Seitenkanäle zu \nargumentieren und \n- den Trade-Off zwischen Sicherheit und Leistungsfähigkeit im Kontext von Gegenmaßnahmen \ngegen Seitenkanäle abzuwägen.",
    "Vorraussetzungen": "Empfohlen: \nInformatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs \nInformatik, insbesondere grundlegende Kenntnisse in den Bereichen Kryptographie und \nSemantiken von Programmiersprachen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0927-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0927-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Program Testing and Analysis",
    "Modul Nr.": "20-00-0933",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Wir behandeln die Theorie und Anwendungen von Verfahren zum Testen und Analysieren \ngroßer Softwaresysteme. Ausgehend von einem Überblick über die Programmanalyse werden \nwir zwei Themengebiete genauer betrachten: \nTestgenerirung, d.h. Verfahren zum automatischen Erstellen von Programmeingaben, und \ndynamische Programmanalyse, d.h. Ansätze zum Analysieren des Laufzeitverhaltens eines \nProgrammes. Neben wöchentlichen Vorlesungen werden die Studenten das Verständnis des \nStoffes in einem praktischen Projekt vertiefen (Implementierung einer Programmanalyse \nbasierend auf einem existierenden Framework) und beim Schreiben eines Term Papers \ngrundlegende Forschungsfähigkeiten erwerben. Ein positiver Nebeneffekt der Veranstaltung \nist, dass die Studenten häufige Fehlerquellen und Verfahren, um diese aufzudecken, \nkennenlernen und somit ihre Programmierfähigkeiten verbessern.",
    "Qualifikationsziele": "Studierende, die diesen Kurs absolviert haben werden in der Lage sein Programmanalysen und \nderen Implementierung zu verstehen, eigene Analysen zu entwickeln und diese formal zu \nbeschreiben.",
    "Vorraussetzungen": "Basiswissen im Compilerbau ist hilfreich, aber nicht zwingend erforderlich.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0933-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nDie Note setzt sich zusammen aus Teilnoten für eine schriftliche Prüfung, dem praktischen \nProjekt und des Term Papers. \nModulhandbuch B. Sc./M. Sc. Informatik  217",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0933-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Softwaretechnik für Multicore-Systeme",
    "Modul Nr.": "20-00-0940",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "• Einführung in die Softwareentwicklung für Multicore-Systeme anhand praktischer Bespiele, \nÜbungen und Fallstudien mit verschiedenen parallelen Programmiermodellen \n• Vermittlung praktischer Kenntnisse im Bereich Multicore-Programmierung \n• Ausgewählte Prinzipien und Themen aus den Bereichen parallele Programmiermodelle und \n–sprachen; Entwurfsmuster sowie Fehlerfindung werden exemplarisch und ausführlich \ndiskutiert \n• Einführung in verschieden Werkzeuge und Methoden für die Softwareentwicklung auf \nMulticore/Manycore-Systemen \n• Multicoresoftware-Projekt mit allen Entwicklungsphasen einschließlich \nAnforderungsanalyse, Entwurf, Implementierung, Testen, Debugging und Dokumentation \n• Präsentation und Demonstration des Projekts und dessen Ergebnisse",
    "Qualifikationsziele": "• Effiziente parallele Programme auf Multicore-/Manycore-Systemen mit gemeinsamem \nSpeicher entwickeln \n• Im Team arbeiten \n• Projektergebnisse vor Publikum präsentieren \n• Softwareprojekt planen und durchführen",
    "Vorraussetzungen": "Empfohlen: Programmierkenntnisse. Kenntnisse in Softwaretechnik und paralleler \nProgrammierung sind erwünscht.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0940-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  219",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0940-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Applied Static Analysis",
    "Modul Nr.": "20-00-0949",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Foundations of (scalable) static analyses for large(r) software systems; in particular \n- Basic Terminology: \n- AST, SSA, \n- Object-/ Field-/ Context-/ Flow-/ Path Sensitivity \n- (I)CFG \n- Inter-procedural analyses \n- … \n- stack based intermediate representations (JVM Bytecode) \n- register based intermediate representations (LLVM IR) \n- program transformations and native code analyses using LLVM \nConcrete static analyses and algorithms: \n- Call graph algorithms for libraries and applications \n- Inter procedural data- and control-flow analyses \n- IDE/IFDS \n- Points-to analyses \n- Escape analyses \nApplications \n- General software quality analyses \n- Capability Analysis \n- Security Vulnerabilities Detection \n- Dead Paths/Computations \n- Next generation software development tools",
    "Qualifikationsziele": "Students can effectively use the basic static analyses related terminology. \nStudents are familiar with modern static analyses working on intermediate representations. \nThey are able to apply and adapt available static analysis algorithms to new scenarios.",
    "Vorraussetzungen": "Empfohlen:  \nModulhandbuch B. Sc./M. Sc. Informatik  221 \nThe lecture is targeted towards Master students with a very high degree of interest in reading, \nanalyzing and also writing code. Basic knowledge in compiler construction is helpful. Deep \nknowledge of object-oriented programming concepts and in particular of object-oriented \nprogramming in Java is required. Interest in learning new programming languages (in \nparticular Scala) is required.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0949-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nStudierende, die die Lehrveranstaltung 20-00-0732 oder 20-00-0771 besucht haben, dürfen \ndiese Veranstaltung nicht hören, da die Inhalte sehr vergleichbar sind.",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0949-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Concepts and Technologies for Distributed Systems and Big Data Processing",
    "Modul Nr.": "20-00-0951",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "The course provides an overview of recent advances in distributed systems for Big Data \nprocessing. The course starts presenting computational models for high throughput batch \nprocessing like MapReduce. Next, we will introduce software engineering techniques for \ndistributed systems such as REST and component-based architectures. We will then cover low \nlatency real time stream processing and complex event processing. Finally, we will present \nadvanced topics in distributed data-intensive systems, such as geodistribution and \nsecurity. \nThe course focuses both on the fundamental concepts as well as on the concrete technologies \nand applications of the aforementioned techniques to real-world case studies.",
    "Qualifikationsziele": "- The students are familiar with basic concepts and technologies on distributed systems and \nbig data and are able to implement basic cloud based/distributed applications. \n- The students are familiar with the fundamental computational models behind recent \nadvances in distributed systems, such as models for batch processing of massive data amounts, \nstream processing and complex event processing. \n- The students are familiar with selected advanced topics on big data, including security and \ngeolocalization. \n- The students know about real-world case studies that apply the concepts and the \ntechnologies presented during the course.",
    "Vorraussetzungen": "Empfohlen: \nThis course is targeted at master students. \nModulhandbuch B. Sc./M. Sc. Informatik  223",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0951-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Pass exam (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0951-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "M. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Multithreading in C++",
    "Modul Nr.": "20-00-0953",
    "Kreditpunkte": "10 CP",
    "Arbeitsaufwand": "300 h",
    "Selbststudium": "210 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "C++ bietet eine der fortschrittlichsten Threadschnittstellen, die heute verfügbar sind. Am \nBeispiel C++ führt dieser Kurs in die parallele Programmierung für gemeinsamen Speicher mit \nThreads ein. \n• Architekturen mit gemeinsamem Speicher \n• Management von Threads \n• Zugriff auf gemeinsame Daten \n• Synchronisierung nebenläufiger Operationen \n• Entwurf lockbasierter nebenläufiger Datenstrukturen \n• Entwurf von nebenläufigem Code \n• Testen und Fehlersuche",
    "Qualifikationsziele": "Kompetenz in der Entwicklung paralleler Programme \n• Systematisch korrekte und effiziente parallele Programme entwickeln \n• Parallele Datenstrukturen entwerfen und umsetzen",
    "Vorraussetzungen": "Empfohlen: \nKenntnisse in C/C++",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0953-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nStudierende, die die Veranstaltung 20-00-0801 abgeschlossen haben, dürfen diese \nVeranstaltung nicht einbringen. \nModulhandbuch B. Sc./M. Sc. Informatik  225",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0953-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Einführung in Enterprise-Architektur-Management",
    "Modul Nr.": "20-00-0967",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Die Vorlesung gibt eine Einführung in die Kernkonzepte und Vorgehensmodelle der \nUnternehmensarchitektur. Anhand eines in der Praxis weitverbreiteten Frameworks (TOGAF) \nwerden diese vorgestellt. Es werden theoretische Grundlagen zu Architekturmodellen und \nMetamodellen (ISO/IEC/IEEE 42010) präsentiert. Der Bedarf und Zweck von \nUnternehmensarchitekturen in komplexen und großen Organisationen wird mit praxisnahen \nBeispielen illustriert. Zudem werden die wesentlichen Managementprozesse der \nUnternehmensarchitektur vorgestellt und deren Zusammenspiel mit anderen IT-\nManagementprozessen, wie Demand Management und Projektportfolio Management, \ndiskutiert. Abschließend wird eine Einführung in die Standardisierung der \nLösungsentwicklung für Unternehmensarchitekturen gegeben und in diesem Kontext der \nEinsatz von Referenzarchitekturen vorgestellt. \nDas Ziel der Vorlesung ist es, einerseits eine theoretische Einführung in die Grundlagen des \nEnterprise Architektur Managements zu geben und andererseits praktische Herausforderungen \nder Unternehmensarchitekturen mit Beispielen aus der Praxis zu illustrieren.",
    "Qualifikationsziele": "Einführung in Unternehmensarchitekturen und deren Managementprozesse. \nDie Rolle und Zweck von Unternehmensarchitekturen für das Business IT Alignment \nnachvollziehen. Kernkonzepte der Unternehmensarchitektur und das Management von \nUnternehmensarchitekturen verstehen. Einblicke in Perspektiven, Aspekte und Beziehungen in \nEnterprise Architecture Frameworks geben (TOGAF). Einblicke in \nArchitekturbeschreibungsmodelle und Metamodelle (ISO/IEC/IEEE 42010). \nEinführung in die Standardisierung von Lösungen und Referenzarchitekturen. \nModellierung von Unternehmensarchitekturen mit ArchiMate.",
    "Vorraussetzungen": "Empfohlen: Grundwissen in Informatik und Software Engineering",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  227 \n  [20-00-0967-vl] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0967-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Fortgeschrittenes Multithreading in C++",
    "Modul Nr.": "20-00-0977",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "C++ bietet eine der modernsten Threadschnittstellen, die heute verfügbar sind. Am Beispiel \nC++ führt dieser Kurs in die fortgeschrittene parallele Programmierung für gemeinsamen \nSpeicher mit Threads ein. \nAufbauend auf den Inhalten der Vorlesung Multithreading in C++ werden die folgenden \nThemen behandelt: \n• C++ Speichermodell und atomare Operationen \n• Entwurf lockfreier nebenläufiger Datenstrukturen \n• Forstgeschrittenes Thread-Management (z.B. Thread Pools)",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, haben Sie erweiterte Kompetenz in der \nEntwicklung paralleler Programme und sind in der Lage \n- Systematisch korrekte und effiziente parallele Programme zu entwickeln \n- Parallele Datenstrukturen zu entwerfen und umzusetzen",
    "Vorraussetzungen": "Empfohlen: \n• Kenntnisse in C/C++ \n• Basiskenntnisse der Programmierung von Threads in C++ (lockbasierte Synchronisation und \nlockbasierte nebenläufige Datenstrukturen)",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0977-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  229 \nDiese Modul ersetzt das bisherige Modul \"Fortgeschrittene parallele Programmierung 2\" \n(FPPROG2), 20-00-0938. Studierende, die eine Prüfung in FPPROG2 absolviert haben, können \nkeine in diesem Modul machen.",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0977-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Software Analyse mit Deep Learning",
    "Modul Nr.": "20-00-0999",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Software-Entwickler nutzen Werkzeuge zum Automatisieren einzelner Teilaufgabe des \nEntwicklungsprozesses. Jüngste Fortschritte im maschinellen Lernen, insbesondere im Bereich \nDeep Learning, ermöglichen Werkzeuge die vor einigen Jahren noch undenkbar schienen. \nZum Beispiel sagen solche Werkzeuge voraus, welchen Programmcode ein Entwickler als \nnächstes schreiben möchte, welche Teile eines Programms wahrscheinlich inkorrekt sind und \nwie man Programmierfehler beheben kann. Diese Veranstaltung bietet eine Einführung in \nMethoden und Techniken aus der Schnittmenge der Bereiche Programmanalyse und \nmaschinelles Lernen. Im ersten Teil des Kurses werden Grundlagen beider Bereiche sowie \nderen Anwendungen in verschiedenen Deep Learning-basierten Software-Werkzeugen \nbehandelt. Im zweiten Teil der Veranstaltung werden die Studenten selbst eine solches \nWerkzeug implementieren. Die theoretischen und praktischen Teile der Veranstaltung \nergänzen sich und erlauben so ein tiefgreifendes Verständnis des Themas.",
    "Qualifikationsziele": "Die theoretischen und praktischen Teile der Veranstaltung ergänzen sich und erlauben so ein \ntiefgreifendes Verständnis des Themas.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0999-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nDie Benotung erfolgt auf Basis der Implementierung des Projektes und einer schriftlichen \nPrüfung. \nModulhandbuch B. Sc./M. Sc. Informatik  231",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0999-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Advanced C++modern programming",
    "Modul Nr.": "20-00-1068",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Die Vorlesung wird die letzten Änderungen und Erweiterungen der Sprache C++ behandeln \nund insbesondere auf die Standards: \nISO/IEC 14882:2011, 14882:2014, and 14882:2017 eingehen. \nDie Liste der Themen: \n1. Einführung in modernes C++ \n2. Verbessertes Typsystem \n3. Uniforme Initialisierung \n4. Moderner Ansatz in Hinblick auf den Entwurf und Implementierung von Klassen \n5. Verbesserungen für die Entwicklung von Bibliotheken \n6. Moderne \"generische Programmierung\" \n7. Einführung in die Metaprogrammierung \n8. Vereinfachung von Code durch den Einsatz von Standardkomponenten \n9. STL: Containers, Algorithmen und Iteratoren \n10. Neueste Entwicklungen: C++17 \n11. Die Zukunft von C++: C++20",
    "Qualifikationsziele": "+ Die Studierenden werden in der Lage sein die Hauptunterschiede zwischen den modernen \nC++ Standards zu benennen \n+ Die Studierenden haben ein vertieftes Verständnis moderner \"generischer Programmierung\" \n+ Die Studierenden sind in der Lage die neuen Hauptkomponenten der C++ \nStandardbibliothek zu verwenden \n+ Die Studierenden können Abwägungen zwischen Flexibilität und Performance in modernen \nC++ nachvollziehen \n+ Die Studierenden haben ein Überblick über die Wahrscheinlichsten Entwicklungsschritte",
    "Vorraussetzungen": "Empfohlen:  \nModulhandbuch B. Sc./M. Sc. Informatik  233 \n+ Grundlagenwissen von C und C++ \n+ Vertrautheit mit den Grundlagen object-orientierter und generischer Programmierung \n+ Grundlagenwissen im Bereich funktionale Programmierung",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1068-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1068-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Automatische Softwareverifikation",
    "Modul Nr.": "20-00-1069",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Die Veranstaltung befasst sich mit dem Techniken zur automatischen Softwareverifikation und \nbehandelt dabei folgende Themebereiche: \n- operationelle Semantik von sequentiellen Programmen \n- konfigurierbare Programmanalyse inklusive Konfiguration für Datenflussanalysen und Model \nChecking \n- counter-example guided abstraction refinement (CEGAR) \n- Bounded Model Checking \n- k-Induktion \n- kooperative Verifikation, insbesondere Conditional Model Checking \n- inkrementelle Verifikation \n- Nachprüfung von Verifikationsergebnissen (a la Proof-Carrying Code, Witness Validation) \n- Generierung von Testeingaben mittels Verifizierern",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden eine Vielzahl von \nVerfahren zur automatischen Verfikation benennen. Sie können die den Verfahren zugrunde \nliegenden Formalismen wiedergeben, die Funktionsweise der Verfahren beschreiben und die \nVerfahren klassifizieren. Außerdem können die Studierenden die Verfahren auf Beispielen \nanwenden und neue konfigurierbare Programmanalysen entwickeln.",
    "Vorraussetzungen": "Empfohlen: \nInformatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs \nInformatik, insbesondere Kenntnisse aus der Vorlesung Aussagen und Prädikatenlogik oder \nVergleichbares.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1069-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  235",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1069-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Typsysteme",
    "Modul Nr.": "20-00-1076",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Typsysteme bieten einen effizienten Weg, um die korrekte Funktionsweise von Programmen zu \ngarantieren, bevor diese überhaupt gestartet werden. Es gibt sie in den verschiedensten \nAusprägungen: als Standard-Konstrukt und Teil einer Programmiersprache oder speziell für \nbestimmte Anwendungen entworfen. \nWir werden uns u.A. mit den folgenden Themen beschäftigen: \n- Einfach getypter lambda-Kalkül \n- Statische vs. dynamische Analyse von Typen \n- Operationale Semantik \n- Soundness von Typsystemen \n- Typ Inferenz \n- Curry-Howard-Korrespondenz \n- Polymorphism \n- Subtyping \n- Safety und Liveness Garantien durch Typsysteme \n- Abhängige Typen",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende ein Spektrum von \nunterschiedlichen Typsystemen und ihre Einsatzgebiete. Sie verstehen die Grundlagen und \nFunktionsweise statische Programmanalyse und die Unterschiede verschiedener Typsysteme. Sie \nkönnen können verschieden artige Typsysteme anwenden. Darüber hinaus können sie \nbeurteilen und formal analysieren, welche Eigenschaften ein Typsystem garantieren kann. Sie \nkennen die Grenzen statischer Analysen und können Varianten bekannter Typsysteme für neue \nAnwendungen definieren.",
    "Vorraussetzungen": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit, \nmit formalen Sprachen und Kalkülen umzugehen. \nModulhandbuch B. Sc./M. Sc. Informatik  237",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1076-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1076-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B,Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Verifikation paralleler Programme",
    "Modul Nr.": "20-00-1079",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Die Veranstaltung befasst sich mit überwiegend automatischen Techniken zur Verifikation von \nparallelen Programmen, insbesondere multi-threaded Programmen mit gemeinsamen Speicher. \nDie Veranstaltung behandelt dabei folgende Themenbereiche: \n- Semantik von parallelen Programmen (z.B. Interleaving-Semantik, Semantik von \nausgewählten schwachen Speichermodellen) \n- Statische und dynamische Techniken zur Erkennung von Data Races \n- Techniken der Deadlockanalyse \n- Analyse von Programmeigenschaften (z.B. mittels Sequentialisierung, Bounded Model \nChecking, etc.) \n- Partial Order Reduction \n- Thread-modulare Verifikation \n- Verifikation unter schwachen Speichermodellen",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden Verfahren zur \nVerifikation von parallelen Programmen, insbesondere Verfahren zur Analyse von Data Races, \nDeadlocks und Sicherheitseigenschaften (Safety) benennen. Sie können die den Verfahren \nzugrunde liegenden Formalismen wiedergeben, die Funktionsweise der Verfahren beschreiben \nund die Verfahren auf Beispielen anwenden. Außerdem können die Studierenden die Stärken \nund Schwächen der Verfahren beurteilen.",
    "Vorraussetzungen": "Empfohlen: Informatikkenntnisse entsprechend der ersten vier Semester des \nBachelorstudiengangs Informatik. Vorteilhaft, aber nicht erforderlich ist der Besuch der \nVeranstaltung Automatische Software Verifikation.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1079-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  239",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1079-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Analyse Hybrider Systeme",
    "Modul Nr.": "20-00-1087",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "• Hybride Automaten \n• Erreichbarkeitsanalyse linear hybrider Automaten mit Flowpipes \n• Differentielle dynamische Logik \n• Kalkül für eine differentielle dynamische Logik \n• Modellierungsprinzipien hybrider Automaten und differentieller dynamischer Logik",
    "Qualifikationsziele": "Die Studierenden erwerben folgende Fähigkeiten: \n• Modellierung Cyber-Physikalischer Systeme als hybride Automaten und hybride Programme \n• Spezifikation von Erreichbarkeitseigenschaften und Invarianten solcher Modelle \n• Verständnis für den Unterschied von explorativer und deduktiver Verifikation \n• Verständnis grundlegender Verifikationsalgorithmen hybrider Systeme \n• Kenntnis typischer Modellierungsmuster und -fehler",
    "Vorraussetzungen": "Empfohlen werden Grundkenntnisse in Logik und Differentialgleichung entsprechend der \nBachelorvorlesungen “Aussagenlogik und Prädikatenlogik”, “Formale Methoden im \nSoftwareentwurf” und “Mathematik 3 für Informatiker”",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1087-vl] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1087-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%) \nModulhandbuch B. Sc./M. Sc. Informatik  241",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Petrinetze und deren Analyse",
    "Modul Nr.": "20-00-1092",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Petrinetze sind ein weit verbreitetes Werkzeug zur Modellierung und Verifikation sequentieller \nund verteilter Systeme. Als graphisches Modell überzeugen sie durch Anschaulichkeit und \nVerständlichkeit und kommen daher auch in vielen Bereichen außerhalb der Informatik zum \nEinsatz. Der Fokus dieser Lehrveranstaltung liegt auf dem Einsatz von Petrinetzen als Tool für \ndie Verifikation. Nach einer Einführung in Petrinetze als Modellierungswerkzeug, werden wir \nuns mit verschiedenen Analysemethoden auf Petrinetzen beschäftigen. Dazu betrachten wir \nverschiedene für die Verifikation wichtige Fragestellungen, wie Terminierung und Lebendigkeit, \nund diskutieren Techniken mit denen diese Eigenschaften auf Petrinetz-Modellen analysiert \nwerden können.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende ein weiteres \nModellierungs- und Analysewerkzeug für sequentielle und verteilte Systeme. Sie wissen, wie sie \ndas Verhalten von Systemen anschaulich als Petrinetz darstellen können und kennen \nverschiedene Analysemethoden für solche Netze. Damit können sie die Qualität von z.B. \nSoftwareprodukten verbessern und Garantien für deren korrektes Verhalten liefern.",
    "Vorraussetzungen": "Empfohlen werden Informatik- und Mathematikkenntnisse entsprechend den ersten 4 \nSemestern des Bachelorstudiengangs Informatik, insbesondere formalen Sprachen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1092-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%).",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  243 \n  [20-00-1092-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Software-Engineering - Wartung und Qualitätssicherung",
    "Modul Nr.": "18-su-2010",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Lehrveranstaltung vertieft Teilthemen der Softwaretechnik, welche sich mit der Pflege \nund Weiterentwicklung und Qualitätssicherung von Software beschäftigen. Dabei werden \ndiejenigen Hauptthemen des IEEE \"Guide to the Software Engineering Body of Knowledge\" \nvertieft, die in einführenden Softwaretechnik-Lehrveranstaltungen  nur kurz angesprochen \nwerden. Das Schwergewicht wird dabei auf folgende Punkte gelegt: Softwarewartung und \nReengineering, Konfigurationsmanagement, statische Programmanalysen und Metriken \nsowie vor allem dynamische Programmanalysen und Laufzeittests. In den Übungen wird als \ndurchgängiges Beispiel ein geeignetes \"Open Source\"-Projekt ausgewählt. Die \nÜbungsteilnehmer untersuchen  die Software des gewählten Projektes in einzelnen Teams, \ndenen verschiedene Teilsysteme des betrachteten Gesamtsystems zugeordnet werden.",
    "Qualifikationsziele": "Die Lehrveranstaltung vermittelt an praktischen Beispielen und einem durchgängigen \nFallbeispiel grundlegende Software-Wartungs- und Qualitätssicherungs-Techniken, also eine \ningenieurmäßige Vorgehensweise zur zielgerichteten Wartung und Evolution von \nSoftwaresystemen. Nach der Lehrveranstaltung sollte ein Studierender in der Lage sein, die \nim Rahmen der Softwarewartung und -pflege eines größeren Systems anfallenden \nTätigkeiten durchzuführen. Besonderes Augenmerk wird dabei auf  Techniken zur \nVerwaltung von Softwareversionen und –konfigurationen sowie auf das systematische \nTesten von Software gelegt. In der Lehrveranstaltung wird zudem großer Wert auf die \nEinübung praktischer Fertigkeiten in der Auswahl und im Einsatz von \nSoftwareentwicklungs- Wartungs- und Testwerkzeugen verschiedenster Arten sowie auf die \nArbeit im Team unter Einhaltung von vorher festgelegten Qualitätskriterien gelegt.",
    "Vorraussetzungen": "Modulhandbuch B. Sc./M. Sc. Informatik  245 \nEmpfohlen: Grundlagen der Softwaretechnik sowie gute Kenntnisse einer objektorientierten \nProgrammiersprache.",
    "Prüfungsform": "Fachprüfung",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "MSc ETiT, MSc iST, MSc Wi-ETiT, Informatik",
    "Literatur": "www.es.tu-darmstadt.de/lehre/se_ii/"
  },
  {
    "Modulname": "Graphische Datenverarbeitung I",
    "Modul Nr.": "20-00-0040",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Einführung in die Grundlagen der Computergraphik, insb. Ein- u. Ausgabegeräte, Rendering \nPipeline am Beispiel von OpenGL, räumliche Datenstrukturen, Beleuchtungsmodelle, Ray \nTracing, aktuelle Entwicklungen in der Computergraphik",
    "Qualifikationsziele": "Nach erfolgreichem Besuch dieser Veranstaltung sind Studierende in der Lage alle \nKomponenten der Graphikpipeline zu verstehen und dadurch variable Bestandteile (Vertex-\nShader, Fragment-Shader, etc.) anzupassen. Sie können Objekte im 3D-Raum anordnen, \nverändern und effektiv speichern, sowie die Kamera und die Perspektive entsprechend \nwählen und verschiedene Shading-Techniken und Beleuchtungsmodelle nutzen, um alle \nSchritte auf dem Weg zum dargestellten 2D-Bild anzupassen.",
    "Vorraussetzungen": "Empfohlen:  \n● Programmierkenntnisse \n● Grundlegende Algorithmen und Datenstrukturen \n● Lineare Algebra \n● Analysis \n● Inhalte der Vorlesung Visual Computing",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  248",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Real-Time Rendering: Tomas Akenine-Möller, Eric Haines, Naty Hoffman A.K. Peters Ltd., \n3rd edition, ISBN 987-1-56881-424-7 \n● Fundamentals of Computer Graphics: Peter Shirley, Steve Marschner, third edition, ISBN \n979-1-56881-469-8 \n● Weitere aktuelle Literaturhinweise werden in der Veranstaltung gegeben."
  },
  {
    "Modulname": "Graphische Datenverarbeitung II",
    "Modul Nr.": "20-00-0041",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Grundlagen der verschiedenen Objekt- und Oberflächen-Repräsentationen in der \ngraphischen Datenverarbeitung. Kurven und Oberflächen (Polynome, Splines, RBF) \nInterpolation und Approximation, Displaytechniken, Algorithmen: de Casteljau, de Boor, \nOslo, etc. Volumen und implizite Oberflächen. Visualisierungstechniken, Iso-Surfaces, MLS, \nOberflächen-Rendering, Marching-Cubes. Polygonnetze. Netz Kompression , Netz-\nVereinfachung, Multiskalen Darstellung, Subdivision. Punktwolken: Renderingtechniken, \nOberflächen-Rekonstruktion, Voronoi-Diagramme und Delaunay-Triangulierung.",
    "Qualifikationsziele": "Nach erfolgreichem Besuch dieser Veranstaltung sind Studierende in der Lage mit diversen \nObjekt- und Oberflächen-Repräsentationen umzugehen, das heißt diese zu verwenden, \nanzupassen, anzuzeigen (rendern) und effektiv zu speichern. Dazu gehören mathematisch \npolynomiale Repräsentationen, Iso-oberflächen, volumen Darstellungen, implizite \nOberflächen, Polygonnetze, Subdivision-Kontrollnetze und Punktwolken.",
    "Vorraussetzungen": "Empfohlen: Algorithmen und Datenstrukturen, Grundlagen aus der Höheren Mathematik, \nGraphische Datenverarbeitung I, C / C++",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  250 \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Real-Time Rendering: Tomas Akenine-Möller, Eric Haines, Naty Hoffman A.K. Peters Ltd., \n3rd edition, ISBN 987-1-56881-424-7 \n● Weitere aktuelle Literaturhinweise werden in der Veranstaltung gegeben."
  },
  {
    "Modulname": "Geometrische Methoden des CAE/CAD",
    "Modul Nr.": "20-00-0140",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "● parametrische Kurvenmodelle \n● parametrische Flächenmodelle \n● Topologie und CAD-Volumenmodelle \n● CAD-Operationen auf Flächen \n● Tessellierung \n● Approximation von Kurven und Flächen \n● Finite-Elemente-Methode und Strömungssimulation \n● verschiedene Anwendungen aus dem CAD-Bereich",
    "Qualifikationsziele": "Studierende beherrschen nach erfolgreichem Besuch der Veranstaltung die Grundlagen der \nrechnergestützten Methoden der geometrischen Modellierung und Simulation. Sie verstehen \nverschiedene parametrische Kurven- und Oberflächenrepräsentationen und können diese \nauswerten und miteinander vergleichen.  Weiter kennen Sie klassische Datenstrukturen und \nAlgorithmen aus dem Computer Aided Design (CAD). Sie sind in der Lage, diese Techniken \npraktisch umzusetzen und damit 3D-Geometrie im Rechner darzustellen und zu \nvisualisieren.",
    "Vorraussetzungen": "Empfohlen: Grundwissen in Informatik",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  252",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Vorlesungsfolien \nLee: Principles of CAD / CAM / CAE Systems, Addison-Wesley. \nPiegl, Tiller: The NURBS Book, Springer Verlag. \nFarin: Kurven und Flächen im Computer Aided Geometric Design, vieweg \nShah, Mäntylä: Parametric and Feature-based CAD/CAM, Wiley & Sons"
  },
  {
    "Modulname": "Bildverarbeitung",
    "Modul Nr.": "20-00-0155",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Überblick über die Grundlagen der Bildverarbeitung: \n- Bildeigenschaften \n- Bildtransformationen \n- einfache und komplexere Filterung \n- Bildkompression, \n- Segmentierung \n- Klassifikation",
    "Qualifikationsziele": "Noch erfolgreichem Besuch der Veranstaltung haben die Studierenden einen Überblick über \ndie Funktionsweise und die Möglichkeiten der modernen Bildverarbeitung. Studierende sind \ndazu in der Lage, einfache bis mittlere Bildverarbeitungsaufgaben selbständig zu lösen.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nModulhandbuch B. Sc./M. Sc. Informatik  254 \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Gonzalez, R.C., Woods, R.E., \"Digital Image Processing\", Addison- Wesley Publishing \nCompany, 1992 \n● Haberaecker, P., \"Praxis der Digitalen Bildverarbeitung und Mustererkennung\", Carl \nHanser Verlag, 1995 \n● Jaehne, B., \"Digitale Bildverarbeitung\", Springer Verlag, 1997"
  },
  {
    "Modulname": "Computer Vision I",
    "Modul Nr.": "20-00-0157",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "● Grundlagen der Bildformierung \n● Lineare und (einfache) nichtlineare Bildfilterung \n● Grundlagen der Mehransichten-Geometrie \n● Kamerakalibrierung & -posenschätzung \n● Grundlagen der 3D-Rekonstruktion \n● Grundlagen der Bewegungsschätzung aus Videos \n● Template- und Unterraum-Ansätze zur Objekterkennung \n● Objektklassifikation mit Bag of Words \n● Objektdetektion \n● Grundlagen der Bildsegmentierung",
    "Qualifikationsziele": "Studierende beherrschen nach erfolgreichem Besuch der Veranstaltung die Grundlagen der \nComputer Vision. Sie verstehen grundlegende Techniken der Bild- und Videoanalyse, und \nkönnen deren Annahmen und mathematische Formulierungen benennen, sowie die sich \nergebenden Algorithmen beschreiben. Sie sind in der Lage diese Techniken praktisch so \numzusetzen, dass sie grundlegende Bildanalyseaufgaben an Hand realistischer Bilddaten \nlösen können.",
    "Vorraussetzungen": "Empfohlen: Besuch von Visual Computing",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  256",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden regelmässig aktualisiert und beinhalten beispielsweise: \n● R. Szeliski, \"Computer Vision: Algorithms and Applications\", Springer 2011 \n● D. Forsyth, J. Ponce, \"Computer Vision -- A Modern Approach\", Prentice Hall, 2002"
  },
  {
    "Modulname": "Virtuelle und Erweiterte Realität",
    "Modul Nr.": "20-00-0160",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Im Rahmen dieser Lehrveranstaltung werden zuerst die Grundlagen, Begriffsbildungen und \nReferenzmodelle zur Einordnung der Thematik im Rahmen der Computer-\nGraphik/Computer-Vision aufgezeigt. Aufbauend darauf werden die besonderen \nTechnologien, Algorithmen und Standards der Augmented Reality (AR) und der Virtual \nReality (VR) behandelt. Dazu gehören: \n● Datenschnittstellen (Standards, Vorverarbeitung, Systeme, etc.) \n● Interaktionstechniken (z.B. Interaktion mit Hilfe von Rangekameras) \n● Darstellungsverfahren (z.B. Echtzeit-Rendering) \n● Web-basierte VR/AR \n● Computer-Vision-basiertes Tracking für Augmented-Reality \n● Augmented Reality mit Rangekamera-Technologien \n● Augmented Reality auf Smartphonesystemen \nSchließlich werden diese Techniken an Beispielen aktueller Forschungsarbeiten aus den \nBereichen „AR/VR-Wartungsunterstützung“ und „AR/VR-gestützte Präsentation von \nKulturgütern“ dokumentiert.",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die Anforderungen und \nProblematiken von Virtual/Augmented Reality und sie wissen, für welche Problemstellungen \ndiese Technologien eingesetzt werden können. Sie kennen die Standards, mit deren Hilfe \nVR/AR-Anwendungen spezifiziert werden, insb. wissen die Studierenden, welche Computer-\nVision-Technologien eingesetzt werden können, um in verschiedenen Umgebungen die \nKamerapose stabil zu tracken.",
    "Vorraussetzungen": "Empfohlen: Grundlagen der Graphischen Datenverarbeitung (GDV)  \nModulhandbuch B. Sc./M. Sc. Informatik  258",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Dörner, R., Broll, W., Grimm, P., Jung, B. Virtual und Augmented Reality (VR / AR)"
  },
  {
    "Modulname": "Informationsvisualisierung und Visual Analytics",
    "Modul Nr.": "20-00-0294",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Diese Vorlesung wird eine detaillierte Einführung in die Informationsvisualisierung geben, \num sich dann intensiv den wissenschaftlichen Fragestellungen und praxisnahen \nAnwendungsszenarien von Visual Analytics zu widmen. \n•Überblick der Informationsvisualisierung und Visual Analytics (Definitionen, Modelle, \nHistorie) \n•Datenpräsentierung und Datentransformation \n•Abbildung von Daten auf visuelle Strukturen \n• Visuelle Repräsentierungen und Interaktion fuer bivariate, multivariate Daten, Zeitreihen, \nGraphen und Geographische Daten \n• Grundlagen von Data Mining \n•Grundlagen von Visual Analytics: - Analytische Beweisführung - Data Mining \n• Evaluation von Visual Analytics Systemen \nAnwendungsgebiete: Medizin, Biologie, Finanzen und Wirtschaft, Meteorologie, \nRettungsdienst,....",
    "Qualifikationsziele": "Studierende können nach erfolgreichem Besuch der Veranstaltung \n•Informationsvisualisierungsmethoden für verschiedene Datentypen benutzen \n•interactive Visualisierungsysteme für Daten aus verschiedenen Anwendungsgebieten \ndesignen \n•Visualisierung und automatische Datenverarbeitung kombinieren um Big Data Probleme zu \nlösen \nModulhandbuch B. Sc./M. Sc. Informatik  260 \n•Wissen über Hauptcharakteristika menschlicher visuellen Wahrnehmung in \nInformationsvisualisierung und Visual Analytics anwenden \n•geeignete Evaluationsmethode für spezifische Situationen und Szenarien auswählen",
    "Vorraussetzungen": "Empfohlen: Interesse an Methoden der Computergrafik und Visualisierung",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Visual Computing \nM. Sc. Internet- und Web-basierte Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird in der Vorlesung bekanntgegeben. Beispiele für verwendete Literatur \nkönnten sein: \nC. Ware: Information Visualization: Perception for Design \nEllis et al: Mastering the Information Age"
  },
  {
    "Modulname": "Statistisches Maschinelles Lernen",
    "Modul Nr.": "20-00-0358",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "- Statistische Methodik für das Maschinelle Lernen \n- Auffrischung zu Statistik, Optimierung und Linearer Algebra \n- Bayes’sche Entscheidungstheorie  \n- Wahrscheinlichkeitsdichtenschätzung \n- Nichtparametrische Modelle \n- Mixtur Modelle und der EM-Algorithmus \n- Lineare Modele zur Klassifikation und Regression  \n- Statistische Lerntheorie \n- Kernel Methoden zur Klassification und Regression",
    "Qualifikationsziele": "Die Lehrveranstaltung ist eine systematische Einführung in die Grundlagen und Methodik \ndes statistischen maschinellen Lernens.  Nach erfolgreichen Abschluss der \nLehrveranstaltung, verstehen Studierende die wichtigsten Methoden und Ansätze des \nStatischen Maschinellen Lernens. Sie können maschinelle Lernverfahren anwenden, um eine \nVielzahl neuer Probleme zu lösen.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  263",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "1.  C.M. Bishop, Pattern Recognition and Machine Learning (2006), Springer \n2. K.P. Murphy, Machine Learning: a Probabilistic Perspective (expected 2012), MIT Press \n3. D. Barber, Bayesian Reasoning and Machine Learning (2012), Cambridge University Press \n4. T. Hastie, R. Tibshirani, and J. Friedman (2003), The Elements of Statistical Learning, \nSpringer Verlag \n5. D. MacKay, Information Theory, Inference, and Learning Algorithms (2003), Cambridge \nUniversity Press \n6. R.O. Duda, P.E. Hart, and D.G. Stork, Pattern Classification (2nd ed. 2001), Willey-\nInterscience \n7. T.M. Mitchell, Machine Learning (1997), McGraw-Hill"
  },
  {
    "Modulname": "Serious Games",
    "Modul Nr.": "20-00-0366",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Einführung in die Thematik „Serious Games“: wissenschaftlich-technische Grundlagen, \nAnwendungsgebiete und Trends. Die Einzelthemen umfassen unter anderem: \n• Einführung in Serious Games \n• Game Development, Game Design \n• Game Technology, Tools und Engines \n• Personalisierung und Adaption \n• Interactive Digital Storytelling \n• Authoring und Content Generation \n• Multiplayer Games \n• Game Interfaces und Sensor Technology \n• Effects, Affects und User Experience \n• Mobile Games \n• Serious Games Anwendungsbereiche und Best-Practice Beispiele \nDie Übungen enthalten Theorie- und Praxisanteile. Dabei wird die Verwendung einer Game \nEngine gelehrt.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Vorlesung können die Studierenden das Konzept von \n„Serious Games“ erklären und in verschiedene Anwendungsbereiche (wie Bildung und \nGesundheit) transferieren. Sie können das allgemeine Vorgehen bei der Entwicklung von \nComputerspielen beschreiben und können grundsätzliche Prinzipien des Game Designs, der \nPersonalisierung / Adaption und des Interactive Digital Storytellings anwenden. Außerdem \nkönnen sie weitere aktuelle Fragestellungen sowie deren Lösungen aus dem Bereich Serious \nGames skizzieren.",
    "Vorraussetzungen": "Modulhandbuch B. Sc./M. Sc. Informatik  265",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nM. Sc. Internet- und Web-basierte Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird in der Vorlesung bekanntgegeben."
  },
  {
    "Modulname": "Medizinische Bildverarbeitung",
    "Modul Nr.": "20-00-0379",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Vorlesung gliedert sich in zwei Teile.  \nIn der ersten Hälfte der Vorlesung wird die Funktionsweise von Geräten, welche \nmedizinische Bilder liefern (CT, MRI, PET, SPECT, Ultraschall), erklärt. \nIn der zweiten Hälfte werden verschiedene Bildverarbeitungsmethoden erklärt, welche \ntypischerweise für die Bearbeitung medizinischer Bilder eingesetzt werden.",
    "Qualifikationsziele": "Noch erfolgreichem Besuch der Veranstaltung haben die Studierenden einen Überblick über \ndie Funktionsweise und die Möglichkeiten der modernen medizinischen Bildverarbeitung. \nStudierende sind dazu in der Lage, einfache bis mittlere medizinische \nBildverarbeitungsaufgaben selbständig zu lösen.",
    "Vorraussetzungen": "Empfohlen: Mathematische Grundlagen sind dringend empfehlenswert. Ferner wird \nempfohlen, die Vorlesung „Bildverarbeitung“  vorher besucht zu haben.",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nModulhandbuch B. Sc./M. Sc. Informatik  267 \nM. Sc. IT Sicherheit \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "1) Heinz Handels: Medizinische Bildverarbeitung \n2) 2) Gonzalez/Woods: Digital Image Processing (last edition) \n3)  3) Bernd Jähne: Digitale Bildverarbeitung. 6. überarbeitete und erweiterte Auflage. \nSpringer, Berlin u. a. 2005, ISBN 3-540-24999-0. \n4) Kristian Bredies, Dirk Lorenz: Mathematische Bildverarbeitung. Einführung in \nGrundlagen und moderne Theorie. Vieweg+Teubner, Wiesbaden 2011, ISBN 978-3-8348-\n1037-3."
  },
  {
    "Modulname": "Ambient Intelligence",
    "Modul Nr.": "20-00-0390",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Vorlesung führt in aktuelle Entwicklungen von Ambient Intelligence ein. Im \nVordergrund der Vorlesung steht die Mensch-Maschine-Interaktion (MMI) in intelligenten \nUmgebungen in einem allgegenwärtigen Informationsraum, wie sie beispielsweise \nzunehmend durch eingebettete Systeme in alltägliche Gebrauchsobjekte gegeben ist. \nSpezieller Fokus wird auf den mobilen Aspekt eines allgegenwärtigen Informationszugriffs \nund der Informationsaufbereitung und -darstellung in mobilen Endgeräten gelegt. Dabei soll \neinerseits ein Einblick in die grundlegenden Technologien, Anwendungen und Experimente \ngegeben werden und anderseits (nicht im Schwerpunkt) auch die sozio-kulturellen \nImplikationen und Aspekte neuer Ambient Intelligence Lösungen diskutiert werden. \nZusätzliche Themen der Vorlesung sind System-Architekturen für verteilte Umgebungen, \nKontext-Awareness und Kontext-Management, Benutzermodelle und deren Implikationen, \nSensornetzwerke und Interaktionstechniken. Die Vorlesung wird Beispiele aktueller Projekte \ndiskutieren und die internationalen Forschungslinien von Ambient Intelligence beleuchten.",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung erfolgreich besucht haben, können sie \nTechnologietrends und Forschungserkenntnisse im Bereich Ambient Intelligence \nbeschreiben. Die wichtigsten Konzepte zur Realisierung „intelligenter Umgebungen“ - \nintelligente Netzwerke und Objekte, Techniken der erweiterten, mobilen Realität, ubiquitäre \nund allgegenwärtige Informationsräume, nomadische Kommunikationen, Echt-Zeit-\nKommunikation und relevante Middleware, Eingebettete Systeme, Sensor Netzwerke und \nWearable Computing - können diskutiert und eingeordnet werden. Nach Abschluss der \nzugehörigen Übung können Studierende die Projektphasen der Entwicklung einer Ambient-\nIntelligence Anwendung eigenständig planen und realisieren.",
    "Vorraussetzungen": "Modulhandbuch B. Sc./M. Sc. Informatik  269 \nEmpfohlen: Empfohlen für Studenten mit abgeschlossenem Bachelor-Studium, \nempfehlenswerte Vorlesung “Visual Computing“, Seminar „Multimodale Interaktion mit \nintelligenten Umgebungen“",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nM. Sc. Internet- und Web-basierte Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben"
  },
  {
    "Modulname": "Computer Vision II",
    "Modul Nr.": "20-00-0401",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "● Computer Vision als (probabilistische) Inferenz \n● Robuste Schätzung und Modellierung \n● Grundlagen der Bayes’schen Netze und Markov’schen Zufallsfelder \n● Grundlegende Inferenz- und Lernverfahren der Computer Vision \n● Bildrestaurierung \n● Stereo \n● Optischer Fluß \n● Bayes’sches Tracking von (artikulierten) Objekten \n● Semantische Segmentierung \n● Aktuelle Themen der Forschung",
    "Qualifikationsziele": "Studierende haben nach erfolgreichem Besuch der Veranstaltung ein vertieftes Verständnis \nder Computer Vision. Sie formulieren Fragestellungen der Bild- und Videoanalyse als \nInferenzprobleme und berücksichtigen dabei Herausforderungen reeller Anwendungen, z.B. \nim Sinne der Robustheit. Sie lösen das Inferenzproblem mittels diskreter oder \nkontinuierlicher Inferenzalgorithmen, und wenden diese auf realistische Bilddaten an. Sie \nevaluieren die anwendungsspezifischen Ergebnisse quantitativ.",
    "Vorraussetzungen": "Empfohlen: Besuch von Visual Computing und Computer Vision I ist empfohlen.",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  271",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden regelmässig aktualisiert und beinhalten beispielsweise: \n● S. Prince, “Computer Vision: Models, Learning, and Inference”, Cambridge University \nPress, 2012 \n● R. Szeliski, \"Computer Vision: Algorithms and Applications\", Springer 2011"
  },
  {
    "Modulname": "Probabilistische Graphische Modelle",
    "Modul Nr.": "20-00-0449",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "● Auffrischung Wahrscheinlichkeits- & Bayes’sche Entscheidungstheorie \n● Gerichtete und ungerichtete graphische Modelle und deren Eigenschaften \n● Inferenz in Baumgraphen \n● Approximative Inferenz in allgemeinen Graphen: Message Passing und Mean Field \n● Lernen von gerichteten und ungerichteten Modellen \n● Sampling-Methoden für Inferenz und Lernen \n● Modellierung in Beispielanwendungen, inkl. Topic-Modelle \n● Tiefe Netze \n● Halb-überwachtes Lernen",
    "Qualifikationsziele": "Studierende haben nach erfolgreichem Besuch der Veranstaltung ein vertieftes Verständnis \nvon probabilistischen graphischen Modellen. Sie beschreiben und analysieren die \nEigenschaften graphischer Modelle und formulieren geeignete Modelle für konkrete Schätz- \nund Lernaufgaben. Sie verstehen Inferenzalgorithmen, beurteilen deren Eignung und \ngebrauchen diese für graphische Modelle in relevanten Anwendungen. Sie ermitteln \nweiterhin welche Lernverfahren sich eignen, um die Modellparameter anhand von \nBeispieldaten zu bestimmen, und wenden diese an.",
    "Vorraussetzungen": "Empfohlen: Besuch von “Statistisches Maschinelles Lernen” ist empfohlen.",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  273",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nM. Sc. Internet- und Web-basierte Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden regelmäßig aktualisiert und beinhalten beispielsweise: \n● D. Barber: “Bayesian Reasoning and Machine Learning”, Cambridge University Press 2012 \n● D. Koller, N. Friedman: “Probabilistic Graphical Models: Principles and Techniques”, MIT \nPress 2009"
  },
  {
    "Modulname": "Medizinische Visualisierung",
    "Modul Nr.": "20-00-0467",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Medizinische Bilddaten; Bildaufbereitung; Medizinische Visualisierung mit VTK; Indirekte \nVolumenvisualisierung; Direkte Volumenvisualisierung; Transfer-Funktionen; Interaktive \nVolumenvisualisierung; Illustratives Rendering; Beispiel: Visualisierung von Tensor-\nBilddaten; Beispiel: Visualisierung von Baumstrukturen; Beispiel: Virtuelle Endoskopie; \nBeispiel: Bildgestützte Chirurgie",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung Techniken der \nVolumenvisualisierung. Sie verstehen die Notwendigkeit der Bildverbesserung für die \nVisualisierung. Sie können das \"Visualization Toolkit“ (VTK) anwenden, um mit dessen Hilfe \nAnwendungen für die Visualisierung von medizinischen Bilddaten für Diagnose, Planung \nund Therapie zu erstellen.",
    "Vorraussetzungen": "Empfohlen: GDV I, (Medizinische) Bildverarbeitung",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann. \nModulhandbuch B. Sc./M. Sc. Informatik  275",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Preim, Botha: Visual Computing for Medicine"
  },
  {
    "Modulname": "Capturing Reality",
    "Modul Nr.": "20-00-0489",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "Dieser Kurs deckt ein breites Spektrum von Techniken zur Digitalisierung und Modellierung \nunserer Welt mit einem Fokus auf Anwendungen in der Computergraphik und Computer \nVision ab. Dies beinhaltet insbesondere: \n- grundlegende Werkzeuge und Kalibrationstechniken für die Digitalisierung \n- Digitalisierungs- und Modellierungstechniken für verschiedenste Objekt- und \nSzeneneigenschaften (z.B. Geometrie, Reflexionseigenschaften) \n- grundlegende mathematische Modellierungs- und Optimierunstechniken \n- Implementierung und praktische Anwendung einer Reihe von Techniken",
    "Qualifikationsziele": "Nach dem erfolgreichen Besuch der Veranstaltung sind Studierende dazu in der Lage, \nDigitalisierungs- und Modellierungsprobleme für Objekte und Szenen in Computergraphik \nund Computer Vision sowie die zugrunde liegenden Techniken zu analysieren. Sie können \nselbständig neue Versuchsaufbauten entwickeln, Experimente durchführen und die \nErgebnisse auswerten.",
    "Vorraussetzungen": "Empfohlen: Der Besuch der Veranstaltung Graphische Datenverarbeitung I oder Computer \nVision I sowie grundlegende Programmierkenntnisse in C/C++",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  277 \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Noriko Kurachi: The Magic of Computer Graphics. A K Peters/CRC Press \nRichard Szeliski: Algorithms and Applications, Springer \nMarcus Magnor, Oliver Grau, Olga Sorkine-Hornung, Christian Theobalt: Digital \nRepresentations of the Real World: How to Capture, Model, and Render Visual Reality \nWolfgang Förstner, Bernhard P. Wrobel: Photogrammetric Computer Vision - Geometry, \nOrientation and Reconstruction"
  },
  {
    "Modulname": "Geometric Algebra Computing",
    "Modul Nr.": "20-00-0490",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Geometric Computing mit Hilfe einer geometrisch intuitiven Algebra.",
    "Qualifikationsziele": "Anwenden eines neuen math. Systems auf Gebieten wie Visual Computing und Robotik.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0490-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0490-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "1. Geometric Algebra for Computer Science von Dorst, Fontijne und Mann  \n2. Dissertation: http://tuprints.ulb.tu-darmstadt.de/epda/000764/"
  },
  {
    "Modulname": "TK2: Human Computer Interaction",
    "Modul Nr.": "20-00-0535",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Die Vorlesung stellt verschiedene grundlegende Konzepte, Modelle und Theorien aus dem \nBereich der Human Computer Interaction (HCI) vor. Die Veranstaltung umfasst die \nfolgenden Inhalte: \n•  Theoretische Grundlagen aus Psychologie und Interaktionsgestaltung als Basis für die \nGestaltung von Nutzerschnittstellen \n•  Überblick über verschiedene Typen von Nutzerschnittstellen \n•  Command-line interfaces \n•  Grafische Nutzerschnittstellen, u.a. Mac OS und Windows \n•  Interaktive Oberflächen, u.a. Tabletops, Multitouch \n•  Mobile user interfaces, u.a. basierend auf iPhone OS, Android \n•  Pen-based user interfaces, u.a. elektronische Stifte \n•  Tangible user interfaces, Organic user interfaces \n•  Sprachbasierte user interfaces \n• Beurteilung, Messung, Bewertung von Nutzerschnittstellen \n•  Nutzerstudien \n•  Quantitative Evaluationsmethoden \n•  Qualitative Evaluationsmethoden \n•  Nutzerzentrierte Softwareentwicklung",
    "Qualifikationsziele": "Nach der Teilnahme an dieser Lehrveranstaltung haben Studierende \n● Verständnis der psychologischen Grundlagen des Designs von Benutzerschnittstellen \nerworben \n● Methoden des user-centric design process kennengelernt \n● Überblickswissen über die gängigen UI Konzepte erworben \nModulhandbuch B. Sc./M. Sc. Informatik  280 \n● Evaluationstechniken kennen gelernt und angewandt",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Visual Computing \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete \nLiteratur könnten sein: \nAusgewählte Kapitel aus den folgenden Standardwerken: \n•  Donald Norman: The Design of Everyday Things \n•  Alan Dix, Janet Finlay, Gregory Abowd and Russel Beale: Human-Computer Interaction \n•  Jenny Preece , Yvonne Rogers and Helen Sharp: Interaction Design: Beyond Human-\nComputer Interaction"
  },
  {
    "Modulname": "Physikalisch-basierte Animation",
    "Modul Nr.": "20-00-0682",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "1. Grundlagen der physikalisch-basierten Animation \n- Anwendungen \n- Simulationsmodelle \n- Definition holonomer und nichtholonomer Zwangsbedingungen \n- Bewegungsgleichungen für Partikel \n- Gewöhnliche Differentialgleichungen \n- Numerische Integrationsverfahren \n2. Partikelsysteme \n- Aufbau von Partikelsystemen \n- Simulation physikalischer Effekte \n3. Simulation von Haaren \n- Haarmodelle \n- Simulationsverfahren \n- Haar-Haar Interaktion \n4. Simulation von Kleidung     \n- Masse-Feder-Systeme \n- Finite-Elemente-Methoden \n- Positionsbasierte Verfahren \n5. Simulation von Weichkörpern     \n- Generierung von Volumennetzen \n- Masse-Feder-Systeme \n- Finite-Elemente-Methoden \n- Positionsbasierte Verfahren \n- Volumenerhaltung \n6. Starrkörper \n- Grundlagen \n- Bewegungsgleichungen für Starrkörper \nModulhandbuch B. Sc./M. Sc. Informatik  282 \n- Simulation von Gelenken \n7. Kollisionserkennung     \n- Hüllkörper \n- Hüllkörperhierarchien \n- Zellrasterverfahren \n- Kollisionstests für Starrkörper \n- Kollisionstests für deformierbare Körper \n- Kontinuierliche Kollisionserkennung \n- Bildbasierte Verfahren \n8. Brüche \n- Animation von Brüchen mit Bruchmustern \n- Simulation spröder Brüche \n- Anpassung des Simulationsnetzes",
    "Qualifikationsziele": "Studierende kennen nach einem erfolgreichen Besuch der Veranstaltung Mehrkörpersysteme \nund diskrete und kontinuierliche deformierbare Simulationsmodelle. Sie verstehen die \nnumerischen Simulationsverfahren sowie deren jeweiligen Anwendungsbereiche und \nkönnen diese Verfahren anwenden. Sie haben einen grundlegenden Überblick über \nVerfahren der Echtzeitsimulation in der Computergraphik.",
    "Vorraussetzungen": "Empfohlen: Grundlegende Kenntnisse von Numerik, Algorithmen und Datenstrukturen, \nComputergraphik",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nModulhandbuch B. Sc./M. Sc. Informatik  283 \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Vorlesung bekannt gegeben"
  },
  {
    "Modulname": "Interdisziplinäre Entwicklung von Urban Health Games",
    "Modul Nr.": "20-00-0737",
    "Kreditpunkte": "8 CP",
    "Arbeitsaufwand": "240 h",
    "Selbststudium": "165 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die interdisziplinäre Lehrveranstaltung richtet sich speziell an Studierende der Fachbereiche  \n- FB 03 (Psychologie),  \n- FB 15 (Architektur),  \n- FB 18 (etit), \n- FB 20 (Informatik)  \nFolgende Inhalte werden in studentischen Teams mit Betreuung durch wissenschaftliche \nTutoren bearbeitet:  \n- Anforderungsanalyse für Urban Health Game Design  \n- Active (Street) Design und Urban Planning \n- Messbarkeit, Messmethoden für Vitalparameter  \n- Mobile Game Design und mobile Game Entwicklung \n- Test, Einsatz und Dokumentation des Prototypen \n- Projektmanagement und Teamkompetenz  \nDie studentischen Teams werden mit Mitgliedern der drei Fachdisziplinen (Architektur, \nPsychologie und Informatik/etit) besetzt, die jeweils ihre Fachschwerpunkte beitragen und \nim interdisziplinären Kontext voneinander profitieren. Die Entwicklung eines neuartigen \nPrototypen, unterstützt durch die Betreuer und Dozenten der jeweiligen Disziplinen (d.h. \nder Serious Games Gruppe am Lehrstuhl Multimedia Kommunikation, der AG \nKognitionspsychologie in der Psychologie und der UNICO Gruppe Digitale Stadtspiele in der \nArchitektur), vermittelt alle Kompetenzen der interdisziplinären Zusammenarbeit.",
    "Qualifikationsziele": "Mit ihrer erfolgreichen Teilnahme an der Veranstaltung erwerben die Studenten praktisches \nWissen im Bereich des Projektmanagements, dass sie nicht nur auf ihr eigenes Thema \nanwenden, sondern auch auf zukünftige – interdisziplinäre – Projekte transferieren können. \nSie erhalten Kenntnisse über das Vorgehen bei der interdisziplinären Konzeption und \nErstellung von „Urban Health Games“ und können dieses auf konkrete Projekte anwenden. \nSie kennen Analysemethoden und können diese zur Bewertung der von ihnen erstellten \nAnwendung anwenden. Außerdem können sie die von ihnen erzielten Ergebnisse einem \nModulhandbuch B. Sc./M. Sc. Informatik  285 \nPublikum unter Anwendung von verschiedenen Präsentationstechniken vorstellen sowie \neine dazugehörige Fachdiskussion aktiv bestreiten.",
    "Vorraussetzungen": "Empfohlen: Abgeschlossene Bachelor-/Studienarbeit oder sonstige Erfahrung mit \nSoftwareentwicklung (FB 18/20) oder Stadtentwicklung (FB 15) oder \nMessinstrumenten/Messreihen (FB 03) wird empfohlen.  \nDie Lehrveranstaltung richtet sich an Studierende der Informatik und",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Keine"
  },
  {
    "Modulname": "Game Technology",
    "Modul Nr.": "20-00-0772",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Einführung in die technologische Basis moderner Computerspiele. Die Einzelthemen \numfassen:  \n* Hard- and Software-Architecture of Modern Game Systems  \n* Time Management in Milliseconds  \n* Asset Loading and Compression  \n* Physically Based Realtime Rendering and Animations  \n* Handling of Large Game Scenes  \n* Audio Simulation and Mixing  \n* Constraint-Based Physics Simulation  \n* Artificial Intelligence for Games  \n* Multiplayer-Networking  \n* Procedural Content Creation \n* Integration of Scripting Languages  \n* Optimization and parallelization of CPU and GPU Code  \nDie Übungen enthalten Theorie- und Praxisanteile. Dabei wird beispielhaft eine komplette \nGame-Engine entwickelt und die Verwendung von C/C++ sowie GLSL gelehrt.",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung den Aufbau und das \nVorgehen zur Erstellung einer zeitgemäßen Spiele-Engine. Sie sind in der Lage, den Aufbau \nvon Subsystemen von Spiele-Engines nachzuvollziehen und eigene Systeme zu konzipieren \nund umzusetzen. Die Studierenden sind in der Lage mit neuen Ansätzen zu experimentieren \nund diese zu bewerten.",
    "Vorraussetzungen": "Empfohlen: Programmierkenntnisse  \nModulhandbuch B. Sc./M. Sc. Informatik  287",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Game Programming Gems-Serie \nJason Lander, Jeff Gregory: Game Engine Architecture \nChrister Ericson: Real-Time Collision Detection"
  },
  {
    "Modulname": "User-Centered Design in Visual Computing",
    "Modul Nr.": "20-00-0793",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Entwicklung von benutzerzentrierten Softwarelösungen dient nicht nur zur besseren und \neffizienteren Nutzung von Software, sie erhöht vielmehr die Akzeptanz und somit auch die \nVerbreitung und Verwendung. Die Vorlesung “User Centered Design in Visual Computing“ \nrichtet sich in erster Linie an Studierende des Fachbereichs Informatik und vermittelt Modelle, \nMethoden und Techniken zur benutzerzentrierten Entwicklung von Visualisierungssoftware und \nvisuell-interaktiven Benutzerschnittstellen. Dabei werden insbesondere Methoden vorgestellt, \ndie zu einer gesteigerten Akzeptanz und effizienterer Benutzung der entworfenen Lösungen \nführen. Des Weiteren werden Methoden der Evaluation vorgestellt, die die Akzeptanz und \nNutzbarkeit messen. Die Vorlesung behandelt die eingeführten Themen mit besonderem Bezug \nzu Visual Computing und graphischen Benutzerschnittstellen. \nStoffplan: \n• Usability \n• User Experience \n• Task Analysis \n• Benutzerschnittstellen \n• Interaktionsdesign \n• Prototyping \n• Graphikdesign und Informationsvisualisierung \n• Evaluation während und nach der Softwareentwicklung \n• Anwendungen",
    "Qualifikationsziele": "Studierende können nach erfolgreichem Besuch der Veranstaltung: \n• Geeignete Methoden zur Entwicklung von benutzerzentrierten Softwarelösungen \nidentifizieren und begründen \n• Techniken zu benutzerzentrierten Nutzungsschnittstellen anwenden \n• Evaluationsmethoden zur Untersuchung der eingesetzten Techniken in den verschiedenen \nPhasen der Entwicklung identifizieren und auswählen \n• Verbesserungen zur Informationsaufnahme und Navigation auf Basis vorhandener \nUntersuchungen und Evaluationen vorschlagen \nModulhandbuch B. Sc./M. Sc. Informatik  289",
    "Vorraussetzungen": "Empfohlen: Grundlagen des Visual Computing, wie sie beispielsweise in der \nPflichtveranstaltung Visual Computing und in der Vorlesung GDV I vermittelt werden",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0793-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0793-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Deep Learning für medizinische Bildgebung",
    "Modul Nr.": "20-00-1014",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Formulierung der medizinischen Bildsegmentierung, Computergestützte Diagnostik und \nchirurgische Planung als Probleme des maschinellen Lernens, Deep Learning für medizinische \nBildsegmentierung, Deep Learning für computergestützte Diagnostik, Chirurgische Planung \nvon präoperativen Bildern mit Deep Learning, Tool-Präsenz Erkennung und Lokalisierung von \nendoskopischen Videos durch Deep Learning, Adversarial Beispiele für medizinische \nBildgebung, Generative Adversarial Networks für Medizinische Bildgebung.",
    "Qualifikationsziele": "Nach erfolgreichem Abschluss des Kurses sollten die Teilnehmer in der Lage sein, alle \nKomponenten der Formulierung eines medizinischen Bildanalyseproblems als Proble des \nMaschinellen Lernens zu verstehen. Sie sollten auch in der Lage sein, fundierte \nEntscheidungen über die Wahl eines universellen Deep Learning Paradigmas für ein gegebenes \nmedizinische Bildanalyseproblem zu treffen.",
    "Vorraussetzungen": "Empfohlen: \n- Programmierkenntnisse \n- Verständnis des algorithmischen Designs \n- Lineare Algebra \n- Bildverarbeitung / Computer Vision I \n- Statistisches Maschinelles Lernen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1014-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  291",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1014-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Tiefe Generative Modelle",
    "Modul Nr.": "20-00-1035",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Generative Modelle, implizite und explizite Modelle, Variational AutoEncoders, Generative \nAdversarial Networks, Numerische Optimierung für generative Modelle, Anwendungen in der \nmedizinischen Bildverarbeitung",
    "Qualifikationsziele": "Nachdem Studierende das Modul besucht haben, können sie \n- den Aufbau und die Funktionsweise Tiefer Generativer Modelle (Deep Generative Models, \nDGM) erklären \n- wissenschaftliche Veröffentlichungen zum Thema DGMs kritisch hinterfragen und damit \nfachlich beurteilen \n- grundlegende DGMs in einer dafür ausgelegten höheren Programmiersprache selbstständig \nkonstruieren / implementieren \n- die Implementierung und Anwendung von DGMs auf unterschiedliche Anwendungen \nübertragen",
    "Vorraussetzungen": "Empfohlen: \n- Programmierkenntnisse Python \n- Lineare Algebra \n- Bildverarbeitung/Computer Vision I \n- Statistisches Maschinelles Lernen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1035-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  293",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1035-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "Wird in Veranstaltung bekannt gegeben."
  },
  {
    "Modulname": "Verteilte Gemetrieverarbeitung",
    "Modul Nr.": "20-00-1075",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "* Grundlagen und Algorithmen der Geometrieverarbeitung: Smoothing, Remeshing, Delaunay-\nTriangulierung, Parametrisierung, Texturierung, u.a. \n* Einführung in Big Data und Cloud Computing \n* Indexstrukturen für den schnellen Zugriff auf massive Geometriedatenmengen: Quad tree, R-\ntree, Space-filling curves, u.a. \n* Verteilte und cloud-basierte Datenspeicherung \n* Architekturen für verteilte Verarbeitungspipelines \n* Programmiermodelle für verteilte Algorithmen (z.B. MapReduce) \n* Technologien und Frameworks für die verteilte Datenverarbeitung (z.B. Spark, Vert.x) und \nGeometrieverarbeitung (Draco, u.a.) \n* Deployment von verteilten Anwendungen in die Cloud \n* Ergänzend gibt es praktische und theoretische Übungen",
    "Qualifikationsziele": "Nach dem erfolgreichen Besuch der Veranstaltung besitzen die Studierenden grundlegende \nKenntnisse zur Geometrieverarbeitung sowie zur verteilten, cloud-basierten Verarbeitung sehr \ngroßer Datenmengen im Allgemeinen. Sie sind in der Lage, selbstständig skalierbare \nAnwendungen zu entwickeln und diese in der Cloud auszuführen, um die \nGeometrieverarbeitung zu parallelisieren und damit die Performance zu erhöhen.",
    "Vorraussetzungen": "Empfohlen: \n* Programmierkenntnisse in Java oder anderen JVM-Sprachen \n* Grundlegende Algorithmen und Datenstrukturen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1075-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  295 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1075-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Grundlagen der Bioinformatik",
    "Modul Nr.": "10-30-0036",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Algorithmen für die Sequence Analyse und Alignments \nMolekulare Visualisierung \nAlgorithmen für Strukturvorhersage und Homologiemodellierung \nMolecular Dynamics als Simulationstechnik in HPC",
    "Qualifikationsziele": "Die Studenten erwerben Grundlagenwissen in der sequenz-basierten Bioinformatik \n(Sequence Alignment, Scoring Schemata, Datenbanken, Mustererkennung) und der \nStrukturmodellierung und Simulation (Strukturvorhersage, Molekulardynamik). \nDie Studenten werden in die Lage versetzt, eigenständig Standard-Werkzeuge der \nBioinformatik einzusetzen und deren grundlegende Algorithmen in diversen \nImplementierungen zu identifizieren. Notwendige statistische und mathematische \nGrundlagen werden vermittelt und in Übungen und Seminarstunden vertieft.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  297 \nStandard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Deonier, Tavare, Waterman Computational Genome Analysis, Springer, 2005 \n● Durbin, Eddy, Krogh, Mitchison, Biological Sequence Analysis, Cambridge University \nPress, \n● 1998 \n● MacKay, Information Theory, Inference, and Learning Algorithms, Cambridge University \n● Press, 2003 \n● Schlick, Molecular Modeling and Simulation, Springer, 2002"
  },
  {
    "Modulname": "Data Mining und Maschinelles Lernen",
    "Modul Nr.": "20-00-0052",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Durch die rasante Entwicklung der Informationstechnologie sind immer größere \nDatenmengen verfügbar. Diese enthalten oft implizites Wissen, das, wenn es bekannt wäre, \ngroße wirtschaftliche oder wissenschaftliche Bedeutung hätte. Data Mining ist ein \nForschungsgebiet, das sich mit der Suche nach potentiell nützlichem Wissen in großen \nDatenmengen beschäftigt, und Maschinelles Lernverfahren gehören zu den \nSchlüsseltechnologien innerhalb dieses Gebiets. \nDie Vorlesung bietet eine Einführung in das Gebiet des Maschinellen Lernens unter dem \nbesonderen Aspekt des Data Minings. Es werden Verfahren aus verschiedenen Paradigmen \ndes Maschinellen Lernens mit exemplarischen Anwendungen vorgestellt. Um das Wissen zu \noperationalisieren, werden in den Übungen prak-tisch-e Erfahrungen mit Lernalgorithmen \ngesammelt. \n● Einführung (Grundbegriffe, Lernprobleme, Konzepte, Beispiele, Repräsentation) \n● Regel-Lernen \n○ Lernen einzelner Regeln (Generalisierung und Spezialisierung, Strukturierte \nHypothesenräume, Version Spaces) \n○ Lernen von Regel-Mengen (Covering Strategie, Evaluierungsmaße für Regeln, \nPruning, Mehr-Klassenprobleme) \n● Evaluierung und kosten-sensitives Lernen (Accuracy,X-Val,ROC-Kurven,Cost-Sensitive \nLearning) \n● Instanzenbasiertes Lernen (kNN,IBL,NEAR,RISE) \n● Entscheidungsbaum-Lernen (ID3, C4.5, etc.)  \n● Ensemble-Methoden (Bias/Variance, Bagging, Randomization, Boosting, Stacking, ECOCs) \n● Pre-Processing (Feature Subset Selection, Diskretisierung, Sampling, Data Cleaning) \n● Clustering und Lernen von Assoziationsregeln (Apriori)",
    "Qualifikationsziele": "Nach der erfolgreichen Absolvierung dieser Lehrveranstaltung sind die Studenten in der \nLage \nModulhandbuch B. Sc./M. Sc. Informatik  300 \n● grundlegende Techniken des Data Mining und Maschinellen Lernens zu verstehen und \nerklären \n● praktische Data Mining Systeme selbständig einsetzen und deren Stärken und Schwächen \nverstehen \n● neue Entwicklungen auf diesem Gebiet kritisch beurteilen",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Mitchell: Machine Learning, McGraw-Hill, 1997 \n● Ian H. Witten and Eibe Frank: Data Mining: Practical Machine Learning Tools and \nTechniques with Java Implementations, Morgan-Kaufmann, 1999"
  },
  {
    "Modulname": "Web Mining",
    "Modul Nr.": "20-00-0101",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das World-Wide Web verschafft jedem Internet-User Zugang zu einer stetig wachsenden \nInformationsfülle, die ohne entsprechende Unterstützung nicht mehr zu überschauen ist. \nWeb Mining ist eine Forschungsrichtung, die versucht, das Problem mit Hilfe von Techniken \ndes Maschinellen Lernens und Data Minings in den Griff zu bekommen. In dieser Vorlesung \nwerden sowohl Grundlagen von Information Retrieval und Text Classification vermittelt, als \nauch auf die Ausnutzung der Besonderheiten von Web-Dokumenten (d.h., ihre \nStrukturierung und ihre Vernetzung) eingegangen. \n● Introduction  \n○ Web Mining Overview \n○ The Web, HTTP, HTML, DOM, XPath \n○ Data Mining Overview \n○ Structured, Semi-Structured and Unstructured Data \n○ Sample Web Mining Tasks \n● Information Retrieval on the Web  \n○ search engines & web crawlers \n○ document indexing \n○ the vector space model \n○ inverted index \n○ performance measures (recall & precision) \n○ relevance feedback \n○ estimating the size of the web \n● Text Mining \n○ text classification  \n■ document representation \n■ induction of classifiers (k-NN, Naive Bayes, SVMs, Rule Learners) \n■ Overfitting Avoidance \n■ Evaluation of Classifiers \n■ Multi-Label Classification \nModulhandbuch B. Sc./M. Sc. Informatik  302 \n○ feature engineering  \n■ stop words \n■ feature subset selection \n■ n-grams \n■ stemming \n■ phrases \n■ latent semantic indexing \n○ semi- and unsupervised learning \n■ clustering (k-means, bottom-up agglomerative) \n■ semi-supervised learning (active learning, self-training, co-training) \n● Structure mining  \n○ the Web as a graph \n○ hyperlink-based relevance ranking (hubs and authorities, page rank) \n○ hypertext classification (Naive Method, HyperClass, hyperlink ensembles) \n● Information Extraction & Wrapper Induction  \n○ conventional information extraction (AutoSlog) \n○ structured text (LR-Wrappers) \n○ semi-structured text (SoftMealy, WHISK, SRV, RAPIER) \n● Web Usage Mining \n○ recommender systems \n○ memory-based collaborative filtering \n○ model-based collaborative filtering \n○ web log mining",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, können sie \n● grundlegende Techniken des Information Retrieval und Web Mining verstehen und \nerklären \n● praktische Information Retrieval und Web Mining Systeme selbständig einsetzen und \nderen Stärken und Schwächen verstehen \n● neue Entwicklungen uaf diesem Gebiet kritisch beurteilen",
    "Vorraussetzungen": "",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  303 \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● Soumen Chakrabarti: Mining the Web - Discovering Knowledge from Hypertext Data. \nMorgan Kaufmann Publishers, 2003. \n● Christopher D. Manning, P. Raghavan and H. Schütze, Introduction to Information \nRetrieval, Cambridge University Press. 2008."
  },
  {
    "Modulname": "Natural Language Processing and the Web",
    "Modul Nr.": "20-00-0433",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Web beinhaltet mehr als 10 Milliarden indexierbare Webseiten, die mittels \nStichwortsuche zugänglich sind. Die Vorlesung behandelt Methoden der automatischen \nSprachverarbeitung bzw. des Natural Language Processing (NLP) zur Verarbeitung großer \nMengen unstrukturierter Texte im Web und zur Analyse von Online-Inhalten als wertvolle \nRessource für andere sprachtechnologische Anwendungen im Web. \nZentrale Inhalte: \n● Verarbeitung unstrukturierter Texte im Web \n○ NLP-Grundlagen: Tokenisierung, Wortartenerkennung, Stemming, Lemmatisierung, \nChunking \n○ UIMA: Grundlagen und Anwendungen \n○ Web-Inhalte und ihre Charakteristika, u.a. verschiedene Genres, z.B. persönliche \nSeiten, Nachrichtenportale, Blogs, Foren, Wikis \n○ Das Web als Korpus, insb. innovative Verwendung des Webs als sehr großes, \nverteiltes, verlinktes, wachsendes und multilinguales Korpus \n● NLP-Anwendungen für das Web \n○ Einführung in das Information Retrieval \n○ Web-Suche und natürlichsprachliche Suchschnittstellen \n○ Web-basierte Beantwortung von natürlichsprachlichen Fragen \n○ Web-Mining im Web 2.0, z.B. Wikipedia, Wiktionary \n○ Qualitätsbewertung von Web-Inhalten \n○ Multilingualität \n○ Internet-of-Services: Service Retrieval \n○ Sentimentanalyse und Community Mining \n○ Paraphrasen, Synonyme, semantische Verwandtschaft und das Web \nModulhandbuch B. Sc./M. Sc. Informatik  305",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, können sie \n● Methoden und Ansätze zur Verarbeitung unstrukturierter Texte verstehen und \ndifferenzieren, \n● die Arbeitsweise von Web-Suchmaschinen nachvollziehen und erläutern, \n● exemplarische Anwendungen der Sprachverarbeitung im Web selbständig aufbauen und \nanalysieren, \n● das Potenzial von Web-Inhalten für die Verbesserung von sprachtechnologischen \nAnwendungen analysieren und einschätzen.",
    "Vorraussetzungen": "Empfohlen: Grundlegende Algorithmen und Datenstrukturen sowie Programmierkenntnisse \nin Java werden erwartet",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, \ndie lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen \nAnrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Modulhandbuch B. Sc./M. Sc. Informatik  306 \n● Kai-Uwe Carstensen, Christian Ebert, Cornelia Endriss, Susanne Jekat, Ralf Klabunde: \nComputerlinguistik und Sprachtechnologie. Eine Einführung. 3. Auflage. Heidelberg: \nSpektrum, 2009. ISBN: 978-3-8274-20123-7. http://www.linguistics.rub.de/CLBuch/ \n● T. Götz, O. Suhre: Design and implementation of the UIMA Common Analysis System, \nIBM Systems Journal 43(3): 476–489, 2004. \n● Adam Kilgarriff, Gregory Grefenstette: Introduction to the Special Issue on the Web as \nCorpus, Computational Linguistics 29(3): 333–347, 2003. \n● Christopher D. Manning, Prabhakar Raghavan, Hinrich Schütze: Introduction to \nInformation Retrieval, Cambridge: Cambridge University Press, 2008. ISBN: 978-0-521-\n86571-5. http://nlp.stanford.edu/IR-book/"
  },
  {
    "Modulname": "Foundations of Language Technology",
    "Modul Nr.": "20-00-0546",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Vorlesung bietet eine Einführung in die zentralen Sichtweisen, Probleme, Methoden und \nTechniken der automatischen Sprachtechnologie am Beispiel der Programmiersprache \nPython. \nZentrale Inhalte: \n● Sprachtechnologie/Natural language processing (NLP) \n○ Tokenisierung \n○ Segmentierung \n○ Wortartenerkennung \n○ Korpora \n○ Statistische Analyse \n● Maschinelles Lernen \n○ Kategorisierung und Klassifikation \n○ Informationsextraktion \n● Einführung in Python \n○ Datenstrukturen \n○ Strukturierte Programmierung \n○ Arbeiten mit Dateien \n○ Einsatz von Bibliotheken \n○ Programmbibliothek NLTK \nDie Veranstaltung basiert auf der Klassenbibliothek NLTK für Python. Diese bietet einen \nmächtigen Werkzeugkasten, um die theoretischen Methoden explorativ und problemlösend \neinzusetzen, ohne umfangreiche Programmierkenntnisse vorauszusetzen.",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, können sie \nModulhandbuch B. Sc./M. Sc. Informatik  308 \n● die grundlegende Terminologie der automatischen Sprachtechnologie definieren, \n● wesentliche Fragestellungen dieses Gebietes benennen und erläutern, \n● einfache Pythonprogramme erklären und selbst implementieren, \n● die gelernten Methoden und Techniken auf konkrete Anwendungsszenarien des \nTextverstehens übertragen sowie \n● deren Möglichkeiten und Grenzen kritisch beurteilen.",
    "Vorraussetzungen": "Empfohlen:",
    "Prüfungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Steven Bird, Ewan Klein, Edward Loper: Natural Language Processing with Python, O'Reilly, \n2009. ISBN: 978-0596516499. http://www.nltk.org/book/"
  },
  {
    "Modulname": "Deep Learning für Natural Language Processing",
    "Modul Nr.": "20-00-0947",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Veranstaltung bietet eine Einführung in die grundlegenden Konzepte des Deep Learning \nund ihren Einsatz für Problemstellungen im Bereich Natural Language Processing (NLP). \nZentrale Inhalte: \n- grundlegende Konzepte des Deep Learning (e.g. Feed-Forward Netze, Hidden Layers, \nBackpropagation, Aktivierungs- und Loss-Funktionen) \n- Word Embeddings: Theorie, unterschiedliche Ansätze und Modelle, Verwendung in \nmaschinellen Lernverfahren \n- neuronale Netzwerkarchitekturen (e.g. recurrent NN, recursive NN, convolutional NN) für \nverschiedene Gruppen von NLP-Problemen wie die Klassifikation von Dokumenten (z.B. \nSpamerkennung), die Bestimmung von Sequenzen (z.B. POS-Tagging, Named Entity \nRecognition) und komplexeren Strukturen (z.B. Chunking, Parsing, Semantic Role Labeling) \nDie Veranstaltung strebt eine enge Verzahnung zwischen theoretischen Konzepten und ihrer \npraktischen Verwendung zur Lösung typischer Problemstellungen bei Datenanalyse auf freien \nTexten mit Hilfe von existierenden Programm-Bibliotheken in Python an.",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung abgeschlossen haben, können sie \n- die grundlegenden Konzepte von neuronalen Netzen und Deep Learning erklären. \n- Word Embeddings erklären, trainieren und für die Lösung von NLP-Problemen einsetzen. \n- neuronale Netzwerkarchitekturen für NLP-Probleme wie die Klassifizierung von Dokumenten \nund das Bestimmen linguistischer Sequenzen (z.B. POS-Tagging) und Strukturen (z.B. \nChunking) verstehen und beschreiben. \n- neuronale Netzwerke für NLP-Probleme mit Hilfe existierender Bibliotheken in Python \nimplementieren.",
    "Vorraussetzungen": "Empfohlen: Grundlegende Mathematik- und Programmierkenntnisse",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  310 \nBausteinbegleitende Prüfung: \n  [20-00-0947-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0947-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Statistical Relational Artificial Intelligence: Logic, Probability, and Computation",
    "Modul Nr.": "20-00-1011",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "+ logische Programmierung \n+ Lernen von logischen Programmen aus Daten \n+ Probabilistische Graphische Modelle: Inferenz und Lernen \n+ Statistisch-Relationale Modelle wie z.B. ProbLog und Markov Logic Networks \n+ Schlussfolgern in statistisch-relationalen Modellen \n+ Lernen von statistisch-relationalen Modellen aus Daten \n+ Relationale lineare und quadratische Programme",
    "Qualifikationsziele": "Die Lehrveranstaltung ist eine systematische Einführung in die Grundlagen und Methodik des \nstatistisch-relationalen Lernens und Künstlichen Intelligenz: Das Studium und Design von \nintelligenten Agenten, die in verrauschten Welten agieren, die aus Individuen (Objekte, Dinge) \nund komplexe Beziehungen zwischen den Individuen bestehen. Nach erfolgreichem Abschluss \nder Lehrveranstaltung verstehen Studierende die wichtigsten Methoden und Ansätze in der \nstatistisch-relationalen Künstlichen Intelligenz. Sie verstehen die grundlegenden \nHerausforderungen von relationalen Domänen. Sie kennen aktuelle Ansätze, um diese \nHerausforderungen zu lösen. Sie sind außerdem in der Lage ihre Kenntnisse auf aktuelle \nProbleme anzuwenden.",
    "Vorraussetzungen": "Der Besuch von “Statistisches Maschinelles Lernen” und “Probabilistische Graphische Modelle” \nist empfohlen, ist aber keine Voraussetzung.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1011-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard) \n  \nModulhandbuch B. Sc./M. Sc. Informatik  312",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1011-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "Literaturempfehlungen werden regelmäßig aktualisiert und beinhalten beispielsweise: \nLuc De Raedt, Kristian Kersting, Sriraam Natarajan, David Poole (2016): Statistical Relational \nArtificial Intelligence: Logic, Probability, and Computation. Synthesis Lectures on Artificial \nIntelligence and Machine Learning, Morgan & Claypool Publishers, ISBN: 9781627058414."
  },
  {
    "Modulname": "Skalierbares Datenmanagement",
    "Modul Nr.": "20-00-1017",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Diese Vorlesungen ist eine Einführung in die Basiskonzepte und die wesentlichen Paradigmen \nfür skalierbare Datenmanagement-Systeme. Der Fokus der Vorlesung ist auf die system-\norientieren Aspekten und Interna solcher Systeme gerichtet, um große Datenmengen zu \nspeichern, zu ändern, und zu analysieren. \nThemen der Vorlesung sind: \nDatabase Architectures \nParallel and Distributed Databases \nData Warehousing \nMapReduce and Hadoop \nSpark and its Ecosystem \nOptional: NoSQL Databases, Stream Processing, Graph Databases, Scalable Machine Learning",
    "Qualifikationsziele": "Nach dem Kurs sollen die Studierenden einen Überblick über die wichtigsten Konzepte, \nAlgorithmen und System-Aspekte für skalierbare Datenmanagement-Systeme erworben haben. \nDas Hauptziel ist es, dass die Studierenden das Wissen besitzen, solche Systeme zu designen \nund zu entwickeln, inklusive praktischer Übungen auf Basis von bestehenden Systemen wie \nSpark.",
    "Vorraussetzungen": "Empfohlen: \nProgrammierkenntnisse in C++ and Java \nInformationsmanagement (20-00-0015-iv) \nOptional: \nFoundations of Distributed Systems (20-00-0998-iv)",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  314 \n  [20-00-1017-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1017-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Deep Learning: Architectures & Methods",
    "Modul Nr.": "20-00-1034",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "• Auffrischung des Hintergrundwissens \n• Deep Feedforward Netze \n• Regularisierung im Deep Learning \n• Optimierung zum Training tiefer Netze \n• Convolutional tiefe Netze \n• Modelierung von Sequenzen durch Rekordernte und Rekursive Netze \n• Lineare Faktor Modelle \n• Autoenkoder \n• Repräsentationslernen \n• Strukturierte Probabilistische Modelle zum Deep Learning \n• Monte Carlo Methoden \n• Approximative Inferenz \n• Tiefe generative Modelle \n• Deep Reinforcement Learning \n• Deep Learning in Vision \n• Deep Learning in NLP",
    "Qualifikationsziele": "Dieser Kurs richtet sich an Studierende mit fortgeschrittenem Erfahrung im maschinellen \nLernen und vermittelt diesen Studierenden das notwendige Wissen, um eigenständig \nForschungsprojekte im Bereich der Deep Learning durchzuführen, z.B. im Rahmen einer \nBachelor- oder Masterarbeit. Dies betrifft sowohl ein grundlegendes Verständnis der \nalgorithmischen Ansätze zum Deep Learning als auch die der Architekturen der tiefen tiefen \nNetze.",
    "Vorraussetzungen": "Empfohlen: \n20-00-0358-iv Statistisches Maschinelles Ler-nen \n20-00-0052-iv Data Min-ing und Maschinelles Ler-nen",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  316 \nBausteinbegleitende Prüfung: \n  [20-00-1034-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1034-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Advanced Data Management Systems",
    "Modul Nr.": "20-00-1039",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Dies ist eine fortgeschrittene Vorlesung aus dem Bereich der Architektur und Implementierung \nmoderner Datenbanksysteme mit dem speziellen Fokus auf System-orientieren Aspekten und \nInterna solcher Systeme. Mögliche Themengebiete die in der Vorlesung behandelt werden sind: \nmoderne Hardwaretechnologien für das Datenbanksysteme, Optimierungen für \nHauptspeicherdatenbanken, Parallelisierungsstrategien und Approximative Anfrageausführung \nusw. \nEs wird erwartet, dass für jede Vorlesung aktuelle Veröffentlichungen (SIGMOD, VLDB, etc.) \nvorher gelesen werden. Die Hauptideen ausgewählter Veröffentlichungen werden in \nProgrammierprojekten umgesetzt. Die Endnote des Kurses basiert auf den \nProgrammierprojekten. Es gibt keine Klausur.",
    "Qualifikationsziele": "Nach erfolgreichem Abschluss der Vorlesung haben Studenten folgende Lernziele erreicht: \n- Vertieftes Verständnis von aktuellen Techniken für das Design von modernen \nDatenbanksystemen \n- Diskussion von Vor- und Nachteilen dieser Techniken mit dem Fokus auf möglichen \nVerbesserungen \n- Implementierung von einzelnen Techniken und experimentelle Evaluierung dieser Techniken \nzum Vergleich von Designalternativen",
    "Vorraussetzungen": "Empfohlen: \nSolide Programmierkenntnisse in C and C++ \nSkalierbares Datenmanagement (20-00-1017-iv) \nInformationsmanagement (20-00-0015-iv)",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  318 \n  [20-00-1039-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1039-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Einführung in die Künstliche Intelligenz",
    "Modul Nr.": "20-00-1058",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Künstliche Intelligenz (KI) beschäftigt sich mit Algorithmen zur Lösung von Problemen, von \ndenen man gemeinhin annimmt, dass deren Lösung Intelligenz erfordert. Orientierte man sich \nin den Anfangstagen der Wissenschaft primär an psychologischen Erkenntnissen über das \nmenschliche Denken, hat sich das Gebiet seither zunehmend dahingehend entwickelt, dass in \nden Problemlösungsansätzen versucht wird, die Stärken des Computers auszunutzen. Im Zuge \ndieser Vorlesung werden wir einen kurzen Überblick über die zentralen Themen dieser \nKernwissenschaft der Informatik geben, insbesondere in die Themen Suche, Planen, Lernen und \nSchließen. Die historischen und philosophischen Grundlagen werden ebenfalls behandelt. \n- Grundlagen \n- Einführung, Geschichte der AI (RN chapter 1) \n- Intelligente Agenten (RN chapter 2) \n- Suche \n- Uninformierte Suche (RN chapters 3.1 - 3.4) \n- Heuristische Suche (RN chapters 3.5, 3.6) \n- Lokale Suche (RN chapter 4) \n- Constraint Satisfaction Problems (RN chapter 6) \n- Spiele: Suche mit Gegnern (RN chapter 5) \n- Planning \n- Planen im Zustandsraum (RN chapter 10) \n- Planen im Planraum (RN chapter 11) \n- Decisions under Uncertainty \n- Unsicherheit und Wahrscheinlichkeiten (RN chapter 13) \n- Bayesian Networks (RN chapter 14) \n- Decision Making (RN chapter 16) \n- Machine Learning \n- Neural Networks (RN chapters 18.1,18.2,18.7) \n- Reinforcement Learning (RN chapter 21) \n- Philosophische Grundlagen",
    "Qualifikationsziele": "Modulhandbuch B. Sc./M. Sc. Informatik  320 \nNach der erfolgreichen Absolvierung dieser Lehrveranstaltung sind die Studenten in der Lage \n- grundlegende Techniken der Künstlichen Intelligenz zu verstehen und erklären \n- in einer Diskussion über die prinzipielle Möglichkeit der Schaffung einer Künstlichen \nIntelligenz fundierte Argumente vorzubringen \n- neue Entwicklungen auf diesem Gebiet kritisch beurteilen",
    "Vorraussetzungen": "Keine",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1058-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1058-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Ethik in Natürlicher Sprachverarbeitung",
    "Modul Nr.": "20-00-1061",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Mit zunehmender Verbreitung von Sprachtechnologien wächst das Bewusstsein, dass \nEntscheidungen, die wir über unsere Daten, Methoden und Werkzeuge treffen, direkt mit deren \nAuswirkungen auf Menschen und Gesellschaften verbunden sind. Diese Veranstaltung stellt \nreale Anwendungen von Sprachtechnologien und die möglichen ethischen Implikationen vor. \nWir besprechen philosophische Grundlagen der ethischen Forschung und fortschrittliche \nMethoden auf dem neuesten Stand der Technik. \nZentrale Inhalte: \n- Philosophische Grundlagen: Was ist Ethik - Geschichte, medizinische und psychologische \nExperimente, ethische Entscheidungsfindung. \n- Falschdarstellung und Befangenheit: Algorithmen zur Identifizierung von Vorurteilen in \nModellen und Daten, sowie kontradiktorische Ansätze zum Gegensteuern. \n- Datenschutz: Algorithmen für demografische Inferenz, Persönlichkeitsprofile und \nAnonymisierung von demographischen und persönlichen Merkmalen. \n- Höflichkeit in der Kommunikation: Techniken zur Überwachung des Trolling, Hate Speech, \nmissbräuchliche Sprache, Cybermobbing, toxische Kommentare. \n- Demokratie und die Sprache der Manipulation: Ansätze zur Erkennung von Propaganda und \nManipulation in Nachrichten, zur Erkennung von gefälschten Nachrichten und zur politischen \nGestaltung. \n- NLP zum Wohle der Menschheit: NLP mit geringen Ressourcen, Anwendungen zur Reaktion \nauf Katastrophen und Überwachung von Krankheiten, medizinische Anwendungen, \npsychologische Beratung, Schnittstellen für die Zugänglichkeit.",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung abgeschlossen haben, können sie \n- philosophische und praktische Aspekte von Ethik erklären \n- die Grenzen und Limitierungen maschineller Lernmodelle aufzeigen \n- Techniken einsetzen, um Befangenheit und Unfairness in Modellen und Daten zu \nidentifizieren und genezusteuern \n- den Einfluss von Meinungsbeeinflussung in Datenaufbereitungen und Nachrichten aufzeigen \nModulhandbuch B. Sc./M. Sc. Informatik  322 \nund quantifizieren \n- Hassrede und Online-Missbrauch identifizieren sowie Gegenmaßnahmen entwickeln",
    "Vorraussetzungen": "Empfohlen: \nGrundlegende Algorithmen und Datenstrukturen sowie Programmierkenntnisse",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1061-iv] (Fachprüfung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1061-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Seminar aus Data Mining und Maschinellem Lernen",
    "Modul Nr.": "20-00-0102",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch und English",
    "Lerninhalt": "Dieses Seminar dient zur Aufarbeitung neuerer Forschungsarbeiten im Bereich des Data \nMining und des Maschinellen Lernens. Für jeden Seminar-Termin wird ein Teilnehmer ein \nPapier vortragen, welches dann von allen Teilnehmern diskutiert wird. Benotet werden die \nVorbereitung und die Präsentation der Arbeit, sowie die Teilnahme an der Diskussion; evtl. \nauch eine schriftliche Ausarbeitung.  \nAusgewählt werden neuere Publikationen aus den relevanten Journalen des  Gebiets, \ninsbesondere aus den Journalen “Data Mining and Knowledge Discovery”, \"Machine \nLearning\", sowie \"Journal of Machine Learning Research\". Es können aber (nach \nRücksprache) auch eigene Themenvorschläge ausgearbeitet werden.  \nBitte beachten Sie unbedingt aktuelle Ankündigungen zu dieser Lehrveranstaltung unter \nhttp://www.ke.informatik.tu-darmstadt.de/lehre.",
    "Qualifikationsziele": "Nach diesem Seminar sollten Studierende in der Lage sein \n● einen unbekannten Text im Bereich des maschinellen Lernens selbständig aufzuarbeiten \n● eine Präsentation für ein Fachpublikum in diesem Gebiet zu entwickeln \n● an einer Fachdiskussion über ein Thema aus dem Gebiet des maschinellen Lernens \nsinnvoll teilzunehmen",
    "Vorraussetzungen": "Empfohlen: Basic knowledge in Machine Learning in Data Mining",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen) \nModulhandbuch B. Sc./M. Sc. Informatik  325",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Seminar Telekooperation",
    "Modul Nr.": "20-00-0130",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Seminar Telekooperation setzt sich mit der strukturierten Arbeit an wissenschaftlichen \nVeröffentlichungen auseinander.",
    "Qualifikationsziele": "Nach dem Besuch des Seminars Telekooperation \n● sind Studierende mit dem Forschungsgebiet ihres Seminarthemas vertraut  \n● können sich Studierende kritische mit wissenschaftlicher Literatur auseinandersetzen \n● eine solchen Auseinandersetzung und zugehöriger Schlussfolgerung in schriftlicher und \nmündlicher Form dokumentieren und vortragen",
    "Vorraussetzungen": "Empfohlen: Allgemeine Informatik --Kenntnisse aus dem Grundstudium",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nModulhandbuch B. Sc./M. Sc. Informatik  327 \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "W. Strunk, E. B. White. The Elements of Style, Pearson, ISBN 0-321-24861-9"
  },
  {
    "Modulname": "Aktuelle Themen der Entwicklung und Anwendung moderner Robotersysteme",
    "Modul Nr.": "20-00-0148",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- selbständige Einarbeitung in eine konkrete Aufgabenstellung aus der Entwicklung und \nAnwendung moderner Robotersysteme unter Anleitung \n- Einarbeitung in den relevanten Stand der Forschung und Technik \n- Erarbeitung eines Lösungsvorschlags und dessen Präsentation und Diskussion in einem \nVortrag und einem Abschlussbericht",
    "Qualifikationsziele": "Durch erfolgreiche Teilnahme erwerben Studierende vertiefte Kenntnisse in ausgewählten \nBereichen, Teilsystemen und Methoden moderner Robotersysteme und trainieren \nPräsentations- und Dokumentationsfähigkeiten.",
    "Vorraussetzungen": "Empfohlen: grundlegende Fachkenntnisse und methodische Fähigkeiten in der Robotik, wie \ndiese durch die Lehrveranstaltung “Grundlagen der Robotik” vermittelt werden",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  329 \nB. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Autonome Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Aktuelle Literaturhinweise werden in der Veranstaltung gegeben."
  },
  {
    "Modulname": "Design und Implementierung moderner Programmiersprachen",
    "Modul Nr.": "20-00-0182",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "",
    "Qualifikationsziele": "Fähigkeit zur selbständigen Erarbeitung wissenschaftlicher Fragestellungen im Bereich „Design \nund Implementierung moderner Programmiersprachen“  \nErwerb von Kenntnissen über ausgewählte aktuelle Themen \nAneignung von Präsentationstechniken",
    "Vorraussetzungen": "Empfohlen: \nVordiplom oder gleichwertige Qualifikation (d.h. fachlicher Kenntnisstand nach den ersten \nvier Semestern des Bachelor-Studiengangs Informatik). Das Seminar kann auch zur \nEinarbeitung z.B. für Studien-, Semester-, Bachelor-, Master- oder Diplomarbeiten dienen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0182-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0182-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%) \nModulhandbuch B. Sc./M. Sc. Informatik  331",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "3D Animation & Visualisierung",
    "Modul Nr.": "20-00-0216",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Im Mittelpunkt dieses Seminars stehen aktuelle Arbeiten aus den Themenbereichen \nphysikalisch basierte Simulation, Animation, Echtzeitrendering und Visualisierung. \n● eigenständiges Einarbeiten in ein Thema anhand von bereitgestellten wissenschaftlichen \nArbeiten (i.d.R. englischsprachig) \n● Interpretation und Einordnen der Ergebnisse der Literaturarbeit \n● Erstellen einer textuellen Zusammenfassung und eines Vortrags über die Thematik \n● Präsentation vor einem Publikum mit heterogenem Vorwissen + Fachdiskussion",
    "Qualifikationsziele": "Die Studenten erhalten in diesem Seminar Fach- und Methodenkompetenz durch die \nErarbeitung eines wissenschaftlichen Themas anhand vorgegebener und selbst \nrecherchierter Fachliteratur. Sie können die wesentlichen Aspekte der untersuchten Arbeiten \nerkennen und diese kompakt aufbereiten, sowohl in textueller als auch in Vortragsform für \nein Publikum mit heterogenem Vorwissensstand. Nach dem Vortrag können die \nVortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema bestreiten.",
    "Vorraussetzungen": "Empfohlen: GDV I, (GDV II)",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  333 \nStandard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Ausgewählte Artikel von ACM SIGGRAPH, EUROGRPAHICS, IEEE und ähnlichen \nKonferenzen. Alle Artikel sind in englischer Sprache. \nSelected articles from ACM SIGGRAPH, EUROGRPAHICS, IEEE and similar Conferences. All \narticles are written in English."
  },
  {
    "Modulname": "Knowledge Engineering und Lernen in Spielen",
    "Modul Nr.": "20-00-0228",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und English",
    "Lerninhalt": "Im Rahmen dieses Seminars werden wir wissensbasierte Ansätze für intelligente Computer-\nSpieler betrachten. Schwerpunkt wird dabei auf den Lern-Ansätzen sein, jedoch werden \ntypischerweise auch andere Themen zur Auswahl stehen. Der Schwerpunkt der Themen \nwird sich regelmäßig ändern. \nBitte beachten Sie unbedingt aktuelle Ankündigungen zu dieser Lehrveranstaltung unter \nhttp://www.ke.informatik.tu-darmstadt.de/lehre.",
    "Qualifikationsziele": "Nach diesem Seminar sollten Studierende in der Lage sein \n● einen unbekannten Text im Bereich des Game Playing selbständig aufzuarbeiten \n● eine Präsentation für ein Fachpublikum in diesem Gebiet zu entwickeln \n● an einer Fachdiskussion über ein Thema aus dem Gebiet sinnvoll teilzunehmen",
    "Vorraussetzungen": "Empfohlen: Basic knowledge in artificial intelligence",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  335",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Visual Analytics: Interaktive Visualisierung sehr großer Datenmengen",
    "Modul Nr.": "20-00-0268",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Dieses Seminar richtet sich an Informatiker, die sich für den Bereich der \nInformationsvisualisierung interessieren, insbesondere den Teilbereich, der sich mit der \nVisualisierung extrem großer Datenmengen beschäftigt. Die Studenten werden in diesem \nSeminar eigene Themen im Bereich Visual Analytics erarbeiten, wissenschaftlich aufarbeiten \nund präsentieren. Zudem wird im Seminar von jedem Teilnehmer ein Aufsatz zum selben \nThema ausgearbeitet werden.",
    "Qualifikationsziele": "Nach erfolgreichem Besuch der Veranstaltung haben die Studierenden die Fach- und \nMethodenkompetenz zur Erarbeitung eines wissenschaftlichen Themas anhand \nvorgegebener und selbst recherchierter Fachliteratur. Die Studierenden können Themen \nanalysieren, präsentieren und fachlich intensiv diskutieren.",
    "Vorraussetzungen": "Empfohlen: Interesse sich mit einer graphisch-analytischen Fragestellung bzw. Anwendung \naus der aktuellen Fachliteratur zu befassen. Vorkenntnisse in Graphischer \nDatenverarbeitung, Informationssysteme oder Informationsvisualisierung",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  337",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nM. Sc. Internet- und Web-basierte Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Serious Games Seminar",
    "Modul Nr.": "20-00-0328",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "90 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "In dem Seminar wird der aktuelle Stand der Forschung bezüglich des Einsatzes von Serious \nGames (beispielsweise für Bildung, Gesundheit und Sport) analysiert und diskutiert.  \nDie Themen haben jeweils Bezug zur aktuell laufenden Forschung des Fachgebiets, teilweise \nin Kooperation mit Partnern aus der Games Industrie und/oder Serious Games Anwendern.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an dem Seminar können sich die Studierenden eigenständig \nin ein Thema aus dem Bereich „Serious Games“ einarbeiten. Sie sind mit Techniken der \nLiteraturrecherche im Bereich von wissenschaftlichen Veröffentlichungen und von \nIndustriequellen vertraut. Die dort genannten Techniken bzw. Ergebnisse können von ihnen \nzusammengefasst, bewertet und untereinander verglichen werden. Außerdem können sie \ndie von ihnen erzielten Ergebnisse einem Publikum unter Anwendung von verschiedenen \nPräsentationstechniken vorstellen sowie eine dazugehörige Fachdiskussion aktiv bestreiten.",
    "Vorraussetzungen": "Empfohlen:",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  339",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Keine"
  },
  {
    "Modulname": "Software Engineering - Projektseminar",
    "Modul Nr.": "20-00-0359",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "  Angebotsmesse der Auftraggeber  \n  Projektauswahl  \n  Anforderungsanalyse beim externen Auftraggeber  \n  Präsentation des Pflichtenheftes insbesondere der  \nProjektorganisation und des iterativen Entwicklungsplans  \n  Analyse der Werkzeuge und der Designkonzepte  \n  Präsentation der Architektur und des Designs risikobehafteter  \nFunktionen  \n  Design und Implementierung der Iterationen  \n  Präsentation der Implementierung und der Qualitätssicherung  \n  Präsentation des abgeschlossenen Projekts der nächsten  \nStudentengeneration",
    "Qualifikationsziele": "  Erfahrung mit selbständiger Durchführung von Softwareprojekten mittleren Umfangs  \n  Fähigkeit die verschiedenen Rollen innerhalb eines Softwareprojekts wahrzunehmen   \n  Fähigkeit die Methoden und Werkzeuge zu bewerten und einzusetzen   \nModulhandbuch B. Sc./M. Sc. Informatik  341 \n  Einschätzung der eigenen Kompetenz und Leistungsfähigkeit in realitätsnahen \nSituationen   \n  Training der Soft Skills, insbesondere Teamfähigkeit   \n  Kommunikation mit Kunden  \n  Präsentationsfähigkeit",
    "Vorraussetzungen": "Empfohlen: \n  Software Engineering - Requirements (parallel)  \n  Software Engineering - Design (parallel)  \n  Software Engineering - Softwarequalitätssicherung (parallel, empfehlenswert)   \n  Empfehlenswert ist Praxiserfahrung  \n  Teamtraining und Präsentationstechnik durch die HDA",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0359-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0359-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Algorithmische Modellierung zur Erstellung von Fahrplänen",
    "Modul Nr.": "20-00-0391",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i. d. R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Modellierung periodischer Fahrpläne insbesondere im Einsenbahnverkehr \n- Berücksichtigung von Infrastrukturbedingungen bei der Fahrplanerstellung \n- Stabilität von Fahrplänen \n- Fahrplanauskunftssysteme",
    "Qualifikationsziele": "Studierende erwerben in dieser Veranstaltung umfassende Fähigkeiten in algorithmischer \nModellierung im Zusammenhang mit Problemstellungen aus dem Bereich Bahnverkehr",
    "Vorraussetzungen": "Empfohlen: Algorithmen und Datenstrukturen",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  343",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung angegeben"
  },
  {
    "Modulname": "Sicherheitskonzepte im Eisenbahnbetrieb",
    "Modul Nr.": "20-00-0461",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Grundwissen über Eisenbahnsicherungsanlagen und sicheren Eisenbahnbetrieb. Umsetzung von \nSicherheitskonzepten in modernen Eisenbahnsicherungsanlagen.",
    "Qualifikationsziele": "",
    "Vorraussetzungen": "Grundkenntnisse über zuverlässige Systeme (z.B. Besuch der VL Computersystemsicherheit) \nund Interesse am Eisenbahnbetrieb.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0461-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0461-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Aktuelle Trends im Medical Computing",
    "Modul Nr.": "20-00-0468",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Selbstständiges Studium aktueller Conference und Journal Papers aus dem Bereich \nMedical Imaging zu einem ausgewählten Thema im Bereich grundlegender Methoden. \n- Kritische Auseinandersetzung mit dem behandelten Thema \n- Eigene weiterführende Literaturrecherchen \n- Erstellen eines Vortrags (schriftliche Ausarbeitung und Folienpräsentation) über die \nbehandelte Thematik \n- Präsentation des Vortrags vor Publikum mit heterogenem Vorwissen \n- Fachliche Diskussion über die behandelte Thematik nach dem Vortrag \n- Medizinische Anwendungsfelder sind u.a. Onkologie, Orthopädie, navigierte Chirurgie \nBehandelte Methoden umfassen u.a.: Segmentierung, Registrierung, Visualisierung, \nSimulation, Navigation und Tracking.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. \nSie lernen die wesentlichen Aspekte der untersuchten Arbeiten zu erkennen und auf \nverständliche Weise einem heterogenen Publikum vorzutragen. Dabei wenden sie \nverschiedene Präsentationstechniken an. Nach dem Vortrag können die Studierenden aktiv \neine Fachdiskussion zu dem präsentierten Thema leiten und bestreiten.",
    "Vorraussetzungen": "Empfohlen: Bachelor ab 4. Semester, Master ab 1. Semester.",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen) \nModulhandbuch B. Sc./M. Sc. Informatik  346",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird zu Beginn der Veranstaltung bekanntgegeben."
  },
  {
    "Modulname": "Skalenraum- und PDE-Methoden in der Bildanalyse und -verarbeitung",
    "Modul Nr.": "20-00-0469",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "Bildanalyse und -verarbeitung beschäftigen sich mit der Untersuchung von Bildern und der \nAnwendung bestimmer Aufgaben auf Bilder, wie Verbesserung, Rauschunterdrückung, \nSchärfung und Segmentierung. In diesem Kurs werden häufig verwendete mathematische \nMethoden vorgestellt und diskutiert. Der Schwerpunkt liegt dabei auf der axiomatischen \nModellwahl, deren mathematischen Eigenschaften und dem praktischen Nutzen. \nStichwörter: \n● Filterung (Kantenerkennung, Verbesserung, Wiener, Fourier, ...) \n● Bilder & Beobachtungen: Skalenraum, Regularisierung, Distributionen \n● Objekte: Differenzstruktur, Invarianten, Feature-Erkennung \n● Tiefenstruktur: Katastrophen und Multi-Skalen-Hierarchie \n● Variationsmethoden und Partielle Differentialmethoden: Perona-Malik, anisotrope \nDiffusion, Total Variation, Mumford-Shah, Chan-Vese, geometrische partielle \nDifferentialgleichungen, Level-Sets. \n● Kurvenevolution: Normalenbewegung, mittlere Krümmungsbewegung, euklidische \nVerkürzungsbewegung.",
    "Qualifikationsziele": "Nach erfolgreichem Besuch der Veranstaltung beschreiben Studierende die Grundkonzepte \nsowie grundlegenden mathematische Modelle und Methoden der Bildanalyse und -\nverarbeitung. Sie erklären wichtige Verfahren zu Skalenraum- sowie zu PDE-Ansätzen und \nkönnen damit repräsentative Fachbeiträge beschreiben, beurteilen, und transferieren.",
    "Vorraussetzungen": "Empfohlen: Da Bildanalyse und -verarbeitung eine Mischung aus verschiedenen Disziplinen, \nwie Physik, Mathematik, Vision, Informatik und Engineering, ist, ist dieser Kurs gezielt auf \nein breites Publikum zugeschnitten. Daher werden nur Grundkenntnisse in Analysis \nModulhandbuch B. Sc./M. Sc. Informatik  348 \nangenommen. Weitere notwendige mathematische Werkzeuge werden in den Sitzungen \nskizziert.",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Main: \n● B. M. ter Haar Romeny, Front-End Vision and Multi-scale Image Analysis, Dordrecht, \nKluwer Academic Publishers, 2003. \nRecommended: \n● T. Lindeberg: Scale-Space Theory in Computer Vision, Dordrecht, Kluwer Academic \nPublishers, 1994. \n● J. Weickert: Anisotropic Diffusion in Image Processing, Teubner-Verlag, Stuttgart, \nGermany, 1998. \n● G. Aubert & P. Kornprobst: Mathematical problems in image processing: Partial \nDifferential Equations and the Calculus of Variations (second edition), Springer, Applied \nMathematical Sciences, Vol 147, 2006."
  },
  {
    "Modulname": "Algorithmen zum Graphendesign",
    "Modul Nr.": "20-00-0518",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i. d. R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Algorithmen zur Einbettung von Graphen in die Ebene \n- Mathematische Formalisierung ästhetischer Zeichenkriterien \n- VLSI Design \n- Algorithmen und NP-Vollständigkeitsresultate bezügl. Einbettungen von  Graphen in die \nEbene mit Nebenbedingungen",
    "Qualifikationsziele": "Nachdem Studierende erfolgreich diese Veranstaltung besucht haben, \n- können sie Diagrammdarstellungsprobleme als algorithmische Fragestellungen \nmodellieren \n- können sie ästhetischer Fragestellungen als Probleme algorithmischer Natur modellieren \n- verstehen sie algorithmische Fragestellungen im VLSI-Schaltkreisentwurf",
    "Vorraussetzungen": "Empfohlen: Vorlesung über Algorithmen",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  350",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Physikalisch basierte Simulation",
    "Modul Nr.": "20-00-0525",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- Eigenständiges Einarbeiten in ein Thema aus dem Umfeld der physikalisch basierten \nSimulation anhand von bereitgestellten wissenschaftlichen Arbeiten (i.d.R. \nenglischsprachig) \n- Eigene darüber hinausgehende Literaturrecherchen, angeleitet von Betreuer \n- Interpretation und Einordnen der Ergebnisse der Literaturarbeit, zusammen mit dem \nBetreuer \n- Erstellen eines Vortrags über die Thematik einschließlich Folienpräsentationen, angeleitet \ndurch den Betreuer \n- Halten der beiden Vorträge vor einem Publikum mit heterogenem Vorwissen \n- Fachdiskussion nach jedem Vortrag \n- Feedback an die Vortragenden zu den Vorträgen",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. \nSie sind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie können über \nmehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und \nForschungsergebnisse übergreifend evaluieren. Sie können die wesentlichen Aspekte der \nuntersuchten Arbeiten erkennen und diese kompakt einem Publikum mit heterogenem \nVorwissensstand vortragen,  wobei sie dabei effektiv verschiedene Präsentationstechniken \nanwenden. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem \nvon ihnen präsentierten Thema bestreiten.",
    "Vorraussetzungen": "Empfohlen: Grundkenntnisse im Bereich der physikalisch basierten Simulation sind von \nVorteil  \nModulhandbuch B. Sc./M. Sc. Informatik  352",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Ausgewählte Veröffentlichungen der ACM Siggraph, Eurographics und IEEE."
  },
  {
    "Modulname": "Semantik Visualisierung",
    "Modul Nr.": "20-00-0542",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und English",
    "Lerninhalt": "Eigenständige wissenschaftliche Ausarbeitung eines in der Forschung aktuellen Themas aus \ndem Bereich Semantik Visualisierung \n•Eigene Literaturrecherchen, angeleitet von Betreuer \n•Interpretation und Einordnen der Ergebnisse der Literaturarbeit, zusammen mit Betreuer \n•Erstellen einer schriftlichen Ausarbeitung zu dem gewählten Thema (Deutsch oder \nEnglisch), angeleitet vom Betreuer \n•Erstellen eines Vortrages zu der ausgearbeiteten Thematik, angeleitet von Betreuer \n•Halten des Vortrages vor einem Fachpublikum \nFeedback an die Vortragenden zu den Vorträgen (u.a. betreffend Rhetorik, \nPräsentationstechniken) und zur Fachdiskussion",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten \nund dieses wissenschaftlich beschreiben. Sie lernen diverse Techniken und Ressourcen der \nLiteraturrecherche kennen und können diese auch für weitere Arbeiten einsetzen. Des \nWeiteren werden die Studierenden mit praktischen und aktuellen Themen aus der \nangewandten Forschung konfrontiert und lernen dabei interessante Themengebiete kennen. \nDie schriftliche Ausarbeitung ermöglicht die wissenschaftliche Wiedergabe in Form von \nSchrift, während die Präsentation vor einem Fachpublikum die mündliche Wiedergabe \nfördert. Somit lernen die Studierenden ein Thema zu recherchieren, schriftlich \nauszuarbeiten und zu präsentieren. \nNach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen \npräsentierten Thema bestreiten. \nModulhandbuch B. Sc./M. Sc. Informatik  354",
    "Vorraussetzungen": "Empfohlen: Besuch der Vorlesung Visual Computing",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben"
  },
  {
    "Modulname": "Forschungsseminar zu Netzen, Sicherheit, Mobilität und Drahtloser Kommunikation",
    "Modul Nr.": "20-00-0549",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Forschungsseminar zu Netzen, Sicherheit, Mobilität und Drahtloser Kommunikation \nerarbeitet aktuelle Fragstellungen, die als hoch-relevant für die zukünftige Entwicklung der \ngenannten Themenfelder eingeschätzt werden. Es umfasst das Studium, die kritische \nAnalyse und Diskussion, das Zusammenfassen und die Präsentation ausgewählter \nerstklassiger Forschungsbeiträge. Ein Einblick in wissenschaftliche Arbeitsweise wird \nvermittelt. Ein Kurzreferat und ein abschließendes Referat sowie eine schriftliche \nAusarbeitung werden erstellt. \nDie Themen des Forschungsseminars speisen sich aus den aktuellen Forschungsthemen der \nArbeitsgruppe SEEMOO. \nLernziele: \n- Eigenständiges Einarbeiten in ein Thema auf dem Gebiet Kommunikationsnetze, \nSicherheit, Mobilität und Drahtloser Kommunikation (i.d.R. englischsprachig) \n- Eigene darüber hinausgehende Literaturrecherchen \n- Interpretation und Einordnen der Ergebnisse der Literaturarbeit \n- Erstellen eines einführenden und eines vertiefenden Vortrags über die Thematik \neinschließlich Folienpräsentationen \n- Halten der beiden Vorträge vor einem Publikum mit heterogenem Vorwissen \n- Fachdiskussion nach jedem Vortrag \n- Feedback an die Vortragenden zu den Vorträgen (u.a. betreffend Rhetorik, \nPräsentationstechniken) und zur Fachdiskussion \n- Kennen des wissenschaftlichen Arbeitsprozesses und Publikationsprozesses",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden die Fähigkeit \nselbstständig wissenschaftlich neue Themen zu erschließen. Sie haben ein tiefgreifendes \nVerständnis ausgewählter Basismechanismen, Methoden und Anwendungen in dem \nModulhandbuch B. Sc./M. Sc. Informatik  356 \nbearbeiteten Themenfeld erworben. Arbeitstechniken wie ausführliche Literaturrecherche, \nkritische Diskussion und Analyse wissenschaftlicher Artikel und die Presentation der \nerzielten Arbeitsergebnisse werden von den Studierenden beherrscht. Die Studierenden \nkönnen ihre Arbeit vor einem kritischen Fachpublikum verteidigen.",
    "Vorraussetzungen": "Empfohlen: Erfolgreiche Teilnahme an einer  \nIntegrierten Veranstaltung des Fachgebiets SEEMOO",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Themenspezifisch ausgewählte, aktuelle wissenschaftliche Veröffentlichungen"
  },
  {
    "Modulname": "Seminar zu Netzen, Sicherheit, Mobilität und Drahtloser Kommunikation",
    "Modul Nr.": "20-00-0582",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Seminar zu Netzen, Sicherheit, Mobilität und Drahtloser Kommunikation erarbeitet \naktuelle Fragestellungen auf den genannten Gebieten. Unter Anleitung der Dozenten \numfasst es das Studium, die kritische Analyse und Diskussion, das Zusammenfassen und die \nPräsentation ausgewählter Forschungsbeiträge. Ein Kurzreferat und ein abschließendes \nReferat sowie eine schriftliche Ausarbeitung werden erstellt. \nDie Themen des Seminars speisen sich aus den aktuellen Forschungsthemen der \nArbeitsgruppe SEEMOO. \nLernziele: \n- Eigenständiges Einarbeiten in ein Thema auf dem Gebiet Kommunikationsnetze, \nSicherheit, Mobilität und Drahtloser Kommunikation (i.d.R. englischsprachig) \n- Darüber hinausgehende Literaturrecherchen, angeleitet von Betreuer \n- Interpretation und Einordnen der Ergebnisse der Literaturarbeit, angeleitet von Betreuer \n- Erstellen eines einführenden und eines vertiefenden Vortrags über die Thematik \neinschließlich Folienpräsentationen, angeleitet von Betreuer \n- Halten der beiden Vorträge vor einem Publikum mit heterogenem Vorwissen \n- Fachdiskussion nach jedem Vortrag \n- Feedback an die Vortragenden zu den Vorträgen (u.a. betreffend Rhetorik, \nPräsentationstechniken) und zur Fachdiskussion",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden die Fähigkeit \nunter Anleitung wissenschaftlich zu arbeiten. Sie kennen die grundlegenden Techniken der \nwissenschaftlichen Literaturarbeit und können diese für ein definiertes Thema anwenden. \nSie haben ein mitteltiefes Verständnis ausgewählter Basismechanismen, Methoden und \nAnwendungen in dem bearbeiteten Themenfeld. Die Studierenden können dieses erworbene \nModulhandbuch B. Sc./M. Sc. Informatik  358 \nWissen einem heterogenen Publikum verständlich präsentieren und die technischen Details \ndes bearbeiteten Themas erläutern.",
    "Vorraussetzungen": "Empfohlen: Erfolgreiche Teilnahme an einer Integrierten Veranstaltung des Fachgebiets \nSEEMOO",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Themenspezifisch ausgewählte, aktuelle wissenschaftliche Veröffentlichungen"
  },
  {
    "Modulname": "Text Analytics",
    "Modul Nr.": "20-00-0596",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Die Seminarreihe beschäftigt sich mit aktuellen Themen in der automatischen \nSprachverarbeitung. Es werden grundlegende Methoden und Technologien zur Analyse \ngeschriebener, natürlicher Sprache vorgestellt, wobei der Schwerpunkt des Seminars in \njedem Semester neu gesetzt wird. \nWeitere Informationen: https://www.ukp.tu-darmstadt.de/teaching/courses/regular-\nseminar/",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, können sie \n● aktuelle Forschungsfragen zum Seminarthema benennen und erläutern, \n● wissenschaftliche Veröffentlichungen verstehen, kritisch beurteilen und untereinander \ndiskutieren, \n● ein Forschungsthema eigenständig aufarbeiten und \n● dieses der Gruppe vorstellen und auf Rückfragen und Diskussionsbeiträge eingehen.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  360 \nBestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird in der Veranstaltung bekanntgegeben."
  },
  {
    "Modulname": "Fortgeschrittene Themen in der Computergraphik",
    "Modul Nr.": "20-00-0604",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Englisch",
    "Lerninhalt": "• Grundlagen der wissenschaftlichen Vortragstechnik und Begutachtung \n• Eigenständiges Einarbeiten in aktuelle Publikationen in Computergraphik \n(englischsprachig) \n• Eigene darüber hinausgehende Recherche zur Hintergrund-Literatur, angeleitet von \nBetreuer \n• Erstellen eines zweiteiligen Vortrags (Problemstellung und Lösungsansatz) über eine \nPublikationen einschließlich Folienpräsentation, angeleitet durch Betreuer \n• Erstellen eines (simulierten) wissenschaftlichen Gutachtens über eine zweite Publikation, \nangeleitet durch Betreuer \n• Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen \n• Führung der Fachdiskussion nach beiden Vortragsteilen \n• Aktive Teilnahme an den Fachdiskussionen, sowie Feedback an die Vortragenden",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in aktuelle Themen der Computergraphik anhand von wissenschaftlichen \nVeröffentlichungen einarbeiten. Sie können die wesentlichen Beiträge der untersuchten \nPublikationen erkennen und diese kompakt einem Publikum mit heterogenem \nVorwissensstand präsentieren, unter Berücksichtigung von Prinzipien des guten \nwissenschaftlichen Vortrags. Nach dem Vortrag können die Vortragenden aktiv eine \nFachdiskussion zu dem von ihnen präsentierten Thema bestreiten. Weiterhin sind sie in der \nLage ein wissenschaftliches Gutachten über eine aktuelle Publikation anzufertigen, welches \nden üblichen Standards des wissenschaftlichen Begutachtungsprozesses genügt.",
    "Vorraussetzungen": "Empfohlen: Teilnehmer sollten Grundkenntnisse in Computergraphik besitzen (z.B. durch \nBesuch von Graphische Datenverarbeitung I).  \nModulhandbuch B. Sc./M. Sc. Informatik  362",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "aktuelle Publikationen, überwiegend des vergangenen Jahres"
  },
  {
    "Modulname": "Seminar Smart City",
    "Modul Nr.": "20-00-0619",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Englisch",
    "Lerninhalt": "Die rasche Urbanisierung stellt Städt zunehmend vor komplexe Heruasforderungen, die \nsowohl sozio-ökonomischer, umweltpolitischer, infrastruktureller und organisierender Natur \nsind.Im Seminar lernen Studenten verschiedene Ansätze kennen mit diesen \nHerausforderungen umzugehen, u.a. Verkehrsfluss vorhersage, Analyse von Umwelt Daten, \nKatastrophenschutz.",
    "Qualifikationsziele": "Die Studenten erlernen grundsätzliche wissenschaftliche Arbeitsweisen im Umgang mit \nbestehender Literatur zu Smart City Forschung. Weiterhin erhalten die Studenten einen \nguten Überblick über das Themenfeld Smart City.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nModulhandbuch B. Sc./M. Sc. Informatik  364 \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "verschieden"
  },
  {
    "Modulname": "Privacy by Design",
    "Modul Nr.": "20-00-0623",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Das Seminar betrachtet verschiedene neue Forschungsarbeiten zum Thema \"Privacy\"; \ninsbesondere werden Ansätze besprichen, um Anwendungen intrinsisch \"privatheitsfreundlich\" \nzu gestalten. Die Seminarteilnehmer werden aktuelle Forschungsarbeiten lesen, den weiteren \nTeilnehmern vorstellen und in einer Seminararbeit zusammenfassen.",
    "Qualifikationsziele": "Aktuelle Forschung zum Thema Privacy kennenlernen; Einführung in das Schreiben \nwissenschaftlicher Publikationen",
    "Vorraussetzungen": "Empfohlen: \nComputersystemsicherheit, Kryptographie",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0623-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0623-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "Modulhandbuch B. Sc./M. Sc. Informatik  366"
  },
  {
    "Modulname": "Seminar - Softwaresicherheit für mobile Endgeräte",
    "Modul Nr.": "20-00-0641",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Das Ziel dieses Seminars ist eine Verbindung zwischen zwei aktuellen Themen herzustellen: Das \nerste Thema betrifft Sicherheit-Lösungen und bekannte Schwachstellen auf modernen mobilen \nEndgeräten. Das zweite Thema ist die Programm-Analyse für Low-Level-Sprachen, z.B. Java \noder Android Dalvik Bytecode. Neuere Forschungsartikel aus diesen beiden Bereichen werden \nim Seminar präsentiert. Ein Teil des Seminars wird in Form einer Diskussion stattfinden, wie \nTechniken aus dem Bereich Programm-Analyse helfen können, die Sicherheit auf mobilen \nGeräten zu verbessern.",
    "Qualifikationsziele": "Kenntnisse von Methoden und aktuellen Forschungsfragestellungen bzgl. Software-Sicherheit \nfür mobile Endgeräte; Verbesserung der Fähigkeiten zum Lesen und Verstehen \nwissenschaftlicher Artikel; Fähigkeit wissenschaftliche Ergebnisse als solche zu erkennen und \ninhaltlich zu bewerten; Fähigkeit über wissenschaftliche Arbeiten und Ergebnisse schriftlich zu \nberichten; Verbesserung der Fähigkeit zum Präsentieren und Diskutieren wissenschaftlicher \nProjekte und Ergebnisse",
    "Vorraussetzungen": "Empfohlen: \nProgrammierkenntnisse in Java. Informatik- und Mathematikkenntnisse entsprechend den \nersten 4 Semestern des Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen \nSprachen und Kalkülen umzugehen.",
    "Prüfungsform": "Modulabschlussprüfung: \n  Modulprüfung (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  367 \nBestehen der Prüfung (100%)",
    "Benotung": "Modulabschlussprüfung:  \n  Modulprüfung (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Fortgeschrittene Themen in Computer Vision und Maschinellem Lernen",
    "Modul Nr.": "20-00-0645",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "● Grundlagen der wissenschaftlichen Vortragstechnik und Begutachtung \n● Eigenständiges Einarbeiten in aktuelle Publikationen in Computer Vision oder \nMaschinellem Lernen (englischsprachig) \n● Eigene darüber hinausgehende Recherche zur Hintergrund-Literatur, angeleitet von \nBetreuer \n● Erstellen eines zweiteiligen Vortrags (Problemstellung und Lösungsansatz) über eine \nPublikationen einschließlich Folienpräsentation, angeleitet durch Betreuer \n● Erstellen eines (simulierten) wissenschaftlichen Gutachtens über eine zweite Publikation, \nangeleitet durch Betreuer \n● Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen \n● Führung der Fachdiskussion nach beiden Vortragsteilen \n● Aktive Teilnahme an den Fachdiskussionen, sowie Feedback an die Vortragenden",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in aktuelle Themen der Computer Vision und/oder des Maschinellen Lernens \nanhand von wissenschaftlichen Veröffentlichungen einarbeiten. Sie können die wesentlichen \nBeiträge der untersuchten Publikationen erkennen und diese kompakt einem Publikum mit \nheterogenem Vorwissensstand präsentieren, unter Berücksichtigung von Prinzipien des \nguten wissenschaftlichen Vortrags. Nach dem Vortrag können die Vortragenden aktiv eine \nFachdiskussion zu dem von ihnen präsentierten Thema bestreiten. Weiterhin sind sie in der \nLage ein wissenschaftliches Gutachten über eine aktuelle Publikation anzufertigen, welches \nden üblichen Standards des wissenschaftlichen Begutachtungsprozesses genügt.",
    "Vorraussetzungen": "Modulhandbuch B. Sc./M. Sc. Informatik  369 \nEmpfohlen: Teilnehmer sollten Grundkenntnisse in Computer Vision, sowie idealerweise \nmaschinellem Lernen besitzen (z.B. durch Besuch von Computer Vision I, Statistisches \nMaschinelles Lernen).",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Aktuelle Publikationen, überwiegend des vergangenen Jahres"
  },
  {
    "Modulname": "Security and Privacy in Information Technology",
    "Modul Nr.": "20-00-0646",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "In diesem Seminar werden aktuelle Forschungsthemen aus der IT-Security & Privacy in der \nInformationstechnologie behandelt. \nJeder Teilnehmer schreibt zu einem ausgewählten Thema eine kurze Ausarbeitung von 7 bis \n9 Seiten und präsentiert im Anschluss die Ergebnisse der Gruppe. Die Kursteilnehmer \nerhalten als Einstiegsliteratur eine Liste von Publikationen aus relevanten Zeitschriften, \nKonferenzen oder Bücher und müssen zusätzliche eigene Recherche betreiben. Die \nTeilnehmer sollen lernen, wie man ein wissenschaftliches Thema bearbeitet, eine \nPräsentation ähnlich wie bei einer wissenschaftlichen Konferenz hält und eine \nwissenschaftliche Diskussion führt. \nEine erste Liste der Themen wird noch zum Beginn des neuen Semesters bekanntgegeben. \nEigene Themen können ebenso vorgeschlagen werden.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an dem Seminar können die Studierenden sich eigenständig \nin ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. Sie sind mit \nden verschiedenen Techniken der Literaturrecherche vertraut. Sie können über mehrere \nwissenschaftliche Arbeiten hinweg Techniken vergleichen und Forschungsergebnisse \nübergreifend evaluieren. Sie können die wesentlichen Aspekte der untersuchten Arbeiten \nerkennen und diese kompakt einem Publikum mit heterogenem Vorwissensstand vortragen, \nwobei sie dabei effektiv verschiedene Präsentationstechniken anwenden. Nach dem Vortrag \nkönnen die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema \nbestreiten.",
    "Vorraussetzungen": "Empfohlen: Grundlegendes Verständnis für IT-Sicherheit und Privacy in der \nInformationstechnologie. Interesse an aktuellen Web-Technologien und Kryptographie ist \nwünschenswert. Empfohlen ist der Besuch/Abschluss der Vorlesung  \nComputersystemsicherheit.",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  371 \nStudienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Eine erste Liste der Themen wird noch zum Beginn des neuen Semesters bekanntgegeben. \nEigene Themen können ebenso vorgeschlagen werden."
  },
  {
    "Modulname": "Mobile Security",
    "Modul Nr.": "20-00-0652",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "In diesem Seminar werden verschiedene Sicherheitsaspekte von mobilen Endgeräten (mit \nFokus auf Smartphones) analysiert und diskutiert. Die Studenten werden eine Anzahl \naktueller wissenschaftlicher Publikationen zu einem bestimmten Thema in Form einer \nSeminararbeit zusammenfassen, vergleichen und bewerten. Zusätzlich wird jeder \nTeilnehmer am Ende des Semsters seine Seminararbeit vorstellen. \nMögliche Themen sind unter anderem: \n● Sicherheitsmodelle von aktuellen mobilen Betriebssystemen (z.B. Android, iOS, Windows \nPhone, MeeGo, Symbian, RIM) \n● Sicherheitsanalyse und Vergleich von aktuellen App Store Modellen \n● Mobile Endgeräte im Unternehmenseinsatz \n● Sicherheitserweiterungen für Android \n● Kernel Sicherheit \n● Applikationssicherheit (z.B. mobile Malware und Laufzeitangriffe) \n● Datenschutz-relevante Aspekte von mobilen Endgeräten \n● Sicherheit von mobilen Netzwerken",
    "Qualifikationsziele": "Dieses Seminar behandelt verschieden Themen aus dem Bereich mobiler Sicherheit mit \nFokus auf Smartphones. Durch die erfolgreiche Teilnahme erhalten Studenten detaillierte \nKenntnisse über Sicherheit und Datenschutz in mobilen Betriebssystemen, Geräten, \nInfrastrukturen und Anwendungen. Außerdem lernen sie sich in aktuelle wissenschaftliche \nThemengebiete einzuarbeiten und ihre Ergebnisse sowohl schriftlich als auch mündlich zu \npräsentieren.",
    "Vorraussetzungen": "Empfohlen: Grundlagen der Informatik",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  373 \nStudienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Seminar zur Technischen Informatik",
    "Modul Nr.": "20-00-0653",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- Eigenständiges Einarbeiten in ein Thema aus dem Umfeld der Technischen Informatik \nanhand von bereitgestellten wissenschaftlichen Arbeiten (i.d.R. englischsprachig) \n- Eigene darüber hinausgehende Literaturrecherchen, angeleitet von Betreuer \n- Interpretation und Einordnen der Ergebnisse der Literaturarbeit, zusammen mit    Betreuer \n- Erstellen eines einführenden und eines vertiefenden Vortrags über die Thematik \neinschließlich Folienpräsentationen, angeleitet durch Betreuer \n- Halten der beiden Vorträge vor einem Publikum mit heterogenem Vorwissen \n- Fachdiskussion nach jedem Vortrag \n- Feedback an die Vortragenden zu den Vorträgen (u.a. betreffend Rhetorik, \nPräsentationstechniken) und zur Fachdiskussion",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. \nSie sind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie können über \nmehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und \nForschungsergebnisse übergreifend evaluieren. Sie können die wesentlichen Aspekte der \nuntersuchten Arbeiten erkennen und diese kompakt einem Publikum mit heterogenem \nVorwissensstand vortragen,  wobei sie dabei effektiv verschiedene Präsentationstechniken \nanwenden. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem \nvon ihnen präsentierten Thema bestreiten.",
    "Vorraussetzungen": "Empfohlen: Besuch der Vorlesungen „Digitaltechnik“, „Rechnerorganisation“ und \n„Architektur und Entwurf von Rechnersystemen“ bzw. entsprechende Kenntnisse aus \nanderen Studiengängen. Je nach konkretem Vortragsthema können auch noch andere \nKenntnisse hilfreich sein.  \nModulhandbuch B. Sc./M. Sc. Informatik  375",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben"
  },
  {
    "Modulname": "IT Sicherheit, Benutzbarkeit, und Gesellschaftliche Aspekte",
    "Modul Nr.": "20-00-0665",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Die Teilnehmer dieses Seminars beschäftigen sich damit, wie man Informationssysteme \nnicht nur in der Theorie sicher macht, sondern so gestaltet, dass sie für die Allgemeinheit \npraktikabel, effektiv und benutzbar ist. Daher werden Aspekte wie Benutzbarkeit, \nVerständlichkeit, Erfahrungen der Benutzer, Motivation der Benutzer, \nSicherheitsbewusstsein der Benutzer und ihre Kenntnisse im Bereich IT-Sicherheit sowie \nrechtliche Vorgaben im Kontext von unterschiedlichen sicherheitskritischen Anwendungen \nbetrachtet. Zu den Anwendungen dieses Seminars zählen: Elektronische Wahlen, Online \nShopping, E-Banking, E-Mail, und allgemein Authentifizierungsmechanismen. Studierende \nwerden im Rahmen des Seminar folgende (Lern-)Phasen durchlaufen. \n● Einarbeitung in die Thematik und die Fachliteratur des Themas (unter Anleitung eines \nBetreuers) \n● Vorbereitung der Struktur einer wissenschaftlichen Ausarbeitung zu dem spezifischen \nThema \n● Peer Review der Strukturen \n● Präsentation des Themas bzw. der gewonnenen Erkenntnisse \n● Abschluss der wissenschaftlichen Ausarbeitung",
    "Qualifikationsziele": "Nach dem erfolgreichen Abschluss des Seminars besitzen Studierende Grundkenntnisse über \ndas Zusammenspiel zwischen IT-Sicherheit und gesellschaftlichen Aspekten. Studierende \nerlangen darüber hinaus in diesem Seminar die Grundlagen für das wissenschaftliche \nArbeiten. Zu diesen Grundlagen zählen die strukturierte Literaturrecherche, Problemfindung \nund Problemdefinition, das Verstehen und Anwenden wissenschaftlicher Methoden zur \nEntwicklung und Evaluation von Lösungsansätzen. Darüber hinaus erlernen die \nStudierenden den Prozess der wissenschaftlichen Publikation in Form des wissenschaftlichen \nSchreibens, des Peer Reviews sowie der Präsentation wissenschaftlicher Ergebnisse.",
    "Vorraussetzungen": "Empfohlen:  Computersystemsicherheit, HCI",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  377 \nStudienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Cryptography, Privacy and Security",
    "Modul Nr.": "20-00-0672",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "90 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Ausgewählte Themen in Bezug auf Anwendungen in der elektronischen Gesellschaft. Der \nSchwerpunkt liegt auf den Gebieten Privacy, Elektronische Wahlsysteme und Public-Key \nInfrastrukturen. Einführung in wissenschaftliches Arbeiten und Publizieren. Beispielhafte \nThemen sind: \n● Public Key Infrastrukturen \n○ Verstehen und Anwenden der grundlegenden PKI Konzepte. \n○ Vertiefung der Grundlagen aus der Vorlesung (siehe Vorlesungshomepage) \n○ PKI in der Praxis - z.b. SSL PKI und Web Security, PKI für eID (Deutschland, \nÖsterreich...) \n■ Revokation \n■ Vertrauensmodelle \n■ Kritik und Schwachstellen \n■ Alternative Lösungsansätze \n● Elektronische Wahlsysteme \n○ Wahlsysteme mit verifizierbarer Ergebnisermittlung (unter Verwendung von \nKryptographie): Split-Ballot, Prêt à Voter, Scantegrity; \n○ Anforderungen an Wahlsysteme: End-to-end Verifiability, Universal Verifiability, \nCorrectness, Computational Privacy, Everlasting Privacy; \n○ Wahlarten: Bundestagswahl, Kommunalwahl; \n○ Auswertung verschlüsselter Stimmen basierend auf: Mixnetzwerken, Homomorphic \nTallying. \n● Anonyme Kommunikationssysteme \n○ Verstehen und Anwenden der grundlegenden Konzepte bei anonymer Kommunikation \n○ Anonyme Netzwerke in der Praxis, Verstehen anonymer Kommunikations-Netzwerke, \nz.b. Tor und I2P \n■ Schwächen / Stärken \n■ Kritik   \n■ Alternative Lösungsansätze \n■ Erweiterung \n■ Eigenschaften, z.b. Zensurresistenz \nModulhandbuch B. Sc./M. Sc. Informatik  379 \n○ Anwendung und Verknüpfung anonymer Kommunikations-Systeme mit anderen \nTechnologien - z.b. soziale Netzwerke",
    "Qualifikationsziele": "Die Studierenden erhalten einen Überblick über Komponenten, Prozesse und Standards von \nPublic Key Infrastrukturen, elektronischen Wahlsystemen und Anonymen \nKommunikationssystemen. Sie werden dadurch in die Lage versetzt \n● diese Systeme konzipieren zu können \n● deren Sicherheit einzuschätzen \n● existierende Ansätze in den jeweiligen Bereichen kombinieren und optimieren zu können \nDie Studierenden durchleben die verschiedenen Phasen vor und während der aktiven \nTeilnahme an einer wissenschaftlichen Konferenz: \n● Call for Papers (CfP) \n● Einreichung der Arbeiten (submission) \n● Begutachtung der Arbeiten (peer review) \n● Benachrichtigung / Feedback (notification) \n● Einreichung der finalen Version (camera ready) \n● Präsentation des Papers (talk) \n● Sitzungsleiter (session chair)",
    "Vorraussetzungen": "Empfohlen:  \nGrundkenntnisse in IT Sicherheit \nEinführung in die Kryptographie \nPublic-Key Infrastrukturen",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nModulhandbuch B. Sc./M. Sc. Informatik  380 \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "J. Buchmann, E. Karatsiolis, and A. Wiesmaier. \"Introduction to Public Key Infrastructures\", \nSpringer-Verlag Berlin Heidelberg, 2013. ISBN: 978-3-642-40656-0 (Print) 978-3-642-\n40657-7 (Online)"
  },
  {
    "Modulname": "Computergestützte Planung und Navigation in der Medizin",
    "Modul Nr.": "20-00-0677",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Selbstständiges Studium aktueller Konferenz- und Journal-Papers aus dem Bereich Medical \nImaging zu einem ausgewählten Thema im Bereich der Planung und chirurgischen \nNavigation. \n- Kritische Auseinandersetzung mit dem behandelten Thema \n- Eigene weiterführende Literaturrecherchen \n- Erstellen eines Vortrags (schriftliche Ausarbeitung und Folienpräsentation) über die \nbehandelte Thematik \n- Präsentation des Vortrags vor Publikum mit heterogenem Vorwissen \n- Fachliche Diskussion über die behandelte Thematik nach dem Vortrag \nBehandelte Methoden, die in Zusammenhang mit der Operationsplanung und navigierten \nChirurgie stehen sind u.a.: Segmentierung, Registrierung, Visualisierung, Simulation, \nNavigation und Tracking.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. \nSie lernen die wesentlichen Aspekte der untersuchten Arbeiten zu erkennen und auf \nverständliche Weise einem heterogenen Publikum vorzutragen. Dabei wenden sie \nverschiedene Präsentationstechniken an. Nach dem Vortrag können die Studierenden aktiv \neine Fachdiskussion zu dem präsentierten Thema leiten und bestreiten.",
    "Vorraussetzungen": "Empfohlen: Bachelor ab 4. Semester, Master ab 1. Semester.",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen) \nModulhandbuch B. Sc./M. Sc. Informatik  382",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird zu Beginn der Veranstaltung bekanntgegeben."
  },
  {
    "Modulname": "Recommender Systems Seminar",
    "Modul Nr.": "20-00-0686",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- Eigenständiges Einarbeiten in ein Recommender System anhand von bereitgestellten \nwissenschaftlichen Arbeiten (i.d.R. englischsprachig) \n- Eigene darüber hinausgehende Literaturrecherchen, angeleitet von Betreuer \n- Interpretation und Einordnen der Ergebnisse der Literaturarbeit, zusammen mit    Betreuer \n- Erstellen vertiefenden Vortrags über die Thematik einschließlich Folienpräsentationen, \nangeleitet durch Betreuer \n- Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen \n- Fachdiskussion nach jedem Vortrag \n- Feedback an die Vortragenden zu den Vorträgen (u.a. betreffend Rhetorik, \nPräsentationstechniken) und zur Fachdiskussion",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. \nSie sind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie können über \nmehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und \nForschungsergebnisse übergreifend evaluieren. Sie können die wesentlichen Aspekte der \nuntersuchten Arbeiten erkennen und diese kompakt einem Publikum mit heterogenem \nVorwissensstand vortragen,  wobei sie dabei effektiv verschiedene Präsentationstechniken \nanwenden. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem \nvon ihnen präsentierten Thema bestreiten.",
    "Vorraussetzungen": "Empfohlen: Empfohlen wird der Besuch von Vorlesungen im Bereich maschinelles Lernen \nund Data-Mining",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  384 \nStudienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird jeweils an den State-of-the-Art angepasst"
  },
  {
    "Modulname": "Symbolische Ausführung",
    "Modul Nr.": "20-00-0702",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Symbolische Ausführung von Programmen ist eine fundamentale Analysetechnik, die u.a. die \nBasis von Testgenerierung, Compileroptimierung, Verifikation oder Visualisierung darstellt. In \nden letzten Jahren wurden darin bedeutende Fortschritte erzielt. Im Seminar werden die \nwichtigsten klassischen und neuen Arbeiten zur symbolischen Ausführung vorgestellt.",
    "Qualifikationsziele": "Verstehen was die Möglichkeiten und Grenzen dieser fundamentalen Programmanalysetechnik \nsind.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0702-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0702-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Aktuelle Themen zu Secure Usage",
    "Modul Nr.": "20-00-0712",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Bei der Verarbeitung vertraulicher Daten müssen üblicherweise Regularien beachtet werden, \ndie den Zugriff auf Daten einschränken und kontrollieren. Eine Art, solche Regularien zu \nformulieren, sind Richtlinien zur Zugriffskontrolle (z. B. Chinese Wall). Nutzungsrichtlinien \ngehen über Kontrollrichtlinien hinaus, indem sie nicht nur die Zugriffsrechte einschränken, \nsondern auch die Nutzungsbedingungen (z. B. für welchen Zweck, wie oft, in welchem \nZeitraum?). Zur Durchsetzung derartiger Regularien werden geeignete Mechanismen benötigt, \ninsbesondere im Kontext von nicht vertrauenswürdigem Code. \nIn diesem Seminar werden aktuelle Forschungsartikel präsentiert, die sich mit Sprachen für \nSicherheitsrichtlinien, statischer Verifikation für Richtlinienkonformität und \nDurchsetzungsmechanismen zur Laufzeit befassen.",
    "Qualifikationsziele": "Kenntnisse von Methoden und aktuellen Forschungsfragestellungen zum Thema \nNutzungskontrolle; Verbesserung der Fähigkeiten zum Lesen und Verstehen wissenschaftlicher \nArtikel; Fähigkeit wissenschaftliche Ergebnisse als solche zu erkennen und inhaltlich zu \nbewerten; Fähigkeit über wissenschaftliche Arbeiten und Ergebnisse schriftlich zu berichten; \nVerbesserung der Fähigkeit zum Präsentieren und Diskutieren wissenschaftlicher Projekte und \nErgebnisse",
    "Vorraussetzungen": "Empfohlen: \nInformatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen \numzugehen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  387 \n  [20-00-0712-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nKann nicht gemeinsam mit 20-00-0584-se eingebracht werden.",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0712-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Ausgewählte Themen in forensischer Linguistik",
    "Modul Nr.": "20-00-0714",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Im Seminar werden verschiedene Themen der Disziplin \"Forensische Linguistik\" behandelt, \nwelches ein Untergebiet der klassischen Forensik darstellt. Unter anderem werden in diesem \nSeminar die Themen: Autorschaftsbestimmung, Autorschafts/Stil-Verifikation, moderne \nPlagiarismus- als auch Profiling-Methoden besprochen bzw. behandelt. \nIn einer gemeinsamen Besprechung werden zunächst die zentralen Themen, Kernbegriffe \nsowie der aktuelle Stand der Forschung ausführlich diskutiert als auch ein Bezug zur Praxis \nhergestellt. Anschließend findet die Themenvergabe statt.",
    "Qualifikationsziele": "Die Studenten lernen Verfahren der forensischen Linguistik kennen. Dabei werden sowohl \ndie technischen Basisfunktionen wie Parsen von Texten oder maschinelles Lernen als auch \ndie eigentlichen forensischen Systeme zur Autorenerkennung und Autorenprofiling \nbetrachtet. Ziel ist es, die technischen Abläufe nachvollziehen zu können und einen \nÜberblick über den Stand der Technik und seiner Grenzen und Möglichkeiten zu erhalten. \nDas Resultat des Seminars: Die Teilnehmer sollen ein Paper (Umfang 7-10 Seiten) \nausarbeiten und dieses dann gegen Semesterende vortragen. Teamarbeit (2 Studenten) pro \nThema ist möglich.",
    "Vorraussetzungen": "Empfohlen: „Computersystemsicherheit“, „Informationsmanagement“, “Modellierung, \nSpezifikation und Semantik“ (optional).",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  389",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "- Dale Schuurmans Shaojun Wang Vlado Keselj, Fuchun Peng. Language Independent \nAuthorship Attribution using Character Level Language Models. In EACL ’03: Proceedings of \nthe tenth conference on European chapter of the Association for Computational Linguistics, \npages 267–274, Morristown, NJ, USA, 2003. Association for Computational Linguistics. \n- S. Argamon, M. Koppel, J. Pennebaker and J. Schler (2009), Automatically profiling \nthe author of an anonymous text, Communications of the ACM 52 (2), pages: 119–123. \n- Oren Halvani, Martin Steinebach, Domänenübergreifende profilbasierte Autorschafts-\nAttribution, D-A-CH Security 2012 - Bestandsaufnahme, Konzepte, Anwendungen, \nPerspektiven}, 2012, pages: 174-185 \n- M.Koppel, S. Argamon and A. Shimoni (2003), Automatically categorizing written texts by \nauthor gender, Literary and Linguistic Computing 17(4), November 2002, pp. 401-412. \n- J. Pennebaker (2011). The secret life of pronouns: What our words say about us. New \nYork: Bloomsbury Publishing, 2011. \n- Shlomo Argamon Eran Messeri Moshe Koppel, Jonathan Schler. Authorship Attribution \nwith \nThousands of Candidate Authors. In Proceedings of the 29th annual international ACM \nSIGIR \nconference on Research and development in information retrieval, SIGIR ’06, pages 659–\n660, \nNew York, NY, USA, 2006. ACM. \n- Arjun Mukherjee and Bing Liu. Improving Gender Classification of Blog Authors. In \nProceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, \nEMNLP ’10, pages 207–217, Stroudsburg, PA, USA, 2010. Association for Computational \nLinguistics."
  },
  {
    "Modulname": "Angewandte Themen der Computergraphik",
    "Modul Nr.": "20-00-0724",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Ausgewählte aktuelle Arbeiten aus Forschung und Literatur werden zur Bearbeitung \nausgegeben. \nDie Arbeiten stammen aus folgenden Feldern der Computergraphik: \n● Visualisierung / Rendering \n● Simulation \n● Geometrieverarbeitung und Modellierung \n● Semantik und 3D",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung einen Ausschnitt an \naktuellen Themen der Computergraphik. Sie können sich selbständig den Inhalt einer \nVeröffentlichung erarbeiten, die Problemstellung und den Lösungsansatz erkennen und \npräsentieren. Weiter sind sie in der Lage, Verbesserungspotenzial in den Arbeiten zu \nanalysieren und darzustellen.",
    "Vorraussetzungen": "Empfohlen: Vorkenntnisse in GDV oder Geom. Methoden CAD/CAE sind vorteilhaft",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  391",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird in der Veranstaltung bekanntgegeben."
  },
  {
    "Modulname": "Softwarearchitektur",
    "Modul Nr.": "20-00-0730",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Discussion of the current state of research in the area of software architectures. \nThis includes – among others: \n- (Semi-)automatic reverse engineering of software architectures. \n- Modeling software architectures \n- Enforcing software architectures \n- Architectural patterns \n- Architecture description languages (ADLs)",
    "Qualifikationsziele": "To understand the value of software architectures and to become familiar with basic software \narchitectures. \nTo become familiar with the latest research in the area of software architecture. \nEnabling students to write a short position paper on a current research topic and to give a \nfocused presentation on the same.",
    "Vorraussetzungen": "Empfohlen: \nThe student should have a good understanding of object-oriented design principles. The \nstudent should in particular be familiar with the content of the lectures: \n- Introduction to Software Engineering \n- Software Engineering Design and Construction",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0730-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  393",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehend der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0730-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Cyber Security Seminar",
    "Modul Nr.": "20-00-0756",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Englisch",
    "Lerninhalt": "Cyber-Sicherheit ist maßgeblich, um aktuelle Verfügbarkeit und Stabilität sicherzustellen, \nnicht nur von Internet-Anwendungen und Dienstleistungen, sondern auch von einer breiten \nPalette von Systemen, die mit dem Internet verbunden sind, wie Kraftwerke, \nWasserversorgung und mehr. Zentral für Cyber-Sicherheit sind „Advanced Persistent Threat“ \n(APT) Attacken. APT-Angriffe sind in der Regel aus einer Reihe von Schwachstellen, welche \nauf eine raffinierte Weise kombiniert sind. \nIn diesem Seminar untersuchen wir die Grundbausteine, welche die APT-Attacken sowie die \nTechniken und Methoden verwenden, um diese anzuwenden. Insbesondere werden wir \nThemen behandeln wie: Sicheres Routing, anonyme Kommunikation, Malware und Botnets, \nCloud-Sicherheit, die Sicherheit von Netzwerktechnologien (SDN und andere), Datenschutz, \nSicherheit in Sozialen Netzwerken, Denial-of-Service, Angriffe auf wichtige \nkryptographische Protokolle, verdeckte Kommunikation, SCADA Sicherheit \n(Steuerungsnetzwerke) und Funk-Sicherheit. \nDas Seminar wird die Erkennung und Vermeidung solcher Angriffe untersuchen sowie in \neinem kooperativen Ansatz die Erkennung von Angriffen betrachten. Wir werden dabei \naktuelle (vorgegebene) Forschungsergebnisse im Bereich Cyber-Sicherheit und APTs \ndiskutieren. \nStudenten wählen ein Paper aus einer demnächst auf dieser Seite verfügbaren Liste. Sie \nkönnen auch ein anderes Paper vorschlagen, solange es innerhalb der Bandbreite dieses \nSeminars liegt und vom Dozenten zugelassen wird. Die Veröffentlichungen stammen \nmeistens aus führenden Sicherheitskonferenzen (IEEE Security and Privacy, ACM CCS, \nUsenix Security, Esorics, NDSS) und Zeitschriften (ACM TISSEC, IEEE TDSC). \nJeder Student soll mit dem Dozent per E-Mail (auf FCFS Basis) einen Termin für die \nVorstellung des Papers sowie einen Vortrag vereinbaren. Eine Woche vor der Präsentation \nsendet der Student eine Kurzfassung sowie die Präsentationsfolien an den Dozenten; \nanhand dieser erläutert der Student sein Paper den anderen Seminarteilnehmern und \ndiskutiert es mit Ihnen.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. \nModulhandbuch B. Sc./M. Sc. Informatik  395 \nSie sind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie können über \nmehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und \nForschungsergebnisse übergreifend evaluieren. Sie können die wesentlichen Aspekte der \nuntersuchten Arbeiten erkennen und diese kompakt einem Publikum mit heterogenem \nVorwissensstand vortragen,  wobei sie dabei effektiv verschiedene Präsentationstechniken \nanwenden. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem \nvon ihnen präsentierten Thema bestreiten.",
    "Vorraussetzungen": "Empfohlen: Kenntnisse in Networking, Sicherheit, Kryptographie",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Eine erste Liste der Themen wird noch zum Beginn des neuen Semesters bekanntgegeben. \nEigene Themen können ebenso vorgeschlagen werden."
  },
  {
    "Modulname": "Decision Procedures",
    "Modul Nr.": "20-00-0774",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Automatisches Beweisen, insbesondere SMT, sind grundlegende Techniken für die statische \nAnalyse von Software. Sie werden in einer Vielzahl von statischen Analysewerkzeugen, wie \nz.B. in SDV (Microsoft), VCC oder Krakatoa, eingesetzt. \nDamit sie jedoch sinnvoll und erfolgreich in der Praxis angewendet werden können, müssen \nsie in der Lage sein Probleme zu behandeln für deren Lösung lineare und nicht-lineare \nArithmetik, Bitvektoren, Arrays, quantifizierte Formeln und weitere Theorien notwendig sind. \nIn diesem Seminar werden wir uns mit aktuellen (state-of-the-art) Entscheidungsprozeduren \nfür diese Theorien beschäftigen, sowie der Frage nachgehen wie diese kombiniert werden \nkönnen und deren Realisierung in Beweisern wie Z3.",
    "Qualifikationsziele": "Erwerb von Wissen über Entscheidungsprozeduren \nErwerb der Fähigkeit sich in ein komplexes Thema einzuarbeiten \nErwerb der Fähigkeit Forschungsarbeiten (Konferenzbeiträge, Journalartikel) zu lesen und zu \nverstehen \nErwerb der Fähigkeit komplexe Themen anderen Studierenden verständlich zu erklären \nVortragskompetenz",
    "Vorraussetzungen": "Empfohlen: \nGrundlegendes Wissen in Logik erster Stufe und zugehöriger Kalküle \nInteresse und Neugier am Thema",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0774-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  397",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehend der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0774-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "",
    "Literatur": ""
  },
  {
    "Modulname": "Secure Software Development",
    "Modul Nr.": "20-00-0777",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Englisch",
    "Lerninhalt": "Die Sicherheit von Software Systemen gewinnt zunehmend an Bedeutung. Das Ziel des \nKurses ist, Softwareentwicklern Kenntnisse und erste Erfahrungen zu ermöglichen, damit sie \nsichere Software entwickeln können. \nDie Hauptthemen sind: \n1- Secure software development life-cycle \n2- Threat modeling \n3- Risk assessment \n4- Security requirements \n5- Security architecture \n6- Secure coding standards \n7- Security code analysis \n8- Security testing \n9- Security code review \n10- Empirical analysis for secure software development \nStruktur des Kurses: \n1- Jeder Student erarbeitet und präsentiert einen Vortrag zu einem Thema seiner/ihrer \nWahl. Für jedes Thema stellen wir Research Paper zur Verfügung (in den meisten Fällen ein \noder zwei), die die Studenten zu ihrer Vorbereitung nutzen. \n2- Jeder Student schreibt eine Hausarbeit, die die Problematik eines der im Kurs \nbehandeltenThemen untersucht. Das Thema wird nach Absprache mit dem Lehrenden \nvergeben. \n3- Jeder Student präsentiert seine Hausarbeit im Kurs. \nNoten ergeben sich aus dem Vortrag, der regelmäßigen Teilnahme, Beteiligung im Kurs und \nder Hausarbeit. \nDie minimale Teilnehmerzahl beträgt 6 Teilnehmer.",
    "Qualifikationsziele": "Modulhandbuch B. Sc./M. Sc. Informatik  399 \nDie Studenten erlangen Wissen über die Methoden und Techniken der Entwicklung sicherer \nSoftware. Sie erlernen wie sie ihr Wissen entwickeln, Teilen und auch wie sie eine \nwissenschaftliche Problematik der sicheren Software Entwicklung untersuchen. Nach der \nTeilnahme an diesem Seminar werden die Studierenden die wichtigen Thematiken des \nsicheren Softwareentwurfs kennen, und werden jeweils einzelne Thematiken in diesem \nBereich vertieft haben. Studierende werden erlernt haben, eigenständig wissenschaftliche \nArbeiten zu verfassen und präsentieren.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Seminar: Aktuelle Werkzeuge für sprachbasierte Sicherheit",
    "Modul Nr.": "20-00-0779",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Englisch",
    "Lerninhalt": "● Eigenständiges Einarbeiten in ein aktuelles Thema aus dem Bereich Werkzeuge für \nsprachbasierte Sicherheit anhand von bereitgestellten wissenschaftlichen Arbeiten \n(englischsprachig) \n● Eigene darüber hinausgehende Literaturrecherchen, angeleitet durch Betreuer \n● Reflektion und Einordnen der Ergebnisse der Literaturarbeit, angeleitet von Betreuer \n● Erstellen eines Vortrags über die Thematik einschließlich Folienpräsentationen, angeleitet \ndurch Betreuer \n● Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen \n● Fachdiskussion basierend auf dem Vortrag \n● Feedback an die Vortragenden zu den Vorträgen (betreffend u.a. Rhetorik, \nPräsentationstechnik) und zur Fachdiskussion",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein aktuelles Thema anhand von wissenschaftlichen Veröffentlichungen \neinarbeiten. Sie sind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie \nkönnen über mehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und \nForschungsergebnisse übergreifend evaluieren. Sie können die wesentlichen Aspekte der \nuntersuchten Arbeiten erkennen und diese kompakt einem Publikum mit heterogenem \nVorwissensstand vortragen,  wobei sie dabei effektiv verschiedene Präsentationstechniken \nanwenden. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem \nvon ihnen präsentierten Thema bestreiten.",
    "Vorraussetzungen": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern \ndes Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und \nFähigkeit mit formalen Sprachen und Kalkülen umzugehen",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  401 \nStudienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben"
  },
  {
    "Modulname": "Weighted Automata",
    "Modul Nr.": "20-00-0782",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "-     Eigenständiges Einarbeiten in ein Thema aus dem Gebiet der endlichen Automaten anhand \nvon bereitgestellten wissenschaftlichen Arbeiten (i.d.R. englischsprachig) \n-     Eigene darüber hinausgehende Literaturrecherchen, angeleitet von Betreuer \n-     Interpretation und Einordnen der Ergebnisse der Literaturarbeit, zusammen mit    Betreuer \n-     Erstellen vertiefenden Vortrags über die Thematik einschließlich Folienpräsentationen, \nangeleitet durch Betreuer \n-     Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen \n-     Fachdiskussion nach jedem Vortrag \n-     Feedback an die Vortragenden zu den Vorträgen (u.a. betreffend Rhetorik, \nPräsentationstechniken) und zur Fachdiskussion",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich eigenständig \nin ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. Sie sind mit den \nverschiedenen Techniken der Literaturrecherche vertraut. Sie können über mehrere \nwissenschaftliche Arbeiten hinweg Techniken vergleichen und Forschungsergebnisse \nübergreifend evaluieren. Sie können die wesentlichen Aspekte der untersuchten Arbeiten \nerkennen und diese kompakt einem Publikum mit heterogenem Vorwissensstand vortragen,  \nwobei sie dabei effektiv verschiedene Präsentationstechniken anwenden. Nach dem Vortrag \nkönnen die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema \nbestreiten.",
    "Vorraussetzungen": "Empfohlen wird der Besuch von Vorlesungen im Bereich maschinelles Lernen und Data-Mining",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0782-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  403 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0782-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen \nStudiengängen verwendet werden.",
    "Literatur": "Wird jeweils an den State-of-the-Art angepasst"
  },
  {
    "Modulname": "Automatische Code Generierung",
    "Modul Nr.": "20-00-0790",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- Beispiele von Domänen spezifischen Sprachen \n- Automatisches Differenzieren \n- Automatische Erzeugung für an bestimmte Hardwarearchitekturen angepassten Code",
    "Qualifikationsziele": "- Grundkenntnisse über die Entwicklung und Verwendung von DSL. \n- Kennenlernen einiger Frameworks für DSL und zur Unterstützung des Model Driven Software \nDevelopments (MDSD). \n- Grundlagen des automatischen Differenzierens und dessen Implementierung",
    "Vorraussetzungen": "Empfohlen: \n- Grundlagen der Informatik 3 \n- Grundkenntnisse der Differentialalgebra im Hinblick auf Ableitungen (Kettenregel, \nGradienten, Jacobi-Matrix)",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0790-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0790-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%) \nModulhandbuch B. Sc./M. Sc. Informatik  405",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Langzeitsicherheit",
    "Modul Nr.": "20-00-0795",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Ausgewählte Themen in Bezug auf langzeitsichere Anwendungen. Der Schwerpunkt liegt auf \nden Gebieten Langzeitspeicherung vertraulicher Daten, Langzeitarchivierung (signierter) \nDokumente, verifizierbare Berechnungen und kryptographische Primitive für langzeitsichere \nAnwendungen.",
    "Qualifikationsziele": "Verstehen der Problemstellungen in den einzelnen Themengebieten, Verwendung der \nrelevanten Sicherheitsmodelle, selbstständiges Erarbeiten von Lösungsansätzen, Verfassen und \nPräsentieren wissenschaftlicher Publikationen.",
    "Vorraussetzungen": "Empfohlen: \nEinführung in die Kryptographie, ggf. Public-Key Infrastrukturen, ggf. Post-Quantum \nKryptographie",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0795-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0795-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nModulhandbuch B. Sc./M. Sc. Informatik  407 \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Typsysteme von Programmiersprachen",
    "Modul Nr.": "20-00-0796",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Typsysteme sind formale Methoden, die sicherstellen, dass sich Programme gemäß einer \nSpezifikation korrekt verhalten. Ihr Anwendungsgebiet ist breit gefächert und umfasst bspw. \nSoftwareentwicklung, Programmiersprachendesign und IT Sicherheit. \nDieses Seminar beschäftigt sich mit grundlegenden und aktuellen Forschungsthemen zu \nTypsystemen, zum Beispiel Dependent Types, Typinferenz, Verfahren zur Typprüfung, \nconstraint-basierte Ansätze usw.",
    "Qualifikationsziele": "Neben praktischen Erfahrungen im wissenschaftlichen Arbeiten erlangen die \nStudierenden ein tieferes Verständnis für aktuelle Entwicklungen und \nHerausforderungen in der Forschung an Typsystemen.",
    "Vorraussetzungen": "Empfohlen: Grundkenntnisse in Mathematik und formalen Methoden.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0796-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0796-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  409 \nB. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Seitenkanalangriffe gegen Software",
    "Modul Nr.": "20-00-0798",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In diesem Seminar sollen Forschungsartikel bezüglich verschiedener Aspekte von \nSeitenkanalangriffen gegen Software sowie entschpechender Gegenmaßnahmen diskutiert \nwerden; so beispielsweise: \n- Seitenkanalangriffe gegen kryptographische Software, \n- Seitenkanalangriffe gegen Webanwendungen, \n- Seitenkanalangriffe gegen Betriebssysteme, \n- Seitenkanalangriffe auf mobile Endgeräte, \n- Seitenkanalangriffe in der Cloud. \nSeitenkanäle sind indirekte, unbeabsichtigte Informationsflüsse, die durch die physikalische \nAusführung eines Computerprogramms aufgedeckt werden. Beispiele hierfür sind \nProgrammlaufzeit, Cache-Verhalten, Stromverbrauch, elektromagnetische Ausstrahlung usw. \nDa solche unbeabsichtigte Informationsflüsse mit geheimen Dateien wie z. B. privaten \nkryptographischen Schlüsseln korrelieren können, stellen Seitenkanäle ernste \nSicherheitsschwachstellen dar. Während eines Seitenkanalangriffs ist der Hacker in der Lage, \ndurch den Seitenkanal aufgedeckte Informationen zu sammeln, sie zu analysieren und anhand \ndieser Analyse die geheimen Dateien zu rekonstruieren. Da es dank neuer \nSicherheitsmechanismen fortwährend schwieriger wird, herkömmliche \nSicherheitsschwachstellen wie z. B. Programmfehler auszunutzen, werden Seitenkanäle für \nHacker immer interessanter.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an diesem Seminar kennen die Studierenden das Konzept von \nSeitenkanalangriffen gegen Software sowie dazugehörige Beispiele. Sie verstehen die \nErnsthaftigkeit der Problematik von Seitenkanälen sowie deren Verbreitung. Die Studierenden \nverbessern ihre Fähigkeit zum Lesen und Verstehen wissenschaftlicher Artikel, dem \nPräsentieren wissenschaftlicher Ergebnisse sowie zur Diskussion und Vergleich der Ansätze.",
    "Vorraussetzungen": "Modulhandbuch B. Sc./M. Sc. Informatik  411 \nEmpfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiengangs Informatik",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0798-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0798-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Weiterführende Themen im Maschinellen Lernen",
    "Modul Nr.": "20-00-0804",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Der Kurs richtet sich an Studierenden welche in der Endphase Ihres Master-Abschlusses sind \nund eine Promotion im maschinellen Lernen in Erwägung ziehen. \nAktuelle Artikel aus den Top-Konferenzen des maschinellen Lernens (NIPS, ICML, AIStats) \nwerden gemeinsam besprochen und Methoden re-implementiert.",
    "Qualifikationsziele": "Am Ende dieses Kurses verstehen Studierende die aktuellen Forschungsthemen im \nmaschinellen Lernen und sind in der Lage die Literaturvorstudie für eine Forschungsarbeit in \ndiesem Bereich durchzuführen.",
    "Vorraussetzungen": "Empfohlen: Vorherherige Belegung der Vorlesung \"Machine Learning: Statistische Methoden \n1\".",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0804-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0804-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  413 \nB. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Privatheit & Anonymität in einer vernetzten Welt",
    "Modul Nr.": "20-00-0807",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Im Rahmen dieses Seminars werden Privatsphäre und Sicherheit sowie Auswirkungen \nentstehender Technologien wie das „Internet der Dinge“ diskutiert. Insbesondere werden neue \nBedrohungen sowie verschiedene Angriffstechniken und entsprechende Gegenmaßnahmen \nbetrachtet. Beispiele von Themen sind: wearable privacy, smart cars privacy, device \nfingerprinting, in-store tracking, HTTP(s) Traffic analysis, privacy leaks in Android-Geräte, \ndata anonymization und differential privacy, transparency-enhancing technologies. Die \nSeminarteilnehmer bekommen ein Thema zugewiesen, sollen aktuelle Forschungsarbeiten \nlesen, den weiteren Teilnehmern vorstellen und in einer Seminararbeit zusammenfassen. Das \nprimäre Ziel des Seminars ist es, die Fähigkeit der Studenten zu verbessern, ein \nwissenschaftliches Thema zu bearbeiten, eine Präsentation ähnlich wie bei einer \nwissenschaftlichen Konferenz zu halten und eine wissenschaftliche Diskussion zu \nausgewählten Privacy-Forschungsthemen (mit-) zu gestalten. Die Studierenden simulieren die \nverschiedenen Phasen einer wissenschaftlichen Konferenz: Einreichung der Arbeiten, \nBegutachtung der Arbeiten, Feedback, Einreichung der finalen Version, Präsentation des \nPapiers und ggf. Sitzungsleitung.",
    "Qualifikationsziele": "Das Seminar richtet sich an Bachelor- und Masterstudenten die sich für das Thema Privatheit \nin der digitalen Welt interessieren. Sie sollten die Bereitschaft mitbringen, neue veröffentliche \nForschungsarbeiten zum Thema \"Privacy\" zu begutachten bzw. zu diskutieren.",
    "Vorraussetzungen": "Grundlegendes Verständnis der Computer-Sicherheit und Netzwerkprotokolle könnte hilfreich \nsein.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0807-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  415",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0807-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Seminar zu Software Engineering",
    "Modul Nr.": "20-00-0910",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- Eigenständiges Einarbeiten in ein Thema aus dem Umfeld der Technischen Informatik \nanhand von bereitgestellten wissenschaftlichen Arbeiten (i.d.R. englischsprachig) \n- Eigene darüber hinausgehende Literaturrecherchen, angeleitet von Betreuer \n- Interpretation und Einordnen der Ergebnisse der Literaturarbeit, zusammen mit Betreuer \n- Erstellen eines einführenden und eines vertiefenden Vortrags über die Thematik \neinschließlich Folienpräsentationen, angeleitet durch Betreuer \n- Halten der beiden Vorträge vor einem Publikum mit heterogenem Vorwissen \n- Fachdiskussion nach jedem Vortrag \n- Feedback an die Vortragenden zu den Vorträgen (u.a. betreffend Rhetorik, \nPräsentationstechniken) und zur Fachdiskussion",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. Sie \nsind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie können über \nmehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und Forschungsergebnisse \nübergreifend evaluieren. Sie können die wesentlichen Aspekte der untersuchten Arbeiten \nerkennen und diese kompakt einem Publikum mit heterogenem Vorwissensstand vortragen, \nwobei sie dabei effektiv verschiedene Präsentationstechniken anwenden. Nach dem Vortrag \nkönnen die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema \nbestreiten",
    "Vorraussetzungen": "Empfohlen:  \nBesuch der Vorlesungen „Digitaltechnik“, „Rechnerorganisation“ und „Architektur und \nEntwurf von Rechnersystemen“ bzw. entsprechende Kenntnisse aus anderen Studiengängen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  417 \n  [20-00-0910-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0910-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Distributed Software Systems \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben."
  },
  {
    "Modulname": "Seminar: Zuverlässige Softwaresicherheit",
    "Modul Nr.": "20-00-0912",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "- Eigenständiges Einarbeiten in ein Thema aus dem Bereich Zuverlässige Softwaresicherheit \nanhand von bereitgestellten wissenschaftlichen Arbeiten (englischsprachig) \n- Eigene darüber hinausgehende Literaturrecherchen, angeleitet durch Betreuer \n- Reflektion und Einordnen der Ergebnisse der Literaturarbeit, angeleitet von Betreuer \n- Erstellen eines Vortrags über die Thematik einschließlich Folienpräsentationen, angeleitet \ndurch Betreuer \n- Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen \n- Fachdiskussion basierend auf dem Vortrag \n- Feedback an die Vortragenden zu den Vorträgen (betreffend u.a. Rhetorik, \nPräsentationstechnik) und zur Fachdiskussion",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. Sie \nsind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie können über \nmehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und Forschungsergebnisse \nübergreifend evaluieren. Sie können die wesentlichen Aspekte der untersuchten Arbeiten \nerkennen und diese kompakt einem Publikum mit heterogenem Vorwissensstand vortragen, \nwobei sie dabei effektiv verschiedene Präsentationstechniken anwenden. Nach dem Vortrag \nkönnen die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema \nbestreiten.",
    "Vorraussetzungen": "Empfohlen: \nInformatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit \nmit formalen Sprachen und Kalkülen umzugehen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  419 \n  [20-00-0912-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0912-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 0%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben"
  },
  {
    "Modulname": "Seminar: Aktuelle Themen zu Speichermodellen für Mehrkernarchitekturen",
    "Modul Nr.": "20-00-0913",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "- Eigenständiges Einarbeiten in ein aktuelles Thema aus dem Bereich Speichermodelle anhand \nvon bereitgestellten wissenschaftlichen Arbeiten (englischsprachig) \n- Eigene darüber hinausgehende Literaturrecherchen, angeleitet durch Betreuer \n- Reflektion und Einordnen der Ergebnisse der Literaturarbeit, angeleitet von Betreuer \n- Erstellen eines Vortrags über die Thematik einschließlich Folienpräsentationen, angeleitet \ndurch Betreuer \n- Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen \n- Fachdiskussion basierend auf dem Vortrag \n- Feedback an die Vortragenden zu den Vorträgen (betreffend u.a. Rhetorik, \nPräsentationstechnik) und zur Fachdiskussion",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein aktuelles Thema anhand von wissenschaftlichen Veröffentlichungen \neinarbeiten. Sie sind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie \nkönnen über mehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und \nForschungsergebnisse übergreifend evaluieren. Sie können die wesentlichen Aspekte der \nuntersuchten Arbeiten erkennen und diese kompakt einem Publikum mit heterogenem \nVorwissensstand vortragen,  wobei sie dabei effektiv verschiedene Präsentationstechniken \nanwenden. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem von \nihnen präsentierten Thema bestreiten.",
    "Vorraussetzungen": "Empfohlen:  \nInformatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit \nmit formalen Sprachen und Kalkülen umzugehen \nModulhandbuch B. Sc./M. Sc. Informatik  421",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0913-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0913-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen \nStudiengängen verwendet werden.",
    "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben"
  },
  {
    "Modulname": "Seminar: Formale Spezifikation und Verifikation",
    "Modul Nr.": "20-00-0914",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "- Eigenständiges Einarbeiten in ein Thema aus dem Bereich Formale Spezifikation und \nVerifikation anhand von bereitgestellten wissenschaftlichen Arbeiten (englischsprachig) \n- Eigene darüber hinausgehende Literaturrecherchen, angeleitet durch Betreuer \n- Reflektion und Einordnen der Ergebnisse der Literaturarbeit, angeleitet von Betreuer \n- Erstellen eines Vortrags über die Thematik einschließlich Folienpräsentationen, angeleitet \ndurch Betreuer \n- Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen \n- Fachdiskussion basierend auf dem Vortrag \n- Feedback an die Vortragenden zu den Vorträgen (betreffend u.a. Rhetorik, \nPräsentationstechnik) und zur Fachdiskussion",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich \neigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. Sie \nsind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie können über \nmehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und Forschungsergebnisse \nübergreifend evaluieren. Sie können die wesentlichen Aspekte der untersuchten Arbeiten \nerkennen und diese kompakt einem Publikum mit heterogenem Vorwissensstand vortragen,  \nwobei sie dabei effektiv verschiedene Präsentationstechniken anwenden. Nach dem Vortrag \nkönnen die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema \nbestreiten.",
    "Vorraussetzungen": "Empfohlen: \nInformatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit \nmit formalen Sprachen und Kalkülen umzugehen \nModulhandbuch B. Sc./M. Sc. Informatik  423",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0914-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0914-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen \nStudiengängen verwendet werden.",
    "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben"
  },
  {
    "Modulname": "Sprachtechnologie Seminar",
    "Modul Nr.": "20-00-0915",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "90 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "In diesem Seminar diskutieren wir ein Thema aus der Sprachtechnologie, welches jedes Jahr \nwechselt. In der Vergangenheit gab es z.B. Semiante zum Crowdsourcing und zu \nunüberwachter Sprachverarbeitung. \nDas Seminar ist wie ein wissenschaftlicher Mini-Workshop organisiert: Nach einer \nEinführungsveranstaltung werden individuelle Themen sowie - falls vorhanden - bestehende \nSoftwarekomponenten verteilt. Studierende schreiben einen wissenschaftlichen Aufsatz, \nwelcher aus Literaturüberblick und der Beschreibung eines eigenen Experimentes besteht. Die \nAufsätze werden gegenseitig beurteilt. In einem finalen Workshop werden die Ergebnisse in \neiner 15-20-minütigen Präsentation der Gruppe vorgestellt. Herausragende Aufsätze werden zu \nnationalen oder internationalen Konferenzen eingereicht.",
    "Qualifikationsziele": "Nach Besuch dieser Veranstaltung können Studierende selbständig wissenschaftliche \nPublikationen erstellen. Sie erwerben fundierte Kenntnisse in wissenschaftlicher Arbeitsweise. \nFerner erwerben sie theoretische und praktische Kenntnisse in Sprachtechnologie.",
    "Vorraussetzungen": "Empfohlen: Besuch von NLP4Web und/oder Algorithms of Language Technology, Interesse am \nwissenschaftlichen Arbeiten",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0915-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  425 \n  [20-00-0915-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen \nStudiengängen verwendet werden.",
    "Literatur": "Wird zu Beginn bekanntgegeben, wechselt je nach Thema."
  },
  {
    "Modulname": "Seminar aus Künstlicher Intelligenz",
    "Modul Nr.": "20-00-0924",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Dieses Seminar dient zur Aufarbeitung neuerer Forschungsarbeiten im \nBereich der Künstlichen Intelligenz. Für jeden Seminar-Termin wird ein \nTeilnehmer ein Papier vortragen, welches dann von allen Teilnehmern \ndiskutiert wird. \nAusgewählt werden neuere Publikationen aus den relevanten Journalen und Konferenzen \nGebiets, insbesondere aus \"Artificial Intelligence\" und dem \"Journal of Artificial Intelligence \nResearch\". Es können aber oft auch (nach Rücksprache) auch eigene Themenvorschläge \nausgearbeitet werden. \nAchtung: Es wird empfohlen, sich bei der Adresse ke@informatik.tu-darmstadt.de \nvoranzumelden. Die Seminarplätze und Vortragsthemen werden in der ersten Vorbesprechung \nvergeben. \nBitte beachten Sie aktuelle Ankündigungen zu dieser Lehrveranstaltung \nunter http://www.ke.informatik.tu-darmstadt.de/lehre",
    "Qualifikationsziele": "- wissenschaftliches Vortragstraining \n- Arbeiten mit neuester Literatur im Bereich Künstliche Intelligenz \n- Eigenständige Diskussion über Themen der Künstlichen Intelligence",
    "Vorraussetzungen": "Empfohlen: Einführung in die Künstliche Intelligenz",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0924-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  427 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0924-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Grundlagen der Computersicherheit",
    "Modul Nr.": "20-00-0925",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In diesem Seminar sollen Forschungsartikel bezüglich verschiedener Aspekte von \nComputersicherheit und deren Grundlagen diskutiert werden; die Forschungsartikel \nbehandeln beispielsweise: \n- Sicherheitsmodelle und Sicherheitseigenschaften, \n- Angriffe und Angreifermodelle, \n- Komposition, Abstraktion und Verfeinerung im Kontext von Computersicherheit \n- Verifizierbare Sicherheit, \n- Quantifizierte Sicherheit, \n- Zugriffskontrolle und Verwendungskontrolle, \n- Sicherheitsmodelle und Sicherheitseigenschaften \n- Informationsflusskontrolle, und \n- Sprach-basierte Sicherheit. \nDie Grundlagen der Computersicherheit umfassen Theorien von Computersicherheit, formale \nModelle für diese Theorien und Techniken zur Verifikation von Computersicherheit. Dabei \nerleichtern Theorien das konzeptuelle Verständnis für Computersicherheit und für \nBedrohungen der Computersicherheit. Basierend auf diesem Verständnis bieten formale \nModelle ein Gerüst für die Spezifikation der gewünschten Sicherheitseigenschaften, für die \nDefinition des betrachteten Systems und für die eindeutige Definition der Annahmen an die \nSystemumgebung. Schließlich kann die Erfüllung der spezifizierten Sicherheitseigenschaften \ndurch eine Implementierung des Systems mit Hilfe von Techniken zur Verifikation sicher \ngestellt werden.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an diesem Seminar werden die Studierenden fähig sein aktuelle \nEntwicklungen in den Grundlagen der Computersicherheit mit Bezug zu formalen Methoden \nzu diskutieren. Des Weiteren, werden die Studierenden ihre Fähigkeit im Lesen und Verstehen \nwissenschaftlicher Artikel, im Präsentieren wissenschaftlicher Ergebnisse und im Diskutieren \nModulhandbuch B. Sc./M. Sc. Informatik  429 \nund Vergleichen formaler Ansätze der Computersicherheit und derer Implementierung \nverbessern.",
    "Vorraussetzungen": "Empfohlen: \nInformatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs \nInformatik.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0925-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0925-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Diskussionsseminar: Softwareproduktlinien",
    "Modul Nr.": "20-00-0930",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Heutzutage ist es nur noch selten möglich, dass es ein Softwaresystem alle erforderlichen \nAnwendungsfälle auf einmal erfüllt. Die meisten Systeme sind hoch konfigurierbar geworden, \num maßgeschneiderte Lösungen für die unterschiedlichsten Kundenanforderungen anbieten \nzu können. Es ist daher notwendig variable Software zu erzeugen, statt spezifische Produkte \nimmer wieder von Grund auf neuzuentwicklen. Durch das Auswählen der gewünschten \nFeatures werden dann die unterschiedlichsten Produkte generiert, man spricht hierbei von \nSoftware Produktlinien (SPLs). \nSPLs sind ein systematischer Ansatz wiederverwendbare Komponenten zu konfigurieren, um \nunterschiedliche -aber ähnliche- Produkte daraus zu erzeugen. Die erzeugte Software \nentspricht der gewählten Funktionalität des Benutzers. SPLs bieten etliche Vorteile wie \nbeispielsweise erhöhte Qualität und reduzierte Entwicklungszeiten, so dass sie bereits in vielen \nOpen-source Projekten (z.B. dem Linux Kernel, WordPress) ebenso wie in kommerziellen \nProjekten (e.g., Boeing, General Motors) eingesetzt werden. \nAus der Tatsache, dass mit SPLs Produktfamilien erzeugt werden, ergeben sich viele \ninteressante Fragestellungen: \n* Wie werden SPL Features und deren Abhängigkeiten modelliert? \n* Wie werden solche variablen oder hoch konfigurierbaren Systeme implementiert? \n* Wie analysiert man gleichzeitig alle möglichen Produkte und vermeidet dabei eine \nZustandsexplosion? \n* Wie entdeckt man Bugs/Anomalien/Inkonsistenzen in einer SPL? \n* Wie migriert man existierende Produkte zu einer SPL? \nIn diesem Kurs wirst Du Antworten auf diese Fragestellungen kennenlernen. Wir werden dafür \nwissenschaftliche Artikel lesen, die Dir sowohl das nötige Hintergrundwissen vermitteln, als \nauch den aktuellen Stand der Forschung nahebringen. \nKursformat \nEs handelt sich bei diesem Kurs um ein Diskussionsseminar mit wöchentlichen Treffen. In \njedem Treffen werden wir einen wissenschaftlichen Artikel diskutieren. Folgende Aktivitäten \nModulhandbuch B. Sc./M. Sc. Informatik  431 \nwerden dabei von Dir eingefordert: \n• Lesen eines wissenschaftlichen Artikels \n• Schreiben einer kurzen Zusammenfassung (max. 1 Seite) \n• Aktive Teilnahme an der Diskussion des Inhalts \nZusätzlich zu den wöchentlichen Aktivitäten ist es notwendig, dass Du am Ende der \nVeranstaltung ein Projekt zu einem verwandten Thema Deiner Wahl durchführst. Dein Projekt \nbeschäftigt sich mit einem offenen Problem, das Du im Laufe des Kurses in den gelesenen \nPublikationen erkannt hast, und beschreibt dafür einen Lösungsansatz. Du wirst dafür einen \nvierseitigen Artikel schreiben und eine Präsentation vorbereiten. Es wird erwartet, dass die \nPräsentation am Ende des Semesters vor der Gruppe vorgetragen wird.",
    "Qualifikationsziele": "- Machen Sie sich mit dem Software-Produktlinien Forschung vertraut sind \n- Erfahren Sie, wie eine wissenschaftliche Arbeit kritisch zu lesen \n- Erfahren Sie, wie in einer wissenschaftlichen Diskussion zu beteiligen \n- Erfahren Sie, wie eine wissenschaftliche Arbeit zu schreiben \n- Verbesserung der Präsentationsfähigkeiten",
    "Vorraussetzungen": "Empfohlen: Grundlegendes Software-Engineering-Wissen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0930-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \n• Diskussionsteilnahme (40%) \n• Zusammenfassungen (20%) \n• Abschlusspaper (25%) \n• Abschlusspräsentation (15%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0930-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Verifizierung von nebenläufiger, verteilter Software",
    "Modul Nr.": "20-00-0931",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "The seminar focuses on the study of modern lightweight verification techniques such as type \nsystems for concurrent, distributed programs. It will cover type systems for general distributed \nsystems and specific ones such cryptographic protocols, stream processing, multicore \ncomputing, multi-organisational applications and parallel computations. \nEach participant is required to give a talk about the topic chosen. This talk will be given \nduring a Block seminar at the end of the term. \nAll talks have to be 20 minutes long if given by a single person, and 30 minutes or 35 minutes \nwhen given by a group of two or three, respectively. (Each member of the group should have \nan equal share in it.) Please practice your talk several times; in particular, make sure that you \ndo not miss the time. \nConsequently, if a talk is shorter or longer, then this fact will have a (negative) impact on the \npresenters' grade. \nHow to give a good research talk by Simon L Peyton Jones, John Hughes, and John \nLaunchbury \n\\Term Paper\\ \nIn addition to giving scientific talks, we want to introduce you to the process of writing and \npublishing research papers. In other words: you will have to write a term paper. The following \nnotes may guide you in this process: \nIntroduction: You will introduce the background of the chosen topic, and summarise your \ncontributions of this paper. \nTheme: You will introduce the main contributions (e.g. process calculus, type system, \ncomparing different calculi, comparing different methods, etc..) that you established. \nConclusion: You conclude your work and what you have learned from this seminar. \nModulhandbuch B. Sc./M. Sc. Informatik  433 \nNote: \nYou should try to write the paper on your own words and examples. \nYou need to cite/quote the papers if you write similar sentences/ideas which appear in them. \nYou are not allowed to only copy others’ works. \nWe expect at least 2 to 3 related references done by every author. \nWe expect about 6 pages of the term paper if there is only one author. For a paper has 2-3 \nauthors, 8-10 pages of the term paper is expected. \nTo make the term papers' length comparable, all participants are required to use the ACM \nSIGPLAN Proceedings Template, preferably in its LaTeX incarnation (default font size, 9pt). \nReading a computer science research paper by Philip W.L. Fong",
    "Qualifikationsziele": "This course aims to give final year bachelor and master students necessary skills to understand \nconcepts of type systems in general and introduce modern type systems for concurrent, \ndistributed programming.",
    "Vorraussetzungen": "Empfohlen: Knowledge on the Pi-calculus certainly helps.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0931-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Pass exam (100%) \nThe overall grade for the seminar is determined by two factors: the talk given and the term \npaper handed in. Furthermore, we will consider your participation in the discussion following \neach talk. The two factors are weighted 35 : 65, respectively. \nPlease note that it is possible, due to the fact that each participants’ talks are graded \nindividually, that different members of a group are assigned different overall grades.",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0931-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  434 \nB. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Seminar über fortgeschrittene Computerarchitektur",
    "Modul Nr.": "20-00-0932",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Bei dieser Veranstaltung handelt es sich um ein klassisches Seminar zum aktuellen Stand der \nForschung zum Thema der Computerarchitektur. \nTeilnehmerinnen und Teilnehmer arbeiten sich anhand der Recherche und Lektüre von \nwissenschaftlichen Arbeiten in spezielle Unterthemen ein, stellen diese als Seminarvortrag vor \nund diskutieren dann in der Gruppe die Vor-/Nachteile der verschiedenen Sichtweisen",
    "Qualifikationsziele": "Einblicke in aktuelle Themen der Computerarchitektur, wissenschaftliches Arbeiten, Vortrag \nund Diskussion",
    "Vorraussetzungen": "Empfohlen: \nDigitaltechnik und Rechnerorganisation oder LE+RS, AER",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0932-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0932-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  436 \nB. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Privatsphäre-schützende Technologien",
    "Modul Nr.": "20-00-0935",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Daten sind das Öl des 21. Jahrhunderts und Benutzer hinterlassen immer mehr digitale \nSpuren, die von Firmen wie Facebook oder Google, sowie von Geheimdiensten \nzusammengetragen und ausgewertet werden. \nIn diesem Seminar wollen wir Techniken zum Schutz der Privatsphäre betrachten, die es \nerlauben sensitive Daten unter Verschlüsselung zu verarbeiten, ohne die Daten selbst Preis zu \ngeben. \nEs werden sowohl die theoretischen Hintergründe als auch die praktischen Aspekte solcher \nLösungen betrachtet. \nDie Studierenden wählen ein Thema und erhalten dazu ein oder zwei Publikationen, die sie in \neiner Ausarbeitung schriftlich zusammenfassen und in einem Vortrag vorstellen. \nMögliche Themen sind beispielsweise: \n- Privatsphäre-schützende biometrische Identifikation \n- Privatsphäre-schützende mobile Anwendungen, z.B. für Standort-abhängige Dienste \n- Privatsphäre-schützendes Herunterladen von Dateien, z.B. für Medizinische- oder Patent-\nDatenbanken (Private Information Retrieval) \n- Privatsphäre-schützendes Finden gemeinsamer Kontakte oder Kunden (Private Set \nIntersection) \n- Privatsphäre-schützendes Prüfen der Kreditwürdigkeit (Private Function Evaluation) \n- Privatsphäre-schützendes Datenbanksystem (Semi-Private Function Evaluation) \n- Representation von Funktionen als Daten (Universal Circuits) \n- Oblivious RAM in Privatsphären-schützenden Technologien (ORAM + Secure Computation) \n- Werkzeuge für Privatsphäre-schützende Anwendungen",
    "Qualifikationsziele": "Die Studierenden lernen aktuelle und praktikable Techniken zum Schutz der Privatsphäre.",
    "Vorraussetzungen": "Teilnahme an der Veranstaltung \"Einführung in die Kryptographie\" ist von Vorteil, aber nicht \nunbedingt notwendig.",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  438 \nBausteinbegleitende Prüfung: \n  [20-00-0935-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0935-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Historische Heimcomputer",
    "Modul Nr.": "20-00-0937",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Historische Heimrechner (z.B. C64, Atari ST) \n• Hardware-Architektur \n• Betriebssystem \n• Programmierumgebung \n• Software",
    "Qualifikationsziele": "• Historische Rechnerarchitekturen kennenlernen und ihren Einfluss bewerten \n• Literatur auswählen und analysieren \n• Verständliche Berichte formulieren \n• Übersichtliche Folien erstellen \n• Mündlich präsentieren",
    "Vorraussetzungen": "Empfohlen: Kennnisse in Rechnerarchitektur, Betriebssysteme, Programmierung",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0937-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0937-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  440 \nB. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Static Analysis Seminar",
    "Modul Nr.": "20-00-0942",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In der statischen Codeanalyse können verschiedene Fragen über ein gegebenes Programm \ngestellt werden: \nTerminiert ein Programm? Kann ein Pointer null sein? Wird ein Wert einer Variablen später \nim Programmfluss gelesen? Zeigen zwei Variablen x und y auf dieselbe Stelle im Heap? Wurde \nein \nSchleifenzähler vor seiner Nutzung initialisiert? Können geheime Daten von einem Angreifer \nabgefangen werden? Ruft eine Methode foo die Methode bar auf? Falls ja, welche Methode \nbar wird aufgerufen? \nNach dem Satz von Rice, sind die Antworten auf all diese Fragen nicht entscheidbar. Dennoch \nkann die statische Codeanalyse dazu genutzt werden, approximative Antworten auf die Fragen \nzu liefern. In den meisten Fällen sind die so zu treffenden Aussagen ausreichend, zum Beispiel \nnutzen viele Bug-Finding Tools, wie FindBugs, Techniken der statischen Analyse, um Bugs zu \nfinden. Aber auch in der Sicherheitsanalyse von Software wird statische Analyse zum \nEntdecken von Schwachstellen und Datenlecks benutzt (siehe AppScan, FlowDroid). \nIn diesem Kurs werden wir state-of-the-art Techniken der statischen Codeanalyse anhand von \nVeröffentlichungen der Forschung besprechen. \nKursaufbau \nEs gibt eine Liste an Veröffentlichungen, aus diesen kann jeder Teilnehmer sich ein Thema \naussuchen. In unserem zweiwöchigen Treffen werden die entsprechenden Themen in einer \n20-minütigen Präsentation vorgestellt. Jeder hat einen einseitigen Review des Papers \neinzureichen, die wir ebenfalls besprechen. Außerdem wird erwartet, dass jeder eine \n(anonyme) Bewertung der Präsentation schreibt, die der Präsentierende abschließend \nbewerten kann. Ziel des Seminar ist es, das übliche Vorgehen in der Forschung zu üben.",
    "Qualifikationsziele": "Das Seminar richtet sich an Masterstudenten und Bachelorstudenten \nin höheren Semestern, die sich für den Bereich Analyse von Software \ninteressieren. Sie sollten Bereitschaft mitbringen, neue veröffentliche Forschungsarbeiten zum \nThema „statische Codeanalyse“ zu begutachten, zu präsentieren und zu bewerten. \nModulhandbuch B. Sc./M. Sc. Informatik  442",
    "Vorraussetzungen": "Empfohlen: \nDie Studenten sollten grundlegende Programmierkenntnisse mitbringen. Grundlagen der \ntheoretischen Informatik sind vorteilhaft.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0942-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nBenotung \nPräsentation: 25 % (durch Lehrenden) \nPaper Bewertung: 30 % \nPräsentation Bewertung: 10 % (durch Studierende) \nTeilnahme: 30 % \nKommentare durch Präsentierenden: 5%",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0942-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Understanding Deep Learning for Natural Language Understanding",
    "Modul Nr.": "20-00-0944",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "In diesem Seminar werden aktuelle Arbeiten aus dem Bereich Deep Learning für das Verstehen \nnatürlicher Sprache behandelt, wobei sowohl unüberwachte als auch überwachte Ansätze \nbetrachtet werden. \nDer Schwerpunkt des Seminars liegt auf einer umfassenden Analyse der \nderzeit verwendeten Methoden, sowohl mit Hilfe einer Aufarbeitung der theoretischen \nGrundlagen als auch durch praktische Experimente mit kleinen Datensätzen und existierenden \nImplementierungen. \nEs werden Methoden zum Lernen semantischer Embeddings auf Wort-, Satz- und \nDokumentebene behandelt, Methoden zum Lernen von Embeddings von Wissensbasen, sowie \nneuronale Netzwerke die für Aufgaben des Maschinellen Lernens auf Satz- \nund Dokumentebene besonders relevant sind.",
    "Qualifikationsziele": "Arbeiten mit wissenschaftlicher Literatur und Befähigung zum Halten wissenschaftlicher \nVorträge. \nBenotet werden Präsentation der Arbeit, Teilnahme an der Diskussion und die schriftliche \nAusarbeitung des Vortrags.",
    "Vorraussetzungen": "Empfohlen: Besuch mind. einer der Veranstaltungen NLP4Web, Algorithms of Language \nTechnology, FoLT. Interesse am wissenschaftlichen Arbeiten.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0944-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  444 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0944-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Formale Spezifikation und deduktive Verifikation verteilter oder nebenläufiger Software",
    "Modul Nr.": "20-00-0952",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "In den letzten Jahren machte die Forschung im Bereich der Verifikation von sequentieller \nSoftware große Fortschritte insbes. auch im Hinblick auf die Behandlung realistischer \nProgramme. \nDie Verifikation nebenläufiger oder verteilter Systeme kann auf diese Fortschritte aufbauen. Es \ngibt inzwischen eine Vielzahl interessanter Ansätze zur Verifikation von verteilter oder \nnebenläufiger Software. \nIn diesem Seminar sollten die unterschiedlichen Ansätze und deren Anwendung vorgestellt \nwerden.",
    "Qualifikationsziele": "Erwerb von Wissen über die formale Spezifikation und Verifikation verteilter und mehrläufiger \nSoftware \nErwerb der Fähigkeit sich in ein komplexes Thema einzuarbeiten \nErwerb der Fähigkeit Forschungsarbeiten (Konferenzbeiträge, Journalartikel) zu lesen und zu \nverstehen \nErwerb der Fähigkeit komplexe Themen anderen Studierenden verständlich zu erklären \nVortragskompetenz",
    "Vorraussetzungen": "Empfohlen: \nGrundlegendes Wissen in den Gebieten: \ni) formalen Spezifikation sequentieller Programme \nii) deduktiver Verifikation (Hoare Kalkül, Dynamische Logik o.ä.) \nInteresse und Neugier am Thema \nModulhandbuch B. Sc./M. Sc. Informatik  446",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0952-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0952-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Parallele Algorithmen",
    "Modul Nr.": "20-00-0955",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Parallele Algorithmen und Parallelisierungstechniken \n• Methoden zur Komplexitätsanalyse \n• Parallele Basisalgorithmen (z.B. Sortieren, Matix-Multiplikation, Graphen) \n• Parallele Algorithmen aus speziellen Anwendungsgebieten (z.B. parallele Bildgenerierung, \nNumerik) \n• Parallele Entwurfsmuster",
    "Qualifikationsziele": "• Kennenlernen aktueller paralleler Algorithmen, sowohl von Basisalgorithmen wie auch \nAlgorithmen aus speziellen Anwendungsbereichen \n• Kennenlernen von Anwendungsbereichen paralleler Algorithmen \n• Literatur auswählen und analysieren \n• Verständliche Berichte formulieren \n• Übersichtliche Folien erstellen \n• Mündlich präsentieren",
    "Vorraussetzungen": "Empfohlen: \n• Kennnisse in Rechnerarchitektur, Programmierung, Grundlagen von parallelen Systemen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0955-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  448 \nBausteinbegleitende Prüfung:  \n  [20-00-0955-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Aktuelle Themen zu Nebenläufigkeit und Parallelität",
    "Modul Nr.": "20-00-0960",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In diesem Seminar werden Forschungsartikel zu verschiedenen Aspekten von Nebenläufigkeit \nund Parallelität diskutiert; die Forschungsartikel behandeln beispielsweise: \n- Semantik der Nebenläufigkeit (Interleaving-Sematik, Multicore-Semantik, Weak Memory \nModels), \n- Parallele Architekturen (Grundlagen von parallelen Architekturen, symmetrische \nMultiprozessorsysteme, Massenparallelrechner), \n- Parallele Programmierung (parallele Programmierungsmodelle, Kommunikation, \nSynchronisation), \n- Parallelisierung und Kompilierung (Voll-/Halbautomatische Parallelisierung, \nDatenabhängigkeiten, Lastverteilung), \n- Verifikation von nebenläufigen Programmen (Separation Logic, Rely/Guarantee Reasoning).",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an diesem Seminar werden die Studierenden fähig sein, aktuelle \nEntwicklungen in den Bereichen Nebenläufigkeit und Parallelität zu diskutieren. Des Weiteren \nwerden die Studierenden ihre Fähigkeiten im Lesen und Verstehen wissenschaftlicher Artikel \nund im Präsentieren, Diskutieren und Vergleichen wissenschaftlicher Ergebnisse verbessern.",
    "Vorraussetzungen": "Empfohlen: \nInformatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs \nInformatik.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0960-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  450 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0960-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Zivile Sicherheit",
    "Modul Nr.": "20-00-0961",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Unter dem Begriff \"zivile Sicherheit\" versteht man neben Katastrophenschutz und \nTerrorismusbekämpfung auch die Aspekte der Sicherheit, die einen direkten Bezug zum Bürger \nund dessen Alltag aufweisen. Sie ist also auch dann bedroht, wenn der Bürger im täglichen \nLeben eine latente Unsicherheit hinsichtlich gewöhnlicher Handlungen verspürt. \nIn dieser Veranstaltung werden drei ausgewählte Szenarien der zivilen Sicherheit adressiert, die \neinen Bezug zur IT haben: Medikamentenhandel über das Internet, Versicherungsbetrug und \nGeldwäsche sowie Handel mit Antiken aus Raubgrabungen über das Internet. Dabei sind \nsowohl die Methoden der Betrüger als auch die der Betrugsaufdeckung von Interesse. Basis für \ndiese Themen sind die BMBF Forschungsprogramme zur Wirtschaftskriminalität und zur \norganisierten Kriminalität. Es sollen Technologien entwickelt, Dunkelfeldforschung betrieben \nsowie interdisziplinäre Eigenschaften bezüglich beispielsweise Recht und Wirtschaft betrachtet \nwerden. \nDie Veranstaltung kombiniert Vorlesung und Seminar. Zu Beginn wird eine Einführung in die \nThematik gegeben, in welcher unter anderem internationale Sicherheitsstrategien, \ncomputerisierte Methoden der Aufdeckung von Betrugsfällen und Aspekte des Datenschutzes \nbehandelt werden. \nIn dem anschließenden Seminar werden einzelne Themen vertieft betrachtet, wie \nbeispielsweise: \n• Umschlagplätze für Medikamente im Internet \n• Bildmanipulationen als Grundlage für Versicherungsbetrug \n• Forensische Erkennung von Identitäten \n• Ähnlichkeitssuche: Welche Methoden für Bild und Text werden in der Praxis genutzt \n• Wie schützen sich Auktionsplattformen vor illegalen Angeboten? \nDie Vertiefung geschieht auf Basis empfohlener Publikationen, von denen ausgehend der \nTeilnehmer einen Seminarvortrag und eine begleitende Ausarbeitung erstellt und diese mit den \nübrigen Teilnehmern der Veranstaltung diskutiert.",
    "Qualifikationsziele": "- Erstellen von wissenschaftlichen Kurzvorträgen \n- Verwendung von Zitaten \n- Interdisziplinäre Sicherheitsbetrachtung \n- Einsatz von Methoden der Betrugserkennung",
    "Vorraussetzungen": "Modulhandbuch B. Sc./M. Sc. Informatik  452 \nEmpfohlen: \nHilfreich sind Grundkenntnisse in Internettechnologie und IT Security. \nFür einzelne Seminarthemen werden in der Veranstaltungen weitere Empfehlungen hinsichtlich \nder Vorkenntnisse ausgesprochen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0961-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0961-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "IT in der Grundlehre",
    "Modul Nr.": "20-00-0963",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Ausgewählte IT-basierte Konzepte für Vorlesung sowie Übungs-und Prüfungsbetrieb in \nLehrveranstaltungen mit großen, heterogenen Teilnehmergruppen.",
    "Qualifikationsziele": "Nach Besuch der Veranstaltung sind die Studierenden in der Lage, geeignete IT-basierte \nKonzepte für Vorlesung sowie Übungs-und Prüfungsbetrieb in Lehrveranstaltungen mit großen, \nheterogenen Teilnehmergruppen zu entwickeln und softwareseitig umzusetzen.",
    "Vorraussetzungen": "Empfohlen: FOP",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0963-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0963-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Rigorose und formale Analyse verlässlicher Software",
    "Modul Nr.": "20-00-0975",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Dieses Seminar behandelt Konzepte und Ideen formaler Methoden für eine rigorose Analyse \nverlässlicher Systeme. Es werden verschiedene Themen angeboten, z.B. statische Analyse und \nTrace-Analyse, symbolische Ausführung und formale Verifikation nebenläufiger Programme. \nBeim Einführungstreffen des Seminars werden die zur Verfügung stehenden Themen \npräsentiert. Jeder Teilnehmer bearbeitet ein Thema unter Aufsicht eines Betreuers. Am Ende \ndes Seminars ist eine schriftliche Ausarbeitung abzugeben und das bearbeitete Thema den \nübrigen Seminarteilnehmern in einem Vortrag zu präsentieren. \nWeitere Informationen sind unter https://www.deeds.informatik.tu-\ndarmstadt.de/deeds/teaching/courses/ zu finden.",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, haben Sie  \n- Einblick in die aktuelle Forschung zu formalen Methoden und Software-Verifikation \n- Fähigkeiten erworben, um selbstständig zu recherchieren, aktuelle Forschungsergebnisse in \neiner schriftlichen Ausarbeitung kritisch zu bewerten und in einem wissenschaftlichen Vortrag \nzu präsentieren",
    "Vorraussetzungen": "Empfohlen: \nGrundlegendes Verständnis formaler Methoden der Informatik \nSehr gute Englischkenntnisse (mündlich und schriftlich) \nErste Erfahrung im Lesen von wissenschaftlichen Artikeln \nKritisches Denken und Interesse an mathematischen Formalismen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0975-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  455 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0975-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Softwaretechnik für parallele Programme",
    "Modul Nr.": "20-00-0978",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Methoden, Werkzeuge und Prozesse der Softwareentwicklung für parallele Programme \n• Anforderungen an parallele Software \n• Parallele Entwurfsmuster \n• Performance Engineering \n• Erkennen und Beseitigen von Nebenläufigkeitsfehlern \n• Entwicklungswerkzeuge \n• Testen paralleler Programme \n• Betrieb und Scheduling paralleler Software (z.B. auf Clustern oder in Clouds)",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, haben Sie aktuelle \nSoftwaretechnikansätze für parallele Programme kennengelernt und sind in der Lage \n- Literatur auszuwählen und zu analysieren  \n- verständliche Berichte zu formulieren \n- übersichtliche Folien zu erstellen \n- mündlich zu präsentieren",
    "Vorraussetzungen": "Empfohlen: \n• Kennnisse in Rechnerarchitektur, Programmierung, Softwaretechnik, Grundlagen von \nparallelen Systemen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0978-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  457",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0978-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Modellierung und Analyse von Aktoren-basierten Softwaresystemen",
    "Modul Nr.": "20-00-0992",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Ansätze zur aktor-basierten Modellierung und formalen Analyse von Softwaresystemen: \n- Theorie \n- Modellierungssprachen \n- Analysen \n- Werkzeuge",
    "Qualifikationsziele": "- Wissen über das aktor-basierte Programmierparadigma \n- Wissen über die Modellierung und formale Analyse von Softwaresystemen \n- Durchdringung und Aufarbeitung von wissenschaftlichen Konferenzbeiträgen und \nJournalartikeln zum Seminarthema \n- Verständliche und organisierte Präsentation wissenschaftlicher Artikel",
    "Vorraussetzungen": "Empfohlen:  \nInteresse in formaler Grundkenntnisse in formalen Methoden und statischer Programmanalyse",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0992-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  459 \nBausteinbegleitende Prüfung:  \n  [20-00-0992-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Parallel Computing",
    "Modul Nr.": "20-00-0994",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Aktuelle Trends in der Parallelverarbeitung, z.B. \n• Neue Anwendungsfelder (z.B. Deep-Learning) \n• Neue parallele Programmiermodelle \n• Entwicklung paralleler Software für Smartphones \n• GPUs, Manycore-Architecturen \n• FPGAs \n• Architekturen für die Post-Moore-Ära \n• Parallele Dateisysteme \n• Neue parallele Algorithmen \n• Exascale-Computing \n• Cloud-Computing",
    "Qualifikationsziele": "• Kennenlernen aktueller Themen im Bereich Parallelverarbeitung \n• Literatur auswählen und analysieren \n• Verständliche Berichte formulieren \n• Übersichtliche Folien erstellen \n• Mündlich präsentieren \n• Anderen Teilnehmern Feedback geben",
    "Vorraussetzungen": "Empfohlen: \n• Kennnisse in Rechnerarchitektur, Programmierung, Softwaretechnik \n• Grundlagen paralleler Systeme",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0994-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  461 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0994-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Blockchain Technology",
    "Modul Nr.": "20-00-0997",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "In diesem Seminar wird den Teilnehmern ein wissenschaftlischer und praktischer Einblick in die \nrenommierte Blockchain Technologie gewährt. Diese Technologie gilt als eine der nächsten \ngroßen Innovationen mit einer Vielfalt an Anwendungsgebieten. Daher werden in diesem \nSeminar eine Reihe von Publikationen mit Bezug auf die Funktionsweise, ihre Implementierung \nund die potentialen Einsatzgebiete der Blockchain Technologie näher betrachtet.",
    "Qualifikationsziele": "Verstehen der Problemstellungen in den einzelnen Themengebieten, selbstständiges Erarbeiten \nvon Lösungsansätzen, Verfassen und Präsentieren wissenschaftlicher Publikationen.",
    "Vorraussetzungen": "Empfohlen: \nEinführung in die Kryptografie",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0997-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0997-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  463",
    "Literatur": ""
  },
  {
    "Modulname": "Interdisziplinäres Seminar zu Privacy and Trust",
    "Modul Nr.": "20-00-1002",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Inhaltliches Ziel des Seminars ist ein holistisches Verständnis der Themen Privatheit und \nVertrauen. Die Studierenden arbeiten in interdisziplinär ausgerichteten Gruppen an aktuellen \nForschungsthemen im Bereich Privatheit und Vertrauen mit besonderem Schwerpunkt auf \nwirtschaftliche, psychologische und technische Aspekte. \nZu Beginn des Semesters werden die möglichen Themen vorgestellt und es sind einführende \nFachvorträge zu den verschiedenen Sichtweisen auf Privatheit und Vertrauen geplant. Die \nStudierenden können sich ein Thema auswählen und werden dann in interdisziplinäre Gruppen \naufgeteilt. Von den Studierenden wird pro Gruppe eine gemeinsame Ausarbeitung zum \nThemenkomplex angefertigt und anschliessend präsentiert.",
    "Qualifikationsziele": "Die Studierenden erarbeiten selbstständig ein Verständnis für aktuelle wissenschaftliche \nPublikationen und setzen sich in der Gruppe kritisch mit dem Themenkomplex auseinander.",
    "Vorraussetzungen": "Empfohlen: \nDas Seminar richtet sich Masterstudenten, die sich für das Thema Privatheit und Vertrauen aus \neiner interdisziplinärer Sichtweise interessieren.  \nInteresse an interdisziplinären Fragestellungen und der Arbeit in interdisziplinär ausgerichteten \nGruppen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1002-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nVon Studiernden der Fachbereiche Rechts- und Wirtschaftswissenschaften und \nHumanwissenschaften wird zusätzlich die Durchführung einer kleinen empirischen Studie \nModulhandbuch B. Sc./M. Sc. Informatik  465 \nangesetzt, da diese 5 CP für den Besuch der Veranstaltung erwerben, während Studierende des \nFachbereichs Informatik lediglich eine Seminar-Leistung von 3 CP erbringen.",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1002-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Erweitertes Seminar Maschinelles Lernen und Data Mining",
    "Modul Nr.": "20-00-1003",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "90 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Dieses Erweiterte Seminar dient zur Aufarbeitung neuerer Forschungsarbeiten im Bereich des \nData Mining und des Maschinellen Lernens. Für jeden Seminar-Termin wird ein Teilnehmer ein \nPapier vortragen, welches dann von allen Teilnehmern diskutiert wird. Darüberhinaus werden \nnoch in Kleingruppen zusammendefassende Überblicksartikel geschrieben, die von anderen \nTeilnehmern in einem Peer Review Process begutachtet werden. \nBenotet werden die Vorbereitung und die Präsentation der Arbeit, die Teilnahme an der \nDiskussion, die schriftliche Ausarbeitung, sowie die erstellten Gutachten. \nAusgewählt werden neuere Publikationen aus den relevanten Journalen des Gebiets, \ninsbesondere aus den Journalen “Data Mining and Knowledge Discovery”, \"Machine Learning\", \nsowie \"Journal of Machine Learning Research\". Es können aber (nach Rücksprache) auch eigene \nThemenvorschläge ausgearbeitet werden. \nBitte beachten Sie unbedingt aktuelle Ankündigungen zu dieser Lehrveranstaltung unter \nhttp://www.ke.informatik.tu-darmstadt.de/lehre.",
    "Qualifikationsziele": "Nach diesem Seminar sollten Studierende in der Lage sein \n- einen unbekannten Text im Bereich des maschinellen Lernens selbständig aufzuarbeiten \n- eine Präsentation und eine schriftliche Zusammenfassung für ein Fachpublikum in diesem \nGebiet zu entwickeln \n- an einer Fachdiskussion über ein Thema aus dem Gebiet des maschinellen Lernens sinnvoll \nteilzunehmen \n- die Meinung über eine wissenschaftliche Arbeit in der Form eines schriftlichen Peer Reviews \nzu artikulieren",
    "Vorraussetzungen": "Empfohlen: \nModulhandbuch B. Sc./M. Sc. Informatik  467 \nGrundwissen in Machine Learning und Data Mining",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1003-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1003-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Aktuelle Themen zu Programmsemantiken",
    "Modul Nr.": "20-00-1009",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In diesem Seminar werden Forschungsartikel zu verschiedenen Aspekten von \nProgrammsemantiken diskutiert. Beispielthemen beinhalten: \n- sequentielle Programmsemantiken, \n- nebenläufige Programmsemantiken, \n- instrumentierte Programmsemantiken, \n- Testen von Programmsemantiken, und \n- Verifikation basierend auf Programmsemantiken. \nFormale Programmsemantiken werden genutzt um ein klares Verständnis von Eigenschaften \nvon Programm zu erreichen. Neben anderen Vorteilen erlauben solche Semantiken das Design \nund die Implementierung von Programmanalysen, die genutzt werden können um \nEigenschaften von Programmen zu verifizieren. Während die höhere Komplexität von \nProgrammiersprachen (z.B. Unterstützung von nebenläufigen und verteilten Systemen) \nformale Programmsemantiken noch wünschenswerter machen, führt diese Komplexität zu \nnoch größeren Herausforderungen in der Formalisierung von Programmsemantiken.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an diesem Seminar werden die Studierenden fähig sein, \naktuelle Entwicklungen im Bereich von Programmsemantiken zu diskutieren. Des Weiteren \nwerden die Studierenden ihre Fähigkeiten im Lesen und Verstehen wissenschaftlicher Artikel \nund im Präsentieren, Diskutieren und Vergleichen wissenschaftlicher Ergebnisse verbessern.",
    "Vorraussetzungen": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten vier Semestern \ndes Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und \nKalkülen umzugehen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1009-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  469",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1009-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Seminar Krisen-, Sicherheits- und Friedenstechnologien",
    "Modul Nr.": "20-00-1019",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "90 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Im Seminar werden fortgeschrittene theoretische Themen des Fachgebiets „Wissenschaft und \nTechnik für Frieden und Sicherheit“ (PEASEC) erarbeitet. Basierend auf einer \nEinführung/Wiederholung der Techniken wissenschaftlichen Arbeitens und einiger Grundlagen \nwerden fortgeschrittene Themen vergeben, die sich an der aktuellen Forschung orientieren. Im \nRahmen der Veranstaltung entstehende Arbeiten werden im Anschluss mithilfe eines Review-\nVerfahrens gegenseitig überprüft und anschließend überarbeitet. \n- Grundlagen: Friedens-, Konflikt- und Sicherheitsforschung \no Friedens- und Konfliktforschung \no Sicherheitsforschung und Informationssicherheit \n- Informatik in Militär, Krieg und Konflikten \no Militärische Nutzung von Informatik und Dual-Use-Problematik \no Cyberwar: Konflikte im Cyberraum mit Information Warfare, Fake News und Social Bots \no Terrorismus und terroristische Propaganda in sozialen Medien \n- Informatik für Frieden \no Mensch-Computer-Interaktion für Cyberpeace und zur Friedensförderung \no IT im Kontext politischer Aktivisten \no Bekämpfung terroristischer Propaganda in sozialen Medien \n- Sicherheitskritische Mensch-Computer-Interaktion \no Usable Safety-Engineering sicherheitskritischer interaktiver Systeme \no Recht, Ethik, Kultur \no Betriebliche Informationssysteme \no Krisenmanagementsysteme und Medizintechnik \no Warn- und Assistenzsysteme \no Soziale Medien \no Kooperationssysteme für Einsatzlagen \no Technologien für freiwillige Partizipation \nThemen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
    "Qualifikationsziele": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die technischen und \ntheoretischen Grundkonzepte für Frieden und Sicherheit. Insbesondere lernen sie: \n- Grundlagen der Friedens-, Konflikt-, und Sicherheitsforschung aus Blickwinkel der Informatik \n- Herausforderungen der IT-Gestaltung und –Nutzung im Kontext von Frieden und Sicherheit \nModulhandbuch B. Sc./M. Sc. Informatik  471 \n- Methoden zur Entwicklung sicherheitskritischer Mensch-Computer-Interaktion \n- Selbstständige Auseinandersetzung mit wissenschaftlichen Texten \n- Verfassen wissenschaftlicher Ausarbeitungen \n- Begutachtung wissenschaftlicher Texte",
    "Vorraussetzungen": "Empfohlen: \n- Grundlagen der Informatik oder Grundlagen der Konflikt- und Friedensforschung \n- Offen für Studierende der Informatik \n- Offen für Internationale Studien/Friedens- und Konfliktforschung (Naturwissenschaftlich-\ntechnische Dimension der Friedens- und Konfliktforschung -IS-MA-7) \n- Offen für Studierende anderer Fachgebiete, Anrechenbarkeit nach Absprache",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1019-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1019-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "Reuter, C. (2018) Sicherheitskritische Mensch-Computer-Interaktion: Interaktive Technologien \nund Soziale Medien im Krisen- und Sicherheitsmanagement, 660 S., Wiesbaden: Springer \nVieweg – im Druck \nAltmann, J., Bernhardt, U., Nixdorff, K., Ruhmann, I., & Wöhrle, D. (2016) Naturwissenschaft - \nRüstung - Frieden - Basiswissen für die Friedensforschung (Vol. 49), Wiesbaden: Springer \nVieweg.  \nFlick, U. (2015) Introducing Research Methodology. Sage Publications Ltd \nWeitere Literatur wird in der Veranstaltung je nach gewähltem Thema genannt."
  },
  {
    "Modulname": "Schutz von verteilten Infrastrukturen und Netzwerken",
    "Modul Nr.": "20-00-1022",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Seminar zum Schutz von verteilten Infrastrukturen und Netzwerken setzt sich aus der \nstrukturierten Arbeit an wissenschaftlichen Veröffentlichungen auseinander. Die Themen \nbefassen sich hierbei mit: \n- Vertrauen \n- Privatheit \n- Resilienz \nin Infrastrukturen und Netzwerken.",
    "Qualifikationsziele": "Studenten, die an dem Seminar teilnehmen, haben die Chance die Themen durch strukturierte \nForschung, näher kennen zu lernen. \nIhre Aufgabe wird es sein, aktuelle wissenschaftliche Veröffentlichungen zu verstehen, um \nderen Beitrag zu erklären. Außerdem muss ein Survey über das bearbeitete Thema verfasst \nwerden.",
    "Vorraussetzungen": "Empfohlen: \nGrundlegendes Verständnis von IT-Sicherheit und verteilten Systemen. \nVeranstaltungen: \nComputersystemsicherheit (CSS) \nComputer-Netzwerke und verteilte Systeme (CNuvS)",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1022-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  473",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1022-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik  \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Seminar Cyber-Sicherheit, -Krieg, und -Frieden",
    "Modul Nr.": "20-00-1024",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Im Seminar werden fortgeschrittene theoretische Themen des Fachgebiets „Wissenschaft und \nTechnik für Frieden und Sicherheit“ (PEASEC) erarbeitet. Basierend auf einer \nEinführung/Wiederholung der Techniken wissenschaftlichen Arbeitens und einiger Grundlagen \nwerden fortgeschrittene Themen vergeben, die sich an der aktuellen Forschung orientieren. Im \nRahmen der Veranstaltung entstehende Arbeiten werden im Anschluss mithilfe eines Review-\nVerfahrens gegenseitig überprüft und anschließend überarbeitet. \n- Grundlagen: Friedens-, Konflikt- und Sicherheitsforschung \no Friedens- und Konfliktforschung \no Sicherheitsforschung und Informationssicherheit \n- Informatik in Militär, Krieg und Konflikten \no Militärische Nutzung von Informatik und Dual-Use-Problematik \no Cyberwar: Konflikte im Cyberspace mit Information Warfare, Fake News und Social Bots \no Terrorismus und terroristische Propaganda in sozialen Medien \n- Informatik für Frieden \no Mensch-Computer-Interaktion für Cyberpeace und zur Friedensförderung \no IT im Kontext politischer Aktivisten \no Bekämpfung terroristischer Propaganda in sozialen Medien \n- Sicherheitskritische Mensch-Computer-Interaktion \no Usable Safety-Engineering sicherheitskritischer interaktiver Systeme \no Recht, Ethik, Kultur \no Betriebliche Informationssysteme \no Krisenmanagementsysteme und Medizintechnik \no Warn- und Assistenzsysteme \no Soziale Medien \no Kooperationssysteme für Einsatzlagen \no Technologien für freiwillige Partizipation \nThemen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
    "Qualifikationsziele": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die technischen und \ntheoretischen Grundkonzepte für Frieden und Sicherheit. Insbesondere lernen sie: \n- Grundlagen der Friedens-, Konflikt-, und Sicherheitsforschung aus Blickwinkel der Informatik \n- Herausforderungen der IT-Gestaltung und –Nutzung im Kontext von Frieden und Sicherheit \nModulhandbuch B. Sc./M. Sc. Informatik  475 \n- Methoden zur Entwicklung sicherheitskritischer Mensch-Computer-Interaktion \n- Selbstständige Auseinandersetzung mit wissenschaftlichen Texten \n- Verfassen wissenschaftlicher Ausarbeitungen \n- Begutachtung wissenschaftlicher Texte",
    "Vorraussetzungen": "Empfohlen: \nGrundlagen der Informatik oder Grundlagen der Konflikt- und Friedensforschung",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1024-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1024-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Grundlagen statischer Analysen",
    "Modul Nr.": "20-00-1028",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Die Grundlagen statischer Analysen, die zur Implementierung von fortgeschrittenen Qualitäts- \nund Sicherheitsanalysen gebraucht werden. \nExemplarische Auswahl der Themen: \n- Berechnung von Kontrol- und Datenabhängigkeiten in der Gegenwart von unendlichen \nSchleifen und nicht reduzierbarer Kontrollflussgraphen. \n- Slicing von Code \n- Identifikation von Schleifen in Machinencode \n- Konstruktion von Aufrufgraphen \n- Statische Analyse Frameworks (z.B., IDE, IFDS, Reactive Async) \n- \"Self-Adaptation\" und statische Analysen \n- Sound(iness) \n- Specification Mining",
    "Qualifikationsziele": "Die Studierenden werden vertraut sein mit den Grundlagen von fortgeschrittenen Analysen \nund werden in der Lage sein, die Angemessenheit bestimmter Techniken und Algorithmen für \nkonkrete Anwendungsfälle zu beurteilen. Die Studierenden werden weiterhin in der Lage sein \nfortgeschrittene, technische Themen im Bereich statische Analyse effektiv zu präsentieren.",
    "Vorraussetzungen": "Das Seminar richtet sich an fortgeschrittene Bachelor- und Masterstudierende. Vertrautheit \nmit den Grundlagen des Compilerbaus (z.B. SSA Form) ist sehr empfehlenswert.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1028-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  477 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1028-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Sichere Mehrparteienberechnungen",
    "Modul Nr.": "20-00-1030",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Mehrparteienberechnungen sind Berechnungen zwischen 2 oder mehr Usern, bei denen jeder \nUser eine Eingabe beiträgt und am Ende alle Benutzer das gleiche Ergebnis berechnen. Im \nInternet sind solche Berechnungen heutzutage allgegenwärtig: Benutzer und WLAN-Accesspoint \nhaben ein Passwort und möchten einen Schlüssel berechnen, um zukünftige Kommunikation \nabzusichern. Benutzer einer Kryptowährung wie Bitcoin haben unterschiedliche Versionen aller \nbisherigen Transaktionen und möchten zusammen herausfinden, welche Version zukünftig \nverwendet werden soll. \nExemplarische Auswahl der Themen: \n- Was ist sichere Mehrparteienberechnung? \n- Wie kann man mit blockchains Konsens erreichen? \n- Kryptographische Bausteine für sichere Mehrparteienberechnung (Garbled Circuits, \nblockchain, Oblivious Transfer). \n- Sichere Mehrparteienberechnung zur Verhinderung von Seitenkanalangriffen.",
    "Qualifikationsziele": "Die Studierenden lernen die theoretischen Grundlagen sicherer Mehrparteienberechnungen und \ndiverse Anwendungsbereiche im Detail kennen. Sie sind in der Lage, einen wissenschaftlichen \nArtikel aufzuarbeiten und zu präsentieren.",
    "Vorraussetzungen": "Empfohlen: \nDas Seminar richtet sich an Masterstudierende. Grundlagenvorlesung IT-Sicherheit oder \nGrundlagenwissen in Kryptografie sind empfehlenswert.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1030-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  479",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1030-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Performance Engineering",
    "Modul Nr.": "20-00-1038",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- Architektur & Eigenschaften von shared-memory multiprocessor(SMP) Maschinen \n- Messbarkeit & Verstaendnis von Performanz auf SMP Maschinen \n- Erste Erfahrung in der Benutzung von ausgewaehlten Performance Analyse Tools",
    "Qualifikationsziele": "- Verstaendnis der Performanzfaktoren und -indikatoren von SMP Plattformen: Compute Units, \nMemory Design, Synchronisation Protocols \n- Verstaendnis der Wichtigkeit vergleichbarer, nachvollziehbarer und reproduzierbarer \nMessergebnisse",
    "Vorraussetzungen": "Empfohlen: \nGrundlagen von C++ und OpenMP",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1038-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1038-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  481 \nB. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Maschinelles Lernen in Programmierwerkzeugen",
    "Modul Nr.": "20-00-1046",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Das Seminar behandelt aktuelle Forschung zum Verbessern von Software und deren \nEntwicklungsprozess durch maschinelles Lernen, z.B. durch Deep Learning. Wir werden \nwissenschaftliche Artikeln über Werkzeuge zum Verbessern der Zuverlässigkeit und Sicherheit \nvon Software diskutieren, welche auf maschinell gelernten Modellen von Code basieren. \nBeispiele für solche Werkzeuge sind Programmanalysen dem Finden von Programmierfehlern \noder zum automatischen Vervollständigen von Source Code. \nIn einem Kick-off Meeting zu Beginn des Semesters erhält jeder Studierende einen aktuellen \nwissenschaftlichen Artikel und arbeitet dann selbstständig an einem Term Paper der den Artikel \nzusammenfasst. Mentoren werden diesen Prozess in individuellen Treffen begleiten. In einer \nder letzten Semesterwochen findet ein halb- oder ganztägiger Workshop statt, in welchem jeder \nStudierende einen Vortrag über den jeweiligen Artikeln hält. Die Benotung erfolgt auf Basis des \nTerm Papers, des Vortrages und der aktiven Teilnahme am Workshop.",
    "Qualifikationsziele": "Im Seminar lernen Studierende wissenschaftliche Artikel zu verstehen und \nForschungsergebnisse in einem Vortrag zuvorstellen.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1046-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  483 \n  [20-00-1046-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Algorithmen und Plattformen des Reinforcement Learning",
    "Modul Nr.": "20-00-1050",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Im Rahmen dieses Seminars werden wir Reinforcement Learning Algorithmen und deren \nAnwendung in Intelligenten Technischen Systemen diskutieren. Hierbei sollen Studenten die \nFähigkeit erwerben, sich einen unbekannten Text selbstständig zu erarbeiten, für eine \nPräsentation aufzubereiten und einem Fachpublikum zu präsentieren.",
    "Qualifikationsziele": "Am Ende dieses Kurses verstehen Studierende die aktuellen Forschungsthemen im \nReinforcement Learning und sind in der Lage die Literaturvorstudie für eine Forschungsarbeit in \ndiesem Bereich durchzuführen.",
    "Vorraussetzungen": "Empfohlen: \nGleichzeitige Belegung der Vorlesung \"Reinforcement Learning: Von Grundlagen zu den Tiefen \nAnsätzen\" oder vorhergehende Belegung von \"Lernende Roboter.\"",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1050-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1050-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  485 \nB. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Zero Knowledge Beweissysteme",
    "Modul Nr.": "20-00-1052",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Zero Knowledge (ZK) Beweise sind Beweissysteme, mit denen ein Prover einem Verifier \ngegenüber die Wahrheit von Behauptungen wie z.B. \"Ich kenne eine Lösung für ein \nKreuzworträtsel\" beweisen kann, ohne aber die Lösung des Rätsels zu verraten. ZK Beweise \nfinden vielseitige Anwendung in der Kryptographie, beispielsweise im Bereich von sicherer \nVerschlüsselung und anonymen Kryptowährungen. In diesem Seminar lernen wir verschiedene \nArten von ZK Beweissystemen und deren Anwendungsmöglichkeiten kennen. \nExemplarische Auswahl der Themen: \n- Was sind ZK Beweise und welche Varianten gibt es? \n- Die Fiat-Shamir Transformation und nicht-interaktive Beweissysteme \n- Groth-Sahai Beweise \n- ZCash \n- Succint Arguments of Knowledge (SNARKs) und ihre Anwendungen \n- Das Verschlüsselungsverfahren von Naor und Yung",
    "Qualifikationsziele": "Die Studierenden lernen die theoretischen Grundlagen von Zero Knowledge Beweissystemen \nund diverse Anwendungsbereiche im Detail kennen. Sie sind in der Lage, einen \nwissenschaftlichen Artikel aufzuarbeiten und zu präsentieren.",
    "Vorraussetzungen": "Empfohlen: \nDas Seminar richtet sich an Masterstudierende. Grundlagenvorlesung IT-Sicherheit oder \nGrundlagenwissen in Kryptografie sind empfehlenswert.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1052-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  487",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1052-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Wertbasierte Qualitätskontrolle",
    "Modul Nr.": "20-00-1055",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Mit der Systementwicklung werden häufig primär wirtschaftliche Ziele (z. B. Kosten, Effizienz) \noder technische Kriterien (z. B. korrekte Funktionalität, Stabilität, Wartbarkeit) verfolgt. Durch \neinen Systemeinsatz sind in der Regel aber weitere Werte betroffen, z.B. Gesundheit. \ninformationelle Selbstbestimmung. Solche Werte werden auch in der Systemgestaltung \nberücksichtigt. Allerdings bleibt der Bezug dieser Werte zu den vorgeschlagenen Funktionen \nmeistens unscharf mit dem Effekt, dass später andere Interpretationen der Werte als \nKritikpunkte eingebracht werden. \nChristoph Hubig schlägt in seinem Artikel „Indikatorenpolitik“ vor, dass die Werte durch \nprüfbare Indikatoren so präzisiert werden sollen, dass für das geplante Systems entschieden \nwerden kann, ob sie erfüllt sind. Sind die Indikatoren (z.B.: NOx bei dem Wert Gesundheit, \nZugriff auf alle eigenen Daten beim Datenschutz) im „grünen Bereich“, dann sind nach \nVereinbarung auch die Werte erfüllt. \nDieser Ansatz ist in der Informatik für technikgetriebene Werte (wie Zuverlässigkeit, \nWartbarkeit usw.) üblich. Er wird aber für Werte der Stake Holder kaum verwendet. \nDie Indikatorenpolitik übertragen auf die Informatik bedeutet, dass in der Analysephase die \nErhebung der Werte durchgeführt wird und eine Einigung auf ein Wert-Indikatoren-Modell \nVoraussetzung für die Systementwicklung ist. \nDie formalen Teile des Werte-Indikatoren-Modells können in der UML dokumentiert werden. Es \nbietet sich an, auch die Prüfung des grünen Bereichs für die Indikatoren durch \nNachbedingungen in den Use Cases zu beschreiben. \nDieser Ansatz hat für die Software Entwicklung den Reiz, dass die Qualitätskontrolle der Werte \nsich direkt aus der Anforderungsanalyse ergibt. \nDas Thema des Seminars ist die Erprobung dieses Ansatzes an kleineren Projektideen. \nSeminarprogramm: \n• Recherche nach ähnlichen Ansätzen. \n• Systematik der Transformation des Werte-Indikatoren-Modells in Nachbedingungen \n• Beispiele, am besten aus dem eigenen Erfahrungsbereich \n• Entwicklung von Stereotypen für die Indikatorenprüfung",
    "Qualifikationsziele": "Neben den Standardzielen eines Seminars liegt der Schwerpunkt auf der kritischen Beurteilung \nvon Software-Entwicklungskonzepten \nModulhandbuch B. Sc./M. Sc. Informatik  489",
    "Vorraussetzungen": "Empfohlen: \nEigene Projekterfahrung im Bereich Anforderungsanalyse, erfolgreicher Abschluss der LV \nSoftware Engineering.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1055-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1055-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Erweitertes Seminar - Systems and Machine Learning",
    "Modul Nr.": "20-00-1057",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Dieses Seminar dient der Diskussion neuer Forschungspapiere im Zusammenhang von \nHardware-/Softwaresystemen und maschinellem Lernen (ML). Das Seminar zielt auf die \nVerbindungen zwischen diesen Themenbereichen ab und diskutiert Fragestellungen, die auf \npraktisch anwendbares maschinelles Lernen zugeschnitten sind wie z.B. Hardware-\nBeschleuniger für ML, verteilte skalierbare ML-Systeme, neuer Programmierparadigmen für ML, \nAutomatisiertes ML, sowie Anwendungen von ML für Systeme. \nJeder Teilnehmer präsentiert ein Forschungspapier, das anschließend von allen Teilnehmern \ndiskutiert wird. Darüber hinaus werden zusammenfassende Arbeiten in Gruppen verfasst und \neinem Peer-Review Prozess unterzogen. Die vorzustellenden Arbeiten stellen in der Regel \naktuelle Publikationen in relevanten Konferenzen und Zeitschriften dar. \nDas Seminar wird als Blockveranstaltung angeboten. Weitere Informationen unter: \nhttp://binnig.name",
    "Qualifikationsziele": "Nach diesem Seminar sollten Studierende in der Lage sein: \n- einen unbekannten Text aus den Bereichen des Seminars selbständig aufzuarbeiten \n- eine Präsentation und eine schriftliche Zusammenfassung für ein Fachpublikum in diesem \nGebiet zu entwickeln \n- an einer Fachdiskussion über ein Thema aus den Bereichen des Seminars sinnvoll \nteilzunehmen \n- die Meinung über eine wissenschaftliche Arbeit in der Form eines schriftlichen Peer-Reviews \nzu artikulieren",
    "Vorraussetzungen": "Empfohlen: Grundkenntnisse in maschinellem Lernen, skalierbares Datenmanagement und \nHardware-/Softwaresystemen.",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  491 \nBausteinbegleitende Prüfung: \n  [20-00-1057-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1057-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Binary Analysis Seminar",
    "Modul Nr.": "20-00-1063",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Thema ist sowohl die Auseinandersetzung mit Programmanalyse von nativem Code (z.B. x86, \nx64, arm64, ...) als auch das Kennenlernen von Werkzeugen in diesem Bereich. \nDie Studenten können ihr Thema aus einem vorgegebenem Themenpool wählen. \nFolgende Tätigkeiten sind Teil des Seminars: \n- Selbstständige Einarbeitung in ein Themengebiet der Programmanalyse \n- Erabeitung der Funktionsweise der Tools im jeweiligen Gebiet \n- Erstellung eines Vergleichs der Tools \n- Identifikation von Problemstellungen, die mit dem Ansatz gelöst werden können \n- Beispielhafte Implementation der identifizierten Problemstellungen \nVoraussichtliche Themengebiete: \n- Symbolic Execution \n- Dynamic Binary Instrumentation \n- Recompilation \n- Dynamic Taint Analysis \n- Fuzzing",
    "Qualifikationsziele": "Die Veranstaltung vermittelt dem Studenten ein Grundverständnis der Analyse von nativem \nCode. Zusätzlich wird durch den Vergleich der Werkzeuge die Fähigkeit des wissenschaftlichen \nArbeitens gefördert. Außerdem sammeln die Studenten praktische Erfahrungen im Umgang mit \ngängigen Analysewerkzeugen. Die Studenten sind nach der Veranstaltung in der Lage sich \nselbstständig in weitere ähnliche und komplexere Themen dieser Art einzuarbeiten.",
    "Vorraussetzungen": "Empfohlen: \nModulhandbuch B. Sc./M. Sc. Informatik  493 \n- Interesse an Programmanalyse, Schwachstellenidentifikation und Exploitation \n- Programmierkenntnisse in C, C++ und Assembly von Vorteil \n- Linux Kenntnisse",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1063-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard) \nBestehen der Prüfung (100%)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1063-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Bildungstechnologien",
    "Modul Nr.": "20-00-1065",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Seminar befasst sich mit aktuellen Technologien und Anwendungen, die für den \nBildungsbereich (Schule, Hochschule, Aus- und Weiterbildung) entwickelt bzw. in \nAnwendungen für Lernen und Lehren eingesetzt werden. Dazu werden im Seminar unter einem \nthematischen Schwerpunkt verschiedene aktuelle, hochwertige Forschungsarbeiten betrachtet. \nBeispielhafte Schwerpunkte des Seminars sind: Learning Analytics unter Nutzung von \nMaschinellen Lernen, Adaptivitätsmechanismen in Lernanwendungen, Lerner- bzw. \nUsermodellierung, Natural Language Processing zur Analyse von Lernartefakten, Augmented \nand Virtual Reality in Lernanwendungen, HCI Aspekte der Gestaltung von Lernanwendungen. \nJede/r Teilnehmer/in analysiert ein oder zwei wissenschaftliche Papier, fasst diese kritisch in \neiner schriftlichen Ausarbeitung zusammen und präsentiert die Papiere in einer \nBlockveranstaltung zu Ende des Semesters. Zusätzlich werden während des Semesters Beiträge \nanderer Studierender begutachtet. In der Blockveranstaltung diskutieren alle Teilnehmer/innen \ndie Beiträge. Benotet werden die Vorbereitung und die Präsentation der Arbeit, die schriftliche \nAusarbeitung, die Begutachtung sowie die Teilnahme an der Diskussion.",
    "Qualifikationsziele": "Das Lernziel besteht einerseits darin wissenschaftliche Publikationen, deren Aufbau und \nwissenschaftliche Methoden kennen, analysieren und anwenden zu lernen. Andererseits soll ein \nEinblick in aktuelle Technologien gewonnen werden und sollen diese auf ihren Einsatz im \nAnwendungsfeld Bildung hin beurteilt werden.",
    "Vorraussetzungen": "Empfohlen: Interesse an Bildungstechnologien",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1065-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  495",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1065-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Distributed Systems Programming: Seminar",
    "Modul Nr.": "20-00-1066",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Das \"DSP-Praktikum\" adressiert Forschungsthemen im Bereich von distributed systems (DS, \ndeutsch verteilten Anwendungen) und Programmiersprachen für DS. Die angebotenen Themen \nhängen von der aktuellen Forschung der DSP Gruppe ab und umfassen unter anderem: \n- Software-defined networking (SDN) \n- Network function virtualization (NFV) and in-network processing (INP) \n- Traffic engineering (TE) \n- Network monitoring \n- Resource management in datacenters (RMF) \n- Big data analytics (Spark, YARN, OpenStack, ..) \n- Event-based systems \n- Security in SDN, INP, and big data \n- Geo-distributed data processing \n- Compiler infrastructures for DS \n- Language abstractions for DS \n- Session types / calculi for DS \n- Network Protocols \nDie teilnehmenden Studierenden realisieren eine Seminararbeit welches zusammen mit dem \nBetreuer definiert wird.",
    "Qualifikationsziele": "Nach der Teilnahme am \"DSP-Seminar\" können Studierende technische und wissenschaftliche \nProbleme im Bereich DS aufarbeiten und präsentieren. \nJe nach ausgewähltem Thema erlernen Studierende folgende Kompetenzen: \n- Literaturrecherche im Themenbereich \n- Methodische Analyse und Auswertung von: \n- Modellen \n- Experimenten \n- Software \nModulhandbuch B. Sc./M. Sc. Informatik  497 \n- Schreiben von technischen Dokumenten oder Projektberichten \n- Erstellen und Vortragen eines Abschlussvortrages",
    "Vorraussetzungen": "Empfohlen: \nInteresse am Erarbeiten von Lösungsvorschlägen für herausfordernde Probleme im Bereich DS, \neigenverantwortliches arbeiten und ein großes Interesse an aktuellen Forschungsthemen. \nVorlesung TK1 (optional) \nDa die angebotenen Themen ein großes Themengebiet abdecken, sind die Anforderungen sehr \nverschieden und projektabhängig. Eine detaillierte Beschreibung der Themen als auch der \nAnforderungen wird in der ersten Vorlesung präsentiert und können anschließend von den \nStudenten ausgewählt werden.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1066-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1066-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Aktor-basierte Programmiersprachen",
    "Modul Nr.": "20-00-1074",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Im Zentrum des Seminars stehen Aktor-basierte Modellierungs- und Programmiersprachen wie \nScala/Akka, ABS, Encore, u.ä. \nTeilnehmer_innen dieses Seminars sollen einzelne Vertreter der Aktor-basierten Sprachen \nvorstellen, die realisierten Konzepte erklären und diskutieren.",
    "Qualifikationsziele": "* Fähigkeit ein wissenschaftliche Thema aufzuarbeiten und zu präsentieren \n* Fähigkeit wissenschaftliche Berichte zu lesen und verwandte Arbeiten zu recherchieren \n* Erwerb von Wissen über Aktor-basierte Sprachen und deren Anwendung",
    "Vorraussetzungen": "Interesse in Programmiersprachen und verteilten Systemen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1074-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1074-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  499 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Aktuelle Themen zu Modular Verification",
    "Modul Nr.": "20-00-1077",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Bei der Entwicklung von Softwaresystemen spielt Korrektheit eine entscheidende Rolle. Fehler \nin Softwaresystemen können nicht nur zu erhöhten Kosten führen, sondern im schlimmsten Fall \nsogar das Leben von Menschen gefährden (z.B. in Flugzeugen, Weltraumfahrzeugen, \nNuklearreaktoren, ...). Verifikation von Software ist eine Möglichkeit, die Abwesenheit von Bugs \nzu zeigen. \nEine Kernfrage hierbei ist, wie man die Skalierbar von formaler Verifikation und Testmethoden \nfür komplexe Systeme sicherstellt. Die Komplexität von Analysen kann von mehrere Faktoren \nabhängen, z.B. der Größe des Programms oder der Anzahl von parallelen Threads. Modulare \nVerifikation wirkt dieser Komplexität durch eine Zerlegung der Probelmstellung entgegen. \nEinzelne Softwarekomponenten werden unabhängig voneinander verifiziert und diese \nVerifikationsergebnisse werden dann zu Garantien für das gesamte System zusammengesetzt. \nDie Zusammensetzung von Verifikationsergebnissen muss durch Kompositionalitätsresultate \nunterstützt werden, damit die modulare Analyse aussagekräftig ist. \nIn diesem Seminar werden aktuelle Forschungsartikel, die verschiedene Techniken der \nmodularen Verifikation behandeln, präsentiert und im Detail diskutiert.",
    "Qualifikationsziele": "Die Studierenden können nach erfolgreicher Durchführung der Veranstaltung ausgewählte \nForschungsaktivitäten und -resultaten zu modular Verifikation diskutieren. Des Weiteren \nwerden sie ihre Fähigkeiten im Lesen und Verstehen wissenschaftliche Artikel, im Präsentieren \nwissenschaftlicher Resultate und im wissenschaftlichen Diskutieren weiterentwickeln.",
    "Vorraussetzungen": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen \numzugehen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  501 \n  [20-00-1077-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1077-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Fortgeschrittene Techniken der Softwareverifikation",
    "Modul Nr.": "20-00-1078",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Im Seminar befassen Sie sich mit Themen zu den aktuellen Forschungsinhalten der \nArbeitsgruppe Semantik und Verifikation paralleler System. Es werden sowohl klassische als \nauch aktuelle Forschungsarbeiten im Bereich Softwareverifikation (d.h. Model Checking, \nProgrammanalyse, Testen, etc.) behandelt. Die Themen des aktuellen Semesters entnehmen Sie \nbitte der Webseite der Lehrveranstaltung (https://www.informatik.tu-\ndarmstadt.de/svpsys/semantik_und_verifikation_paralleler_systeme_svpsys/lehre_svpsys/semin\nar_ftsv_svpsys/index.de.jsp). \nWährend des Seminars werden Sie unter Anleitung \n- sich auf Basis von vorgegebener und selbst gefundener, wissenschaftlicher Literatur in Ihr \nThema einarbeiten \n- einen Vortrag über Ihr Thema vorbereiten und vor den anderen Teilnehmern halten, um mit \nihnen anschließend über Ihr Thema zu diskutieren, \n- eine wissenschaftliche Ausarbeitung verfassen, die einen zusammenfassenden Überblick über \nIhr Thema gibt.",
    "Qualifikationsziele": "Nach erfolgreichem Abschluss des Seminars können sich die Studierenden anhand von \nAusgangsliteratur eigenständig in ein wissenschaftliches Thema einarbeiten und dieses Thema \neinem heterogenen Fachpublikum sowohl mündlich als auch schriftlich präsentieren. \nIm Detail können die Studierenden Methoden zur Literaturrecherche anwenden und die \nRelevanz von gefundener Literatur beurteilen. Sie können den wesentlichen Inhalt einer \nwissenschaftlichen Veröffentlichung ermitteln und diesen kritisch beurteilen. Außerdem sind sie \nin der Lage verschiedene wissenschaftliche Arbeiten miteinander zu vergleichen. In einem \nmündlichen Vortrag können die Studierenden ihr Thema und ihre Ergebnisse einem \nheterogenen Fachpublikum erklären und ihre Ergebnisse vor diesem Publikum verteidigen. \nZusätzlich können die Studierenden in einer schriftlichen Ausarbeitung ihr Thema und ihre \nErgebnisse beschreiben. \nModulhandbuch B. Sc./M. Sc. Informatik  503",
    "Vorraussetzungen": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiengangs Informatik \nHilfreich: Besuch einer Veranstaltung des Fachgebietes Semantik und Verifikation paralleler \nSysteme",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1078-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1078-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Deep Learning und Digital Humanities",
    "Modul Nr.": "20-00-1080",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Der Fokus des Seminars wird auf Humanities Anwendungen wie Gedicht-Generierung und \nAnalyse, Metaphern- und Emotions-Identifikation, etc. liegen, und wie diese mithilfe von Deep \nLearning gelöst werden können. Die Studenten werden Paper lesen und diese während des \nSeminars präsentieren.",
    "Qualifikationsziele": "Nach diesem Seminar werden Studenten dazu in der Lage sein: \n* Probleme aus dem Umfeld von Digital Humanities zu verstehen \n* verstehen, wie Deep Learning verwendet werden kann, um diese zu lösen \n* verstehen, wie man crowd-sourcing für Annotationen durchführt",
    "Vorraussetzungen": "VL Deep Learning ist hilfreich, aber nicht vorausgesetzt",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1080-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1080-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  505 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Meta-Science",
    "Modul Nr.": "20-00-1086",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Ausgehend von der gegenwärtigen Revolution im Bereich der künstlichen Intelligenz stellt sich \ndas Seminar die Frage, ob solche Revolutionen im Voraus vorhergesagt werden können. \nWeitere Fokusaspekte des Seminars sind: \n- Probleme und Aspekte von peer-reviewing \n- Vorhersage von Citation Counts \n- Schlechte Praktiken in der Forschung: biases in der Forschung, schlechter Aufbau von Studien, \nMissbrauch von Statistiken, falsche Behauptungen bzgl. der Qualtität einer \nMethode/Ansatz/Algorithmus \n- Zitations-Kartelle & Cliquen \n- Ethik in der Forschung, insbesondere self-citations und Formen von Betrügen",
    "Qualifikationsziele": "- Lernen von Methoden für Trend Prediction \n- Analyse und Diskussion wissenschaftilcher Praxis \n- generelles Methodenwissen z.B. aus complexity science oder machine learning",
    "Vorraussetzungen": "Mathematischer und/oder statistischer Hintegrund/Affinität ist hilfreich. \nTiefes Lernen (für Natural Language Processing) kann auch von Vorteil sein.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1086-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  507 \n  [20-00-1086-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Seitenkanalresistente Kryptographie",
    "Modul Nr.": "20-00-1088",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Traditionell sind kryptografische Verfahren sicher gegen sogenannte Black-Box-Angriffe. Bei \neinem Black-Box Angriff nutzt der Angreifer Schwachstellen des kryptographischen Algorithmus \naus, um die Sicherheit des Systems zu brechen. Bei praktischen Implementierung der \nkryptographischen Verfahren sind sogenannte Seitenkanalangriffe eine weitere kritische \nSicherheitsbedrohung. Unzählige Beispiele zeigen, dass fast alle heute verwendeten Geräte von \nSeitenkanalangriffen betroffen sind. Als Paul C. Kocher Ende der neunziger Jahre zeigte, dass \ndie Sicherheit von Smartcards mithilfe von Timing- oder Power-Analyse-Angriffen gebrochen \nwerden kann, wurden zahlreiche weitere Seitenkanalangriffe entdeckt. Vor kurzem haben \nBeispiele wie Foreshadow gezeigt, dass selbst komplexe Computersysteme anfällig für \nSeitenkanalangriffe sind. \n„Leakage Resilient Cryptography“ ist ein Forschungsbereich der Kryptographie, der diese \npraktischen Angriffe formalisiert, um formale Methoden zum Nachweis der Sicherheit gegen \nSeitenkanalangriffe zu verwenden. Insbesondere definiert es neue Sicherheitsmodelle, \nsogenannte Leakage-Modelle, die Seitenkanalangriffe in die klassischen Sicherheitsmodelle \neinbeziehen, und entwirft kryptografische Verfahren, die in ihnen nachweislich sicher sind.",
    "Qualifikationsziele": "Das Ziel des Seminars ist die Vermittlung der einflussreichsten Paper zu Seitenkanalangriffen \nund Leakage Resilient Kryptographie. Inhalte sind: \n- Seitenkanalangriffe (z. B. Power-Analyse-Angriffe, Timing-Angriffe, Foreshadow usw.) \n- gängige Gegenmaßnahmen gegen Seitenkanalangriffe (z. B. Kryptographie mit konstanter \nZeit, zufällige Ausführung, Maskierungsschemata, algorithmische Gegenmaßnahmen usw.) \n- Sicherheitsmodelle in der Leakage Resilient Kryptographie und formale Sicherheitsanalysen \nvon Gegenmaßnahmen für Seitenkanalangriffe",
    "Vorraussetzungen": "Das Seminar richtet sich an Master-Studenten. \nGrundvorlesung IT-Sicherheit oder Grundkenntnisse in Kryptographie werden empfohlen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  509 \n  [20-00-1088-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1088-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "New Trends in Secure Software Engineering",
    "Modul Nr.": "20-00-1089",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Mit SDL (Secure Development Lifecycle), das mittlerweile in der Branche weit verbreitet ist, hat \nMicrosoft vor über 20 Jahren einen wichtigen Schritt in Richtung Secure Software Engineering \ndefiniert.In den letzten Jahren und insbesondere auch durch die Softwareanwendungen in IoT, \nSmart Cars und Industrie 4.0, wodurch Technologien wie 5G ermöglicht werden, wird es immer \noffensichtlicher, dass dies bei weitem nicht ausreicht. In diesem Seminar wollen wir den \naktuellen Stand von Secure Software Engineering untersuchen. Wir beginnen hier mit Ross \nAndersons aktuell umgeschriebenen Buch von Ross \"Security Engineering\" \n(https://www.cl.cam.ac.uk/~rja14/book.html), 3. Ausgabe und schauen uns ein paar der \nneuesten Forschungen an, die diese Anforderungen unterstützen. \nDieses Seminar soll auch die Anwendbarkeit in der Industrie herausarbeiten und die Grenzen \nfür die jeweiligen Ansätze aus theoretischer und praktischer Dimension beschreiben.",
    "Qualifikationsziele": "Sie lernen, wie Sie in ein wissenschaftliches Thema eintauchen, eine Präsentation vorbereiten, \ndie den Anforderungen einer wissenschaftlichen Konferenz entspricht, und Führen einer \nwissenschaftlichen Diskussion. Sie lernen auch, wie Sie die Thematik für ein \nbranchenorientiertes Publikum aufbereiten und die Anwendbarkeit für die Industrie dabei zu \nberücksichtigen.",
    "Vorraussetzungen": "-",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1089-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  511",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1089-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Angreifermodelle in der IT-Sicherheit",
    "Modul Nr.": "20-00-1091",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Bei der Einschätzung der Sicherheit von IT Systemen ist es notwendig, die Fähigkeiten und \nAbsichten von potenziellen Angreifern zu berücksichtigen. Der Zweck von Angreifermodellen ist \nes, die Fähigkeiten, Ziele, oder andere Aspekte von Angreifern explizit zu machen. Formal \nfundierte Angreifermodelle erlauben es, die Präzision zu erhöhen, Unklarheiten zu vermeiden \nund eine Basis für automatisierte Sicherheitsanalysen zu schaffen. Sprachen für \nAngreifermodelle gehen oft mit graphischen Notationen zur Veranschaulichung einher, die das \nVerstehen der Modelle und den Aufbau von Intuition vereinfacht. \nAngreifermodelle genießen eine weite Verbreitung in der industriellen Praxis und sind der \nGegenstand von intensiven Forschungsvorhaben. Sicherheitsanalysen, die auf \nAngreifermodellen aufbauen, sind nicht auf eine Einschätzung des Sicherheitsgrades von \nSystemen beschränkt, sondern können auch als Grundlage für wirtschaftliche Entscheidungen \nherangezogen werden, bspw. um den erwarteten Nutzen von Sicherheitsinvestitionen zu \nmaximieren.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an diesem Seminar werden die Studierenden fähig sein, aktuelle \nEntwicklungen im Bereich Angreifermodelle zu diskutieren. Des Weiteren werden die \nStudierenden ihre Fähigkeiten im Lesen und Verstehen wissenschaftlicher Artikel und im \nPräsentieren, Diskutieren und Vergleichen wissenschaftlicher Ergebnisse verbessern.",
    "Vorraussetzungen": "Empfohlen werden Informatik- und Mathematikkenntnisse entsprechend den ersten 4 \nSemestern des Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen \nund Kalkülen umzugehen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1091-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  513",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1091-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Aktuelle Themen aus dem Bereich Concurrency Theory",
    "Modul Nr.": "20-00-1093",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Moderne Software-Systeme sind verteilt und Abhängig von Kommunikation. Dies führt zu \nzusätzlichen Problem bei der Verifikation solcher Systeme, mit denen sich das Forschungsgebiet \nConcurrency Theory beschäftigt. Hier werden verschiedene Methoden zur Modellierung, \nSimulation und Analyse verteilter Systeme untersucht. Der Bereich der Modellierungssprachen \numfasst graphische Modelle so wie Petrinetze oder Event Structures genauso wie \nProgramiersprachen nahe Modelle wie z.B. Prozesskalküle. Um solche Systeme zu analysieren, \nwurden verschiedene Techniken so wie Typsysteme, Model Checking und interaktives \nTheorembeweisen auf die speziellen Ansprüche verteilter Systeme angepasst und vielle neue \nTechniken wurden entwickelt. In diesem Seminar werden aktuelle Forschungspapier aus dem \nBereich Concurrency Theory vorgestellt und diskutiert.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme haben Studierende eine Vorstellung von den aktuell bearbeiteten \nThemen im Bereich Concurrency Theory. Sie können Resultate aus diesem Bereich präsentieren \nund die Vorteile der präsentierten Methoden kritisch hinterfragen. Die Vorstellung der \nvorliegenden Resultate wird ihnen dabei helfen ihre eigenen Arbeiten klar darzustellen und zu \nverteidigen.",
    "Vorraussetzungen": "Empfohlen werden Informatik- und Mathematikkenntnisse entsprechend den ersten 4 \nSemestern des Bachelorstudiengangs Informatik, insbesondere formalen Sprachen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1093-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  515",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1093-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Digitale Souveränität",
    "Modul Nr.": "20-00-1095",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Das Seminar beschäftigt sich mit den technologischen Aspekten \"Digitaler Souveränität\". Dazu \nzählen z.B. die \"Vendor Lock-in\" Problematik, aber auch die Diskussion über die Beteiligung von \nHuawei beim Aufbau des 5G Netzes.",
    "Qualifikationsziele": "Das Seminar wird in Form einer Konferenz abgehalten. Die Studierenden lernen das Anfertigen \neines wissenschaftlichen Textes und üben die Präsentation vor einem Publikum.",
    "Vorraussetzungen": "Interesse am wissenschaftlichen Arbeiten.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1095-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%).",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1095-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "Modulhandbuch B. Sc./M. Sc. Informatik  517"
  },
  {
    "Modulname": "Software-Engineering für Künstliche Intelligenz",
    "Modul Nr.": "20-00-1097",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "60 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Künstliche Intelligenz (KI) ist mittlerweile Bestandteil vieler datengetriebenen Anwendungen; \nzum Beispiel in der Finanzindustrie, Medizin, Kognitionswissenschaft oder Biologie. Derartige \nAnsätze des maschinellen Lernens (ML) erfordern eine genaue Domänen- und \nAnforderungsanalyse, angemessenes Softwaredesign und -Entwicklung, besonderes Testen und \nDebugging sowie spezielle Techniken, um Skalierbarkeit und Wartbarkeit sicherzustellen. \nWährend KI-Systeme zunehmend größeren Einfluss in vielen Bereichen besitzen, verwenden \nEntwickler und Data-Scientists weiterhin Methoden (Scripting, informelle/nicht-verschriftlichte \nSpezifikationen, trial-and-error Testing), die nicht dem aktuellen Stand der Technik in den \nIngenieursdisziplinen entsprechen. Vor diesem Hintergrund ist es von entscheidender \nBedeutung die Jahrzehnte lange Entwicklung im Software-Engineering (SE) zur \nSystematisierung von Entwicklungsprozessen für diesen Bereich zu nutzen. \nIn diesem Kurs wird Studierenden ein Thema im Bereich SE für KI zugewiesen. Ausgehend von \nvorgegebenen Quellen und persönlicher erweiternder Literaturrecherche bereiten Studierende \neine Präsentation mit anschließender Diskussion vor. Diese werden an regelmäßigen Terminen \ngehalten. Alle Studierenden, die an einem Termin nicht präsentieren, bereiten sich auf die \njeweilige Diskussion mit einführendem Lesematerial vor. Die Benotung basiert auf der \nVorbereitung und der Präsentation der zugewiesenen Themenschwerpunkte sowie auf der \nTeilnahme an allen Diskussionen. \nBeachten Sie bitte die Kursseite für mehr Informationen und Ankündigungen: \nhttps://allprojects.github.io/SE4AI/",
    "Qualifikationsziele": "Die Studenten entwickeln ein tieferes Verständnis zu SE für KI. Dies umfasst die Schwerpunkte \nRequirements Engineering, Qualitätssicherung, Entwicklungsprozesse sowie \nSoftwarearchitektur und -Design für Modularität, Wiederverwendbarkeit, Effizienz, \nSkalierbarkeit, Fairness und Privatsphäre. \nDie Studierenden lernen die Vorbereitung und Präsentation von wissenschaftlichen Inhalten für \nModulhandbuch B. Sc./M. Sc. Informatik  519 \nein Publikum mit unterschiedlichem Hintergrundwissen. Außerdem üben die Studierenden die \neffiziente Vorbereitung von und aktive Teilnahme an wissenschaftlichen Diskussionen sowie \nderen Moderation.",
    "Vorraussetzungen": "Empfohlen: Basiswissen zu Software-Engineering. Interesse an Künstlicher Intelligenz.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1097-se] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%).",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1097-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Seminar Multimedia Kommunikation II",
    "Modul Nr.": "18-sm-2090",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "90 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Seminar befasst sich mit aktuellen und aufkommenden Trends, die als relevant für die \nzukünftige Entwicklung von Multimedia Kommunikationssystemen eingeschätzt werden. \nLernziel ist es, Kenntnisse über zukünftige Forschungstrends im verschiedenen Bereichen zu \nerarbeiten. Hierzu erfolgt eine ausführliche Literaturarbeit, die Zusammenfassung sowie die \nPräsentation von ausgewählten, hochwertigen Forschungsarbeiten aus aktuellen Top-\nZeitschriften, -Magazinen und -Konferenzen im Themenfeld Multimedia Kommunikation. \nMögliche Themen sind: \n- Knowledge & Educational Technologies \n- Self organizing Systems & Overlay Communication \n- Mobile Systems & Sensor Networking \n- Service-oriented Computing \n- Multimedia Technologies & Serious Games",
    "Qualifikationsziele": "Die Studierenden erarbeiten sich an Hand von aktuellen wissenschaftlichen Artikeln, \nStandards und Fachbüchern tiefe Kenntnisse über Multimedia Kommunikationssysteme und \nAnwendungen, welche die Zukunft des Internet bestimmen. Dabei werden Kompetenzen in \nfolgenden Gebieten erworben: \n- Suchen und Bewerten von relevanter wissenschaftlicher Literatur \n- Analysieren und Einschätzen von komplexen technischen und wissenschaftlichen \nInformationen \n- Schreiben von technischen und wissenschaftlichen Zusammenfassungen \n- Präsentation von technischer und wissenschaftlicher Information \nModulhandbuch B. Sc./M. Sc. Informatik  521",
    "Vorraussetzungen": "Empfohlen: Solide Kenntnisse in Computer Kommunikationsnetzen. Die Vorlesungen \nKommunikationsnetze I und II werden empfohlen.",
    "Prüfungsform": "Studienleistung",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "CS, Wi-CS, ETiT, Wi-ETiT, MSc CS, MSc ETiT, MSc iST",
    "Literatur": "Entsprechend des gewählten Themenbereichs (ausgewählte Artikel aus Journalen, Magazine \nund Konferenzen)."
  },
  {
    "Modulname": "Seminar Multimedia Kommunikation I",
    "Modul Nr.": "18-sm-2300",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "75 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Seminar befasst sich mit aktuellen und aufkommenden Themen im Bereich \nmultimedialer Kommunikationssysteme, welche als relevant für die zukünftige Entwicklung \ndes Internets sowie der Informationstechnologie im Allgemeinen erachtet werden. Hierzu \nerfolgt nach einer ausführlichen Literaturarbeit die Zusammenfassung sowie die \nPräsentation von ausgewählten, hochwertigen Arbeiten und Trends aus aktuellen Top-\nZeitschriften, -Magazinen und -Konferenzen im Themenfeld Kommunikationsnetze und \nMultimediaanwendungen. Die Auswahl der Themen korrespondiert dabei mit dem \nArbeitsfeld der wissenschaftlichen Mitarbeiter. \nMögliche Themen sind: \n- Knowledge & Educational Technologies \n- Self organizing Systems & Overlay Communication \n- Mobile Systems & Sensor Networking \n- Service-oriented Computing \n- Multimedia Technologies & Serious Games",
    "Qualifikationsziele": "Die Studierenden erarbeiten sich an Hand von aktuellen wissenschaftlichen Artikeln, \nStandards und Fachbüchern tiefe Kenntnisse über Multimedia Kommunikationssysteme und \nAnwendungen, welche die Zukunft des Internet bestimmen. \nDabei werden Kompetenzen in folgenden Gebieten erworben: \n- Suchen und Bewerten von relevanter wissenschaftlicher Literatur \n- Analysieren und Einschätzen von komplexen technischen und wissenschaftlichen \nInformationen \n- Schreiben von technischen und wissenschaftlichen Zusammenfassungen und Kurzberichten \nModulhandbuch B. Sc./M. Sc. Informatik  523 \n- Präsentation von technischer und wissenschaftlicher Information",
    "Vorraussetzungen": "",
    "Prüfungsform": "Studienleistung",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "CS, WiCS, ETiT, Wi-ETiT, BSc/MSc iST",
    "Literatur": "Entsprechend des gewählten Themenbereichs (ausgewählte Artikel aus Journalen, Magazine \nund Konferenzen)."
  },
  {
    "Modulname": "Seminar Softwaresystemtechnologie",
    "Modul Nr.": "18-su-2080",
    "Kreditpunkte": "4 CP",
    "Arbeitsaufwand": "120 h",
    "Selbststudium": "90 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "In diesem Seminar werden von den Studenten wissenschaftliche Ausarbeitungen aus \nwechselnden Themenbereichen angefertigt. Dies umfasst die Einarbeitung in ein aktuelles \nThema der IT-Systementwicklung mit schriftlicher Präsentation in Form einer Ausarbeitung und \nmündlicher Präsentation in Form eines Vortrages.  Die Themen des aktuellen Semesters sind \nder Webseite der Lehrveranstaltung zu entnehmen www.es.tu-darmstadt.de/lehre/sst.",
    "Qualifikationsziele": "Nach erfolgreicher Absolvierung des Seminars sind die Studenten in der Lage sich in ein \nunbekanntes Themengebiet einzuarbeiten und dieses nach wissenschaftlichen Aspekten \naufzuarbeiten. Die Studenten erlernen die Bearbeitung eines Themas durch Literaturrecherche \nzu unterstützen und kritisch zu hinterfragen. Weiterhin wird die Fähigkeit erworben, ein klar \numrissenes Thema in Form einer schriftlichen Ausarbeitung und in Form eines mündlichen \nVortrags unter Anwendung von Präsentationstechniken zu präsentieren.",
    "Vorraussetzungen": "Grundkenntnisse der Softwaretechnik sowie Programmiersprachenkenntnisse",
    "Prüfungsform": "Modulabschlussprüfung: \n  Modulprüfung (Studienleistung, mündliche Prüfung, Dauer 30 Min, Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "",
    "Benotung": "Modulabschlussprüfung:  \n  Modulprüfung (Studienleistung, mündliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "http://www.es.tu-darmstadt.de/lehre/sst\nModulhandbuch B. Sc./M. Sc. Informatik  525 \nBSc iST, BSc Informatik, MSc ETiT",
    "Literatur": "www.es.tu-darmstadt.de/lehre/sst"
  },
  {
    "Modulname": "Praktikum in der Lehre - Funktionale und objektorientierte Programmierkonzepte",
    "Modul Nr.": "20-00-0187",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "",
    "Qualifikationsziele": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in \nInformatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die \nLernenden zu betreuen und anzuleiten.",
    "Vorraussetzungen": "Empfohlen: \nBachelorprüfung Funktionale und objektorientierte Programmierkonzepte",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0187-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0187-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  528 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Algorithmen und Datenstrukturen",
    "Modul Nr.": "20-00-0289",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Algorithmen und Datenstrukturen",
    "Qualifikationsziele": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in \nInformatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die \nLernenden zu betreuen und anzuleiten.",
    "Vorraussetzungen": "Empfohlen: \nBachelorprüfung Algorithmen und Datenstrukturen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0289-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0289-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  530",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Allgemeine Informatik II",
    "Modul Nr.": "20-00-0292",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Allgemeine Informatik \nll (Programmieren in Java)",
    "Qualifikationsziele": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in \nInformatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die \nLernenden zu betreuen und anzuleiten.",
    "Vorraussetzungen": "Empfohlen: \nGrundstudium Informatik",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0292-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0292-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  532",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Allgemeine Informatik I",
    "Modul Nr.": "20-00-0333",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Dieser Kurs befasst sich mit damit Lehrinhalte der Veranstaltung Allgemeine Informatik 1 \ndidaktisch aufzubereiten und durch begleitende praktische Übungen besser verständlich zu \nmachen. \nDies umfasst unter anderem: Die Mitwirkung bei der Erstellung des Programmierprojektes; die \nÜberarbeitung von Übungsmaterialien; die Erstellung von Minitests zur Leistungskontrolle; die \nKonzeption von Materialien für leistungsschwache wie leistungsstarke Studenten um Inhalte der \nVorlesung zu vertiefen; das Erstellen von anspruchsvollen Bonussystemen.",
    "Qualifikationsziele": "Die Studenten können nach erfolgreicher Durchführung der Veranstaltung: \n- Lehrinhalte aus der Vorlesung für Haus- und Präsenzübungen aufbereiten \n- Praxisnahe Übungsformen konzipieren und erstellen \n- Übungen mit Studentengruppen aller Leistungsniveaus konzipieren und durchführen \n- Ein Konzept für aufeinander aufbauende praktische Übungen entwickeln \n- Methoden der Lernkontrolle für die Lerninhalte der Vorlesung anwenden",
    "Vorraussetzungen": "Empfohlen: \nErfolgreiche Teilnahme am Kurs Allgemeine Informatik I bzw. Grundlagen der Informatik I.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0333-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  534 \nBausteinbegleitende Prüfung:  \n  [20-00-0333-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Softwaretechnik",
    "Modul Nr.": "20-00-0443",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Vorbereitung und Korrektur von Übungen, Abhalten von Übungsstunden, Betreuung von \nPraktischen Übungen.",
    "Qualifikationsziele": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in \nInformatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die \nLernenden zu betreuen und anzuleiten.",
    "Vorraussetzungen": "Empfohlen: \nVordiplom / Grundstudium",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0443-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0443-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  536",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Visual Computing",
    "Modul Nr.": "20-00-0519",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Einführung in Human  Computer Systems \n(Übungskonzeption, Korrektur, Begleitung des Lernenden)",
    "Qualifikationsziele": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in \nInformatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die \nLernenden zu betreuen und anzuleiten.",
    "Vorraussetzungen": "Empfohlen: \nVisual Computing",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0519-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0519-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  538",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Formale Methoden im Softwareentwurf",
    "Modul Nr.": "20-00-0531",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Vorbereitung und Korrektur von Übungsaufgaben, Betreuung von Übungsgruppen",
    "Qualifikationsziele": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in \nInformatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die \nLernenden zu betreuen und anzuleiten.",
    "Vorraussetzungen": "Empfohlen: \nFormale Methoden im Softwareentwurf",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0531-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0531-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  540",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Mentorensystem",
    "Modul Nr.": "20-00-0533",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "",
    "Qualifikationsziele": "Problemlösungskompetenz für anspruchsvolle Aufgaben, d.h. es sind *  fundierte \nFachkenntnisse erforderlich * fundierte Analyse erforderlich *  es gibt keinen schematischen \nLösungsweg Zusätzlich stehen die  projekttypischen Kompetenzen im Vordergrund der Arbeit in \nViererteams: *  Durchführung von Projekten und ihrer Phasenstruktur, * Planung von  Projekt- \nund Teamarbeit. Zu den zu trainierenden Softskills zählen damit  insbesondere Teamfähigkeit, \nAneignung von Präsentationstechniken sowie  eigenverantwortliches Arbeiten.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0533-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0533-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik",
    "Literatur": "Modulhandbuch B. Sc./M. Sc. Informatik  542"
  },
  {
    "Modulname": "Praktikum in der Lehre - Betriebssysteme",
    "Modul Nr.": "20-00-0550",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Grundlagen der Informatik III",
    "Qualifikationsziele": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für  Schulungen in \nInformatikthemen selbst zu erstellen, ihren Einsatz  kritisch zu begleiten und dabei auch die \nLernenden zu betreuen und  anzuleiten.",
    "Vorraussetzungen": "Empfohlen: \nVordiplom Informatik A oder Bachelorprüfung Betriebssysteme",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0550-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0550-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  543 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "Siehe Literatur zu Betriebssysteme"
  },
  {
    "Modulname": "Praktikum in der Lehre - Digitaltechnik",
    "Modul Nr.": "20-00-0597",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "",
    "Qualifikationsziele": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in \nInformatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und/oder dabei auch \ndie Lernenden zu betreuen und anzuleiten.",
    "Vorraussetzungen": "Empfohlen: \nKenntnisse aus Technische Grundlagen der Informatik (TGDI) oder vergleichbarer Vorlesung.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0597-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0597-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  545",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - TK1",
    "Modul Nr.": "20-00-0683",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien selbst zu erstellen, ihren \nEinsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
    "Qualifikationsziele": "Kenntnisse der Thematik in TK1",
    "Vorraussetzungen": "Empfohlen:  \nTK1",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0683-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0683-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  547",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Informationsvisualisierung und Visual Analytics",
    "Modul Nr.": "20-00-0767",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Dieser Kurs ermöglicht es Studierenden, die Haus- und Präsenzübungen für die Vorlesung \n“Informationsvisualisierung und Visual Analytics” unter Anleitung durch die Lehrenden zu \nkonzipieren, durchzuführen und die Lernergebnisse der Vorlesungsteilnehmer zu evaluieren.",
    "Qualifikationsziele": "Die Studenten können nach erfolgreicher Durchführung der Veranstaltung: \n•Lehrinhalte aus der Vorlesung für Haus- und Präsenzübungen aufbereiten \n•Übungen mit Studentengruppen konzipieren und durchführen \n•Ein Konzept für aufeinander aufbauende praktische Übungen entwickeln \n•Methoden der Lernkontrolle für die Lerninhalte der Vorlesung anwenden",
    "Vorraussetzungen": "Empfohlen: Informationsvisualisierung und Visual Analytics",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  549",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Graphische Datenverarbeitung II",
    "Modul Nr.": "20-00-0954",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Das Erstellen von Lehrmaterial, die Beurteilung und Betreuung von Übungen.",
    "Qualifikationsziele": "Aufbereitung und Vermittlung des Vorlesungsinhaltes.",
    "Vorraussetzungen": "Empfohlen: \nDer Vorlesungsinhalt von „Graphische Datenverarbeitung II“",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0954-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0954-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "Modulhandbuch B. Sc./M. Sc. Informatik  551"
  },
  {
    "Modulname": "Praktikum in der Lehre - Internetsicherheit und Sicherheit in Mobilen Netzen",
    "Modul Nr.": "20-00-0957",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Dieser Kurs befasst sich mit damit Lehrinhalte der Themenschwerpunkte Internetsicherheit und \nSicherheit in Mobilen Netzen didaktisch aufzubereiten und durch begleitende praktische \nÜbungen besser verständlich zu machen. \nDies umfasst unter anderem: Die Implementierung von Systemen die in der Vorlesung \nbehandelte Schwachstellen aufweisen und den Studierenden für praktische Übungen verfügbar \ngemacht werden; die Erstellung von Minitests zur Leistungskontrolle; die Konzeption von \nMaterialien für leistungsschwache wie leistungsstarke Studenten um Inhalte der Vorlesung zu \nvertiefen; das Erstellen von anspruchsvollen Bonussystemen.",
    "Qualifikationsziele": "Die Studenten können nach erfolgreicher Durchführung der Veranstaltung: \n- Lehrinhalte aus der Vorlesung für Haus- und Präsenzübungen aufbereiten \n- Praxisnahe Übungsformen konzipieren und erstellen \n- Übungen mit Studentengruppen aller Leistungsniveaus konzipieren und durchführen \n- Ein Konzept für aufeinander aufbauende praktische Übungen entwickeln \n- Methoden der Lernkontrolle für die Lerninhalte der Vorlesung anwenden",
    "Vorraussetzungen": "Empfohlen: \nErfolgreicher Besuch der SEEMOO Veranstaltung für die das PIDL durchgeführt wird.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0957-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  553",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0957-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Computernetzwerke und verteilte Systeme",
    "Modul Nr.": "20-00-0962",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Computernetzwerke und verteilte Systeme \n(Übungskonzeption, Korrektur, Begleitung des Lernenden)",
    "Qualifikationsziele": "",
    "Vorraussetzungen": "Empfohlen: \nComputernetzwerke und verteilte Systeme (ehemals NCS)",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0962-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehend der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0962-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  555",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Optimierende Compiler",
    "Modul Nr.": "20-00-0964",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Erstellen von Übungs- und Lehrmaterial zum Bau Optimierender Compiler \n- Betreuung von Studierenden zu Themen des Baus Optimierender Compiler, insbesondere \nunter Verwendung des neuen Lehrmaterials",
    "Qualifikationsziele": "Es sollen Fähigkeiten zur Durchführung eines Programmierpraktikums erlangt werden, u.a. die \nErstellung von Aufgaben und der zugehörigen Bewertungsschemata, Bewertung von \nProgrammieraufgaben mittels automatischer Tests und gemäß Richtlinien zur Codequalität, \nsowie geeignete Kommunikation der Resultate an die Praktikumsteilnehmer.",
    "Vorraussetzungen": "Empfohlen: \nFortgeschrittene Kenntnisse im Compilerbau, Besuch des Praktikums \"Optimierende Compiler\" \noder vergleichbarer Praktika",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0964-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0964-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  557 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Rechnerorganisation",
    "Modul Nr.": "20-00-0965",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Erstellen von Übungs- und Lehrmaterial zu Rechnerorganisation \n- Betreuung von Studierenden zu Themen der Rechnerorganisation, insbesondere unter \nVerwendung des neuen Lehrmaterials",
    "Qualifikationsziele": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in \nInformatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und&#47;oder dabei \nauch die Lernenden zu betreuen und anzuleiten.",
    "Vorraussetzungen": "Empfohlen: \nKenntnisse aus Technische Grundlagen der Informatik (TGDI), Rechnerorganisation oder \nvergleichbarer Vorlesung.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0965-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0965-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  559 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - IT in der Grundlehre",
    "Modul Nr.": "20-00-0970",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Entwicklung von IT-basierten Konzepten für Vorlesung sowie Übungs-und Prüfungsbetrieb in \nLehrveranstaltungen mit großen, heterogenen Teilnehmergruppen.",
    "Qualifikationsziele": "Nach Besuch der Veranstaltung haben die Studierenden praktische Erfahrungen darin \ngesammelt, geeignete IT-basierte Konzepte für Vorlesung sowie Übungs-und Prüfungsbetrieb in \nLehrveranstaltungen mit großen, heterogenen Teilnehmergruppen zu entwickeln und \nsoftwareseitig umzusetzen.",
    "Vorraussetzungen": "Empfohlen: \nFOP",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0970-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0970-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  561 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Computational Engineering und Robotik",
    "Modul Nr.": "20-00-0971",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Ausarbeitung neuer Übungs- und Programmieraufgaben \n- Konzeption von Übungsblättern",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, können sie Lerninhalte als Übungs- \nund Programmieraufgaben aufbereiten.",
    "Vorraussetzungen": "Voraussetzung: erfolgreiche Teilnahme an der Lehrveranstaltung \"Einführung in Computational \nEngineering (und Robotik)\" \nEmpfohlen: erfolgreiche Teilnahme an \"Grundlagen der Robotik\"",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0971-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0971-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  563",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Software Engineering",
    "Modul Nr.": "20-00-0972",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Vorbereitung und Korrektur von Übungen, Abhalten von Übungsstunden, Betreuung von \nPraktischen Übungen",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, können Sie  \n- Lerninhalte in Form von Übungsaufgaben auf angemessener Abstraktionsebene aufbereiten \n- fachliche Inhalte aufbereiten und erklären (für die Zielgruppe der Studierenden)  \n- Übungsgruppen betreuen",
    "Vorraussetzungen": "Empfohlen: \nSehr gute Kenntnisse in Software Engineering",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0972-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehend der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0972-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  565 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Computersystemsicherheit",
    "Modul Nr.": "20-00-0986",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Ausarbeitung neuer Übungs- und Programmieraufgaben \n- Konzeption von Übungsblättern",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, können sie Lerninhalte als Übungs- \nund Programmieraufgaben aufbereiten.",
    "Vorraussetzungen": "Empfohlen: erfolgreiche Teilnahme an der Lehrveranstaltung \"Computersystemsicherheit\"",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0986-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0986-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Einführung in den Compilerbau",
    "Modul Nr.": "20-00-0988",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Erstellen von Übungs- und Lehrmaterial zu Einführung in den Compilerbau \n- Betreuung von Studierenden zu Themen der Einführung in den Compilerbau, insbesondere \nunter Verwendung des neuen Lehrmaterials",
    "Qualifikationsziele": "Nach erfolgreichem Absolvieren der Veranstaltung sind die Studierenden in der Lage, \nselbständig Lehrmaterialien zu Informatikthemen zu erstellen. Sie können das Material in \nSchulungen erfolgreich einsetzen und seine didaktische Wirksamkeit kritisch beurteilen. Sie \nkönnen Studierende in direktem persönlichen Kontakt, aber auch über elektronische \nKommunikationsmedien anleiten und betreuen.",
    "Vorraussetzungen": "Empfohlen: \nKenntnisse aus Funktionale und Objektorientierte Programmierkonzepte, Algorithmen und \nDatenstrukturen, Einführung in den Compilerbau sowie Rechnerorganisation (oder \nvergleichbaren Veranstaltungen)",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0988-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  568 \n  [20-00-0988-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Ubiquitous / Mobile Computing",
    "Modul Nr.": "20-00-0996",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien selbst zu erstellen, ihren \nEinsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
    "Qualifikationsziele": "Aufbereitung und Vermittlung des Vorlesungsinhaltes.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0996-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0996-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Public Key Infrastrukturen",
    "Modul Nr.": "20-00-1000",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Vorbereitung und Korrektur von Übungen, Abhalten von Übungsstunden, Betreuung von \nPraktischen Übungen",
    "Qualifikationsziele": "In einem Praktikum in der Lehre bearbeiten die Studierenden Probleme, die sowohl fachliche \nals auch didaktische Aspekte haben und wirken an der Umsetzung der von \nihnen erarbeiteten Resultate mit.",
    "Vorraussetzungen": "Public Key Infrastrukturen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1000-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1000-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik",
    "Literatur": "Modulhandbuch B. Sc./M. Sc. Informatik  571"
  },
  {
    "Modulname": "Praktikum in der Lehre - Algorithmenvisualisierung",
    "Modul Nr.": "20-00-1036",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Im Rahmen des Praktikums in der Lehre Algorithmenvisualisierung werden ein \nAnimationssystem weiterentwickelt, die Aufgabenstellungen des assoziierten Praktikums \nüberarbeitet und die studentischen Abgaben im Rahmen des Praktikums betreut.",
    "Qualifikationsziele": "Die Teilnehmer am Praktikum in der Lehre Algorithmenvisualisierung vertiefen ihre Kenntnisse \nim Bereich der Visualisierung sowie der Algorithmen und Datenstrukturen. Gleichzeitig erhalten \nsie Einblicke in die Lehrtätigkeit durch Betreuung von Studierenden, Bewertung von Aufgaben \nund Überarbeitung von Aufgaben.",
    "Vorraussetzungen": "Empfohlen: \nDas Praktikum \"Visualisierung und Animation von Algorithmen und Datenstrukturen\" (LV-Nr. \n20-00-0344-pr) oder eine äquivalente Leistung muss vor Belegung des Praktikums erfolgreich \nabsolviert worden sein, um adäquate Grundkenntnisse nachweisen zu können.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1036-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  572 \n  [20-00-1036-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Data Management",
    "Modul Nr.": "20-00-1040",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Erstellung von Übungs- und Vorlesungsmaterial",
    "Qualifikationsziele": "Erfahrung in der Betreuung von Studierenden im Themenbereich Datenmanagement, mit dem \nFokus auf das neu erstelle Übungs- und Vorlesungsmaterial",
    "Vorraussetzungen": "Informationsmanagement (20-00-0015-iv)",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1040-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1040-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Deep Learning for Natural Language Processing",
    "Modul Nr.": "20-00-1044",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Vorbereitung, Abhalten und Korrektur eines Shared Tasks. Bei einem Shared Task erhalten die \nStudenten ein aktuelles Forschungsproblem und müssen für dieses die Methoden aus der \nVorlesung nutzen um innovative Lösungen zu entwickeln. Die Lösungen können quantitativ \nmiteinander verglichen werden, um die beste Lösung zu identifizieren. Deine Aufgabe ist es \neinen entsprechenden Datensatz auszuwählen und vorzubereiten, die Studenten in die Aufgabe \neinzuführen sowie die abschließende quantitative und qualitative Bewertung der entwickelten \nSysteme. Während des Shared Tasks müssen Rückfragen beantwortet werden und falls nötig \nindividuelle Hilfe angeboten werden. Neben dem Shared Task erfolgt eine Unterstützung bei \nden wöchentlichen Übungen, beispielsweise für die Beantwortung von Fragen zu den \nHausübungen oder Unterstützung bei der Korrektur von Übungen.",
    "Qualifikationsziele": "In einem Praktikum der Lehre bearbeiten die Studierenden Probleme, die sowohl fachliche als \nauch didaktische Aspekte haben und wirken an der Umsetzung der von ihnen erarbeitet \nResultate mit.",
    "Vorraussetzungen": "Empfohlen: \nDeep Learning for Natural Language Processing",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1044-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  575",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1044-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - SIT",
    "Modul Nr.": "20-00-1045",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Unterstützung der Lehre wie z.B., Betreuung von Übungsgruppen, Sprechstunden, o.ä.",
    "Qualifikationsziele": "Die Teilnehmer am Praktikum in der Lehre vertiefen ihre Kenntnisse in verschiedenen Bereiche \nder IT Sicherheit. Zusätzlich erhalten sie Einblicke in die Lehrtätigkeit durch Betreuung von \nStudierenden und Überarbeitung von Aufgaben.",
    "Vorraussetzungen": "Empfohlen: \nErfolgreiche Absolvierung der \"zugehörigen SIT\" Veranstaltung (z.B. Einführung in die IT-\nSicherheit beim PidL für die Veranstaltung IT-Sicherheit) oder entsprechende Kenntnisse.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1045-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1045-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  577",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre – Systemnahe und Parallele Programmierung",
    "Modul Nr.": "20-00-1049",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Betreuung und Durchführung von Übungen sowie vorlesungsbegleitenden Praktika der \nVorlesung „Systemnnahe und Parallele Programmierung“.",
    "Qualifikationsziele": "Studenten sind in der Lage: \n• Lehrinhalte in Übungen zu präsentieren und zu erklären \n• Praktikumsgruppen zu betreuen \n• Methoden zur Kontrolle des Lernerfolgs systematisch anzuwenden",
    "Vorraussetzungen": "Empfohlen: \n• Kenntnisse in C/C++ und paralleler Programmierung \n• Deutsch",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1049-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1049-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  579 \nB.Sc. Informatik \nM.Sc. Informatik",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Einführung in die Kryptographie",
    "Modul Nr.": "20-00-1059",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Betreuung und Durchführung von Übungen sowie vorlesungsbegleitende Praktika der Vorlesung \n„Einführung in die Kryptographie“",
    "Qualifikationsziele": "Studenten sind in der Lage: \n• Lehrinhalte in Übungen zu präsentieren und zu erklären \n• Praktikumsgruppen zu betreuuen \n• Methoden zur Kontrolle des Lernerfolges systematisch anzuwenden",
    "Vorraussetzungen": "• Studenten im Master \n• Interesse an Kryptographie \n• Bestehen der Vorlesung „Einführung in die Kryptographie“ \n• Deutsch",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1059-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1059-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  581 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Echtzeitsysteme",
    "Modul Nr.": "20-00-1060",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Konzeption, Betreuung und Durchführung von Übungen sowie vorlesungsbegleitenden Praktika \nder Vorlesung „Echtzeitsysteme“.",
    "Qualifikationsziele": "Studenten sind in der Lage: \n• Lehrinhalte in Übungen zu präsentieren und zu erklären \n• Praktikumsgruppen zu betreuen \n• Methoden zur Kontrolle des Lernerfolgs systematisch anzuwenden",
    "Vorraussetzungen": "Erfolgreiche Absolvierung der Echtzeitsysteme-Veranstaltung oder entsprechende Kenntnisse.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1060-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1060-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden. \nModulhandbuch B. Sc./M. Sc. Informatik  583",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Statistisches Maschinelles Lernen",
    "Modul Nr.": "20-00-1070",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Unterstützung der Lehre wie z.B., Betreuung von Übungsgruppen, Sprechstunden, o.ä.",
    "Qualifikationsziele": "Vorbereitung auf eigenständige Lehrtätigkeit.",
    "Vorraussetzungen": "Erfolgreiche Absolvierung der Veranstaltung Statistisches Maschinelles Lernen oder \nentsprechende Kenntnisse.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1070-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1070-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Modellierung, Spezifikation und Semantik",
    "Modul Nr.": "20-00-1071",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Modellierung, Spezifikation und Semantik \n(Übungskonzeption, Korrektur, Begleitung des Lernenden)",
    "Qualifikationsziele": "Die Studenten können nach erfolgreicher Durchführung der Veranstaltung: \n- Lehrinhalte aus der Vorlesung für Haus- und Präsenzübungen aufbereiten \n- Praxisnahe Übungsformen konzipieren und erstellen \n- Übungen mit Studentengruppen aller Leistungsniveaus konzipieren und durchführen \n- Ein Konzept für aufeinander aufbauende praktische Übungen entwickeln \n- Methoden der Lernkontrolle für die Lerninhalte der Vorlesung anwenden",
    "Vorraussetzungen": "Kenntnisse aus Modellierung, Spezifikation und Semantik oder vergleichbarer Vorlesung",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1071-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1071-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  586 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum in der Lehre - Optimierung statischer und dynamischer Systeme",
    "Modul Nr.": "20-00-1085",
    "Kreditpunkte": "5 CP",
    "Arbeitsaufwand": "150 h",
    "Selbststudium": "105 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "* Ausarbeitung neuer Übungs- und Programmieraufgaben \n* Konzeption von Übungsblättern",
    "Qualifikationsziele": "Die Studierenden können nach erfolgreicher Durchführung der Veranstaltung: \n* Lehrinhalte aus der Vorlesung für Haus- und Präsenzübungen sowie für vorlesungsbegleitende \nProgrammieraufgaben aufbereiten \n* Ein Konzept für aufeinander aufbauende praktische Übungen entwickeln \n* Methoden der Lernkontrolle für die Lerninhalte der Vorlesung anwenden",
    "Vorraussetzungen": "Empfohlen wird die erfolgreiche Teilnahme an der Lehrveranstaltung \"Optimierung statischer \nund dynamischer Systeme\".",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1085-pl] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1085-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  588 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum aus Data Mining und maschinellem Lernen",
    "Modul Nr.": "20-00-0103",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Ziel des Praktikums ist das Sammeln von Erfahrung im Einsatz von Werkzeugen des \nMaschinellen Lernens und Data Minings an realistischen Problemen sowie ein besseres \nVerständnis ihrer Funktionsweise. Die Aufgabenstellung, die von den Studenten alleine oder \nin Gruppen bearbeitet werden kann, variiert von Jahr zu Jahr. Sie kann z.B. die  \nTeilnahme an einem Data Mining Wettbewerb (z.B.: http://www.data-mining-cup.de), die \nAnalyse eines Datensatzes aus einem Projekt des Fachgebiets oder auch die \nWeiterentwicklung und praktische Implementierung von Data Mining Werkzeugen sein.  \nBeachten Sie bitte die Informationen auf der Homepage des Fachgebiets \n(http://www.ke.informatik.tu-darmstadt.de/lehre/)! \nIn Semestern, in denen die Veranstaltung nicht auf diesen Seiten angekündigt wird, besteht \noftmals dennoch die Möglichkeit zur Bearbeitung individueller Themen (auf Nachfrage).",
    "Qualifikationsziele": "Nach Bearbeitung dieses Praktikums sollten die Studierenden in der Lage sein \n● Einsatzmöglichkeiten von Werkzeugen des Data Minings und maschinellen Lernens zu \nerkennen \n● für gegebene Aufgaben passende Werkzeuge auszuwählen und selbständig einzusetzen \n● den Erfolg des Einsatzes solcher Techniken evaluieren und messen zu können",
    "Vorraussetzungen": "Empfohlen: Basic knowledge in machine learning and data mining",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen) \nModulhandbuch B. Sc./M. Sc. Informatik  591",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Kryptographie",
    "Modul Nr.": "20-00-0105",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "In diesem Praktikum werden ausgewählte Themen aus den Bereichen Public-Key \nInfrastrukturen (PKI) und kryptographische Verfahren sowie Protokolle behandelt. Zum \nBeispiel: \n● Effiziente Implementierung von Chiffren, Hashfunktionen, Signaturverfahren \n● Einbindung kryptographischer Primitive in Anwendungen \n● Verwendung kryptographischer Hardware wie Smart Cards",
    "Qualifikationsziele": "● ausweiten der Programmierkenntnisse \n● Erfahrung sammeln in der Softwareentwicklung \n● tieferes Verstehen von Sicherheitskonzepten und kryptographischen Kenntnissen \n● Erfahrung sammeln im Umgang mit verschiedenen Entwicklungswerkzeugen",
    "Vorraussetzungen": "Empfohlen:  \n● Kenntnisse der entsprechenden Programmiersprache bei Programmieraufgaben \n● Grundlagen der Kryptographie \n● Kenntnisse in IT-Sicherheit sind von Vorteil",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  593",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "●  Johannes Buchmann: Einführung in die Kryptographie, 5. Auflage, Springer-Verlag, 2010, \n278 p. ISBN: 978-3-642-11185-3 \n● Johannes Buchmann: Cryptographic Protocols. Vorlesungsskript (u.a. Undeniable, Fail-\nStop und Blind Signatures) \n● Neal Koblitz: A Course in Number Theory and Cryptography, Springer Verlag, 1994 \n● Alfred J. Menezes, Paul C. van Oorschot, Scot A. Vanstone: Handbook of Applied \nCryptography, CRC Press, 1997 \n● Bruce Schneier: Applied Cryptography, John Wiley & Sons, Inc., 1994 \n● Douglas R. Stinson: Cryptography - Theory and Practice, CRC Press, 1995 \n● Gustavus J. Simmons: Contemporary Cryptology - The Science of Information Integrity, \nIEEE Press, 1992 \n● Programmieren und Dokumentieren komponentenbasierter Software  (Java, C, C++ \nUML, Java-Beans)"
  },
  {
    "Modulname": "Hacker Contest",
    "Modul Nr.": "20-00-0114",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Das Praktikum wird jedes mal an einem neuen Szenario ausgerichtet. Dieses Szenario (z.B. \nInternet Service Provider) gibt den Rahmen vor, welche Systeme aufgebaut und \nwelche Arten von Attacken untersucht werden sollen. \nAllgemein verläuft das Praktikum in mehreren Runden: \n Aufbau der Systeme \n Angriffe \n Dokumentation der Angriffe und mögliche Gegenmaßnahmen \n Härten der Systeme",
    "Qualifikationsziele": " Arbeit im Team  \n Systematisches und sicheres Planen und Warten von IT-Systemen  \n Erkennen von Angriffen auf IT-Systeme  \n Analyse und Behebung von Schwachstellen  \n Verständnis für praktische Sicherheitsprobleme  \n Anwendung und Weiterentwicklung von Sicherheitstools",
    "Vorraussetzungen": "Empfohlen: \nGrundkenntnisse in IT-Sicherheit, Administration von Netzen und Rechnern \nModulhandbuch B. Sc./M. Sc. Informatik  595",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0114-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0114-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Internet - Praktikum Telekooperation",
    "Modul Nr.": "20-00-0131",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Praktikum selbst ist in drei Teile unterteilt. In jedem Teil wird es eine Vorlesung geben, \num das Thema einzuführen und neue Arbeitswerkzeuge vorzustellen.  \nWichtige Themen sind: \n● Einführung in Java Netzwerk Programmierung und HTTP \n● Peer-to-peer technologies \n● Web caching \n● Internet Standards",
    "Qualifikationsziele": "Studierende haben nach Besuch dieser Veranstaltung Wissen über zur Zeit aktuell \naufkommende Technologien erworben. Ebenso haben Studierende diese Technologien \n(Bausteine der zukünftigen Generation von Internetdiensten) praktisch eingesetzt und \nErfahrungen bei der Nutzung, Entwicklung und Integration dieser Technologien gesammelt.",
    "Vorraussetzungen": "Empfohlen: „Computer-Netzwerke und verteilte Systeme“",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  597",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Handbook of Research: Ubiquitous Computing Technology for Real Time Enterprises edited \nby Prof. Dr. Max Mühlhäuser, Dr. Iryna Gurevych, 2008, Information Science Reference, \nISBN-10: 1599048329"
  },
  {
    "Modulname": "Praktikum Algorithmen",
    "Modul Nr.": "20-00-0189",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Lösung eines algorithmischen Problems aus der Praxis und Umsetzung der Lösung in \nSoftware.  \nKonkrete Themenstellung nach Absprache in der Vorbesprechung.",
    "Qualifikationsziele": "In dieser Veranstaltung erwerben Studierende die Kompetenz zur Lösung algorithmischer \nProblemstellungen aus der Praxis und die Fähigkeit, Algorithmen in praktisch effiziente \nImplementationen umzusetzen.",
    "Vorraussetzungen": "Empfohlen:  \n- Kenntnis einer geeigneten Programmiersprache (z.B. Java / C++) \n- Vorwissen über grundlegende Algorithmen und Datenstrukturen",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  599",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Serious Games Praktikum",
    "Modul Nr.": "20-00-0236",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "In dem Praktikum werden für aktuelle Themen aus dem Bereich Serious Games \n(beispielsweise für Bildung, Gesundheit und Sport) Konzepte entwickelt und prototypisch \nrealisiert. \nDie Themen haben jeweils Bezug zur aktuell laufenden Forschung des Fachgebiets, teilweise \nin Kooperation mit Partnern aus der Games Industrie und/oder Serious Games Anwendern.",
    "Qualifikationsziele": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden eine praktische \nAufgabenstellung aus dem „Serious Games“-Umfeld eigenständig bearbeiten sowie die dafür \nnötige Software konzipieren und prototypisch umsetzen. Außerdem können sie die von \nihnen erzielten Ergebnisse einem Publikum unter Anwendung von verschiedenen \nPräsentationstechniken vorstellen sowie eine dazugehörige Fachdiskussion aktiv bestreiten.",
    "Vorraussetzungen": "Empfohlen: Programmierkenntnisse (die Programmiersprache ist jeweils abhängig von \nThema und kann teilweise frei gewählt werden).",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  601 \nB. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Keine"
  },
  {
    "Modulname": "Robotik-Projektpraktikum",
    "Modul Nr.": "20-00-0248",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- selbständige Bearbeitung einer konkreten Aufgabenstellung aus der Entwicklung und \nAnwendung moderner Robotersysteme unter Anleitung und (nach Möglichkeit) in einem \nTeam von Entwicklern \n- Erarbeitung eines Lösungsvorschlags und dessen Umsetzung \n- Anwendung und Evaluierung anhand von Roboterexperimenten oder -simulationen \n- Dokumentation von Aufgabenstellung, Vorgehensweise, Implementierung und Ergebnissen \nin einem Abschlussbericht und Durchführung einer Abschlusspräsentation",
    "Qualifikationsziele": "Durch erfolgreiche Teilnahme erwerben Studierende vertiefte Kenntnisse in ausgewählten \nBereichen und Teilsystemen moderner Robotersysteme sowie vertiefte Fähigkeiten zu deren \nEntwicklung, Implementierung und experimentellen Evaluation. Sie trainieren \nPräsentationsfähigkeiten und (nach Möglichkeit) Fähigkeit zur Arbeit in einem Team.",
    "Vorraussetzungen": "Empfohlen:  \n- grundlegende Fachkenntnisse und methodische Fähigkeiten in der Robotik, wie diese \ndurch die Lehrveranstaltung “Grundlagen der Robotik” vermittelt werden \n- spezifische Programmierkenntnisse je nach Aufgabenstellung",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  603 \nBestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Autonome Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum Peer-to-Peer Middleware",
    "Modul Nr.": "20-00-0269",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "- Eigenständiges Lösen einer Problemstellung aus dem Gebiet der Peer-to-Peer Middleware \nin einer Kleingruppe \n- Implementieren der erarbeiteten Lösung \n- Arbeiten in einer Kleingruppe \n- Präsentation der eigenen Arbeit inkl. Ziwschenständen \n- Iterative Erstellung einer schriftlichen Beschreibung der eigenen Arbeit \n- Performanzanalyse der Implementierung \n- Evaluation des Gesamtsystems in Bezug auf verschiedene Gütemaße",
    "Qualifikationsziele": "Nach erfolgreichem Absolvieren können die Studenten eigenständig in einer Kleingruppe \nProbleme aus dem Bereich der Peer-to-Peer Middleware lösen, implementieren sowie diese \nhinsichtlich Ihrer Performanz und in Bezug auf verschiedene Gütemaße analysieren. Sie sind \nin der Lage ihre Arbeit samt Zwischenergebnisse zu präsentieren sowie diese schriftlich in \neinem Bericht zu beschreiben.",
    "Vorraussetzungen": "Empfohlen: “Computer-Netzwerke und verteilte Systeme”, “Algorithmen und \nDatenstrukturen”",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  605 \nStandard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben"
  },
  {
    "Modulname": "Praktikum Adaptive Rechensysteme",
    "Modul Nr.": "20-00-0274",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "-     Eigenständiges Lösen einer Problemstellung durch Software-Implementierung auf einem \neingebetteten System mit rekonfigurierbarem System-on-Chip (rSoC) \n-     Performanzanalyse der Implementierung \n-     Konzipieren einer anwendungsspezifischen Rechenarchitektur für die zeitkritischen \nOperationen \n-     Realisieren des Rechenbeschleunigers in einer Hardware-Beschreibungssprache \n-     Hardware-Integration des Rechenbeschleunigers in das rSoC \n-     Software-Integration des Rechenbeschleunigers durch Betriebssystemanbindung \n-     Modifikation der ursprünglichen Software-Implementierung für Ausnutzung des \nRechenbeschleunigers \n-     Evaluation des Gesamtsystems in Bezug auf verschiedene Gütemaße",
    "Qualifikationsziele": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden Hard- und \nSoftware-Implementierungen auf eingebetteten Systemen eigenständig erstellen und unter \nverschiedenen Gütemaßen analysieren. Sie können die Ergebnisse interpretieren und \ndaraufhin anwendungsspezifische Rechnerarchitekturen konzipieren, die eine Verbesserung \neines oder mehrerer Gütemaße erreichen.  Sie können Hardware-Entwurfsverfahren \nanwenden, um mittels industrieller Hardware-Entwurfswerkzeuge die selbst konzipierte \nRechenarchitektur auf Hard- und Software-Ebene in ein reales Gesamtsystem zu integrieren.",
    "Vorraussetzungen": "Empfohlen: Empfohlen: Besuch der Vorlesungen „Digitaltechnik“, „Rechnerorganisation“ \nund „Architektur und Entwurf von Rechnersystemen“ bzw. entsprechende Kenntnisse aus \nanderen Studiengängen",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  607 \nStudienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird jeweils passend für die aktuelle Aufgabe bekanntgegeben, zusätzlich Datenblätter und \nHandbücher der Hardware- und Entwurfswerkzeughersteller"
  },
  {
    "Modulname": "Praktikum Algorithmen II (Vertiefung)",
    "Modul Nr.": "20-00-0276",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Lösung eines fortgeschrittenen algorithmischen Problems aus der Praxis und Umsetzung der \nLösung in Software. \nKonkrete Themenstellung nach Absprache in der Vorbesprechung.",
    "Qualifikationsziele": "In dieser Veranstaltung vertiefen Studierende die Kompetenz zur Lösung algorithmischer \nProblemstellungen aus der Praxis und die Fähigkeit, Algorithmen in praktisch effiziente \nImplementationen umzusetzen.",
    "Vorraussetzungen": "Empfohlen: Baut auf Praktikum Algorithmen auf",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nModulhandbuch B. Sc./M. Sc. Informatik  609 \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Implementierung von Programmiersprachen",
    "Modul Nr.": "20-00-0306",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Es werden Konzepte der Implementierung von Programmiersprachen  \nvermittelt. Ferner werden diese Konzepte angewendet, um Erweiterungen  \nfür Programmiersprachen zu implementieren.",
    "Qualifikationsziele": "Die Fähigkeit, eine professionelle Aufgabe aus der Informatik selbstständig und erfolgreich nach \nden anerkannten Grundsätzen der Profession zu bearbeiten.",
    "Vorraussetzungen": "Es wird kein Vorwissen vorausgesetzt. Jedoch sind gute Programmiererfahrungen sowie \nKenntnisse über Kompilerbau und virtuelle Maschinen von Vorteil.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0306-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0306-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nModulhandbuch B. Sc./M. Sc. Informatik  611 \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Integriertes Robotik-Projekt 1",
    "Modul Nr.": "20-00-0324",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- selbständige Bearbeitung einer konkreten Aufgabenstellung aus der Entwicklung und \nAnwendung moderner Robotersysteme unter Anleitung und (nach Möglichkeit) in einem \nTeam von Entwicklern \n- Einarbeitung in den relevanten Stand der Forschung und Technik \n- Erarbeitung eines Lösungsvorschlags und dessen Umsetzung und Implementierung \n- Anwendung und Evaluierung anhand von Roboterexperimenten oder -simulationen \n- Dokumentation von Aufgabenstellung, Vorgehensweise, Implementierung und Ergebnissen \nin einem Abschlussbericht und Durchführung einer Abschlusspräsentation",
    "Qualifikationsziele": "Durch erfolgreiche Teilnahme erwerben Studierende vertiefte Kenntnisse in ausgewählten \nBereichen, Teilsystemen und Methoden moderner Robotersysteme sowie vertiefte \nFähigkeiten zu deren Entwicklung, Implementierung und experimentellen Evaluation. Sie \ntrainieren Präsentationsfähigkeiten und (nach Möglichkeit) Fähigkeit zur Arbeit in einem \nTeam.",
    "Vorraussetzungen": "Empfohlen: - grundlegende Fachkenntnisse und methodische Fähigkeiten in der Robotik, \nwie diese durch die Lehrveranstaltung “Grundlagen der Robotik” vermittelt werden \n- spezifische Programmierkenntnisse je nach Aufgabenstellung",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  613",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Autonome Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Aktuelle Literaturhinweise werden in der Veranstaltung gegeben."
  },
  {
    "Modulname": "Visualisierung und Animation von Algorithmen und Datenstrukturen",
    "Modul Nr.": "20-00-0344",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Im Rahmen des Praktikums beschäften wir uns mit der Frage, wie die Dynamik von \nAlgorithmen und Datenstrukturen sinnvoll dargestellt werden kann. Dazu wird die Erstellung \nsolcher Animation praktisch an einem System erprobt.",
    "Qualifikationsziele": "Nach dem Besuch der Veranstaltung sind Studierende in der Lage, \n- die zur Verfügung gestellte API zur Animation von Algorithmen anzuwenden. \n- einen gegebenen Algorithmus auf seine zentralen Elemente zu untersuchen. \n- jeweils eine Visualisierung für die zentralen Elemente von zwei ausgewählten Algorithmus zu \nkonstruieren. \n- die erstellten Visualisierungen durch die geeignete Wahl von Parametern zu generalisieren. \n- kritisch zu beurteilen, ob die gewählte Visualisierung den Lernprozess beim Betrachter \nunterstützt.",
    "Vorraussetzungen": "Empfohlen: \nDie Teilnehmer benötigen neben guten Java-Kenntnissen Verständnis für die Algorithmen und \nDatenstruktur, die meist in GdI 2 gelehrt werden.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0344-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  615 \nBausteinbegleitende Prüfung:  \n  [20-00-0344-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Integriertes Robotik-Projekt 2",
    "Modul Nr.": "20-00-0357",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- selbständige Bearbeitung einer konkreten Aufgabenstellung aus der Entwicklung und \nAnwendung moderner Robotersysteme unter Anleitung und (nach Möglichkeit) in einem \nTeam von Entwicklern \n- Einarbeitung in den relevanten Stand der Forschung und Technik \n- Erarbeitung eines Lösungsvorschlags und dessen Umsetzung und Implementierung \n- Anwendung und Evaluierung anhand von Roboterexperimenten oder -simulationen \n- Dokumentation von Aufgabenstellung, Vorgehensweise, Implementierung und Ergebnissen \nin einem Abschlussbericht und Durchführung einer Abschlusspräsentation",
    "Qualifikationsziele": "Durch erfolgreiche Teilnahme erwerben Studierende vertiefte Kenntnisse in ausgewählten \nBereichen, Teilsystemen und Methoden moderner Robotersysteme sowie vertiefte \nFähigkeiten zu deren Entwicklung, Implementierung und experimentellen Evaluation. Sie \ntrainieren Präsentationsfähigkeiten und (nach Möglichkeit) Fähigkeit zur Arbeit in einem \nTeam.",
    "Vorraussetzungen": "Empfohlen: - grundlegende Fachkenntnisse und methodische Fähigkeiten in der Robotik, \nwie diese durch die Lehrveranstaltung “Grundlagen der Robotik” vermittelt werden \n- spezifische Programmierkenntnisse je nach Aufgabenstellung \n- Teilnahme am ersten Teil “Integrierte",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  617 \nBestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Autonome Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Aktuelle Literaturhinweise werden in der Veranstaltung gegeben."
  },
  {
    "Modulname": "Praktikum aus Künstlicher Intelligenz",
    "Modul Nr.": "20-00-0412",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Studierende müssen alleine oder in Gruppen ein konkretes praktisches Problem aus dem \nBereich der Künstlichen Intelligenz bearbeiten und mit Hilfe von selbst zu entwickelnden \noder dem Einsatz von bestehenden Software-Werkzeugen lösen.  \nBeachten Sie bitte die Informationen auf der Homepage des Fachgebiets \n(http://www.ke.informatik.tu-darmstadt.de/lehre/)! \nIn Semestern, in denen die Veranstaltung nicht auf diesen Seiten angekündigt wird, besteht \noftmals dennoch die Möglichkeit zur Bearbeitung individueller Themen (auf Nachfrage).",
    "Qualifikationsziele": "Nach Bearbeitung dieses Praktikums sollten die Studierenden in der Lage sein \n● Einsatzmöglichkeiten von Werkzeugen der künstlichen Intelligenz zu erkennen \n● für gegebene Aufgaben passende Werkzeuge auszuwählen und selbständig einzusetzen \n● den Erfolg des Einsatzes solcher Techniken evaluieren und messen zu können",
    "Vorraussetzungen": "Empfohlen: Basic knowledge in artificial intelligence",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  619",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum Visual Computing",
    "Modul Nr.": "20-00-0418",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Im Rahmen dieses Praktikums werden ausgewählte Themen aus dem Bereich Visual \nComputing von den Studierenden bearbeitet und am Ende des Praktikums in einem Vortrag \nvorgestellt. Die konkreten Themen wechseln von Semester zu Semester und sollten direkt \nmit einem der Lehrenden angesprochen werden.",
    "Qualifikationsziele": "Nach dem erfolgreichen Abschluss des Praktikums sind die Studenten dazu in der Lage, \nselbständig ein Problem aus dem Bereich des Visual Computings zu analysieren, zu lösen \nund die Ergebnisse zu bewerten.",
    "Vorraussetzungen": "Empfohlen:  \npraktische Programmierkenntnisse, z. B. in Java, C++ \nGrundkenntnisse oder Interesse, sich mit Fragestellungen des Visual Computing zu befassen \nempfohlen wird der Besuch mindestens einer der Einführungsvorlesungen im Bereich Visual \nComputing",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  621",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nB. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekanntgegeben"
  },
  {
    "Modulname": "Forschungsprojekt Telekooperation",
    "Modul Nr.": "20-00-0485",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Forschungsrelevante Projektarbeit. \nAn einem individuellen Projekt soll das eigenständige Forschen unter Anleitung erlernt \nwerden. Dabei werden die Themen jeweils in Zusammenarbeit mit dem Betreuer definiert. \nMögliche Themenfelder: \n* Multimodale Interaction  \n* Multitouch \n* Assistenzsysteme \n* Sensor Fusion",
    "Qualifikationsziele": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die grundlegenden \nMethoden der Forschungsarbeit von der Idee bis zur fertigen Publikation. Sie verstehen wie \nsie komplexe Forschungsfragen in Teilprobleme zerlegen und umfassend beantworten \nkönnen. Sie können die Qualität der Ergebnisse durch umfassende Evaluation bewerten und \nangemessen darüber berichten.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  623 \nBestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "variierend"
  },
  {
    "Modulname": "Projektpraktikum Management unstrukturierter Informationen",
    "Modul Nr.": "20-00-0501",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Obwohl heutzutage eine beachtliche Menge von Wissen bereits in strukturierter Form in \nDatenbanken oder im Semantic Web vorliegt, ist der Großteil unsers Wissens noch immer in \nunstrukturierter Form gespeichert, als natürlichsprachliche Textdokumente, Video- oder \nAudioaufnahmen. Das ursprünglich von IBM entwickelte Unstructured Information \nManagement (UIMA) Framework bietet eine Entwicklungsplattform zur Analyse solcher \nunstrukturierter Daten und ermöglicht damit die Extraktion von Wissen aus unstrukturierten \nQuellen. Darauf aufbauend bietet das am UKP Lab entwickelte Darmstadt Knowledge \nProcessing Software Repository (DKPro) eine Sammlung von Java-basierten \nSoftwarekomponenten zur Verarbeitung und Analyse von Texten. \nIm Projektpraktikum werden diese Softwarekomponenten und das zugrundeliegende \nApache UIMA-Framework eingesetzt und zur Entwicklung eines eigenen Softwaresystems zu \neinem vorgegebenen Rahmenthema entwickelt. Das jeweilige Rahmenthema der \nVeranstaltung wechselt jedes Semester und wird auf der Fachgebietshomepage bekannt \ngegeben. Eine Einführung in die UIMA- und DKPro-Frameworks wird in den ersten \nSitzungen gegeben, woraufhin die Projekte in Abstimmung mit den Veranstaltern konzipiert \nwerden. Danach erfolgt die Projektentwicklung eigenständig mit regelmäßigen Treffen. \nWeitere Informationen: https://www.ukp.tu-darmstadt.de/teaching/courses/software-\nproject/",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, können sie \n● sprachtechnologische Frameworks verstehen und einsetzen, \n● komplexe NLP-Systeme eigenständig planen und umsetzen, \nModulhandbuch B. Sc./M. Sc. Informatik  625 \n● praktische Fragestellungen und technische Hürden analysieren und lösen, \n● die implementierten Ansätze mit früheren Arbeiten oder Referenzimplementierungen \nvergleichend auswerten sowie \n● die eigenen Ergebnisse mündlich und schriftlich präsentieren.",
    "Vorraussetzungen": "Empfohlen: Programmierkenntnisse in Java",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird in der Veranstaltung bekanntgegeben."
  },
  {
    "Modulname": "Java Spiele-Framework",
    "Modul Nr.": "20-00-0522",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Grundlagen von Frameworks Framework-Entwicklung mittels Eclipse Model-View-Controller \nPattern Teamorientiertes Arbeiten Entwurf für gute Nutzbarkeit",
    "Qualifikationsziele": "Nach dem Besuch der Veranstaltung sind Studierende in der Lage, \n- das zur Verfügung gestellte Framework zur Programmierung von Computerspielen \nanzuwenden. \n- ein lauffähiges Computerspiel in einer Kleingruppe zu entwickeln. \n- die funktionalen Anforderungen an ein Computerspiel zu bestimmen, diese in \nzusammenhängende Teilbereiche zu klassifizieren und sie im Anspruch der Realisierung \nrealistisch zu kategorisieren. \n- eine Musteraufgabenstellung auf eine für Studierende des ersten Semesters geeignete \nAufgabenstellung zur Implementierung des gleichen Computerspiels zu übertragen. \n- öffentliche und private Tests für das eigene Computerspiele zu entwickeln, um damit die  \nFunktionalität und Korrektheit der studentischen Lösung zu bewerten.",
    "Vorraussetzungen": "Empfohlen: \nSolide Kenntnisse in Java",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0522-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  627",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0522-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Fortgeschrittenes Praktikum Visual Computing",
    "Modul Nr.": "20-00-0537",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Im Rahmen dieses Praktikums werden ausgewählte fortgeschrittene Themen aus dem \nBereich Visual Computing von den Studierenden bearbeitet und am Ende des Praktikums in \neinem Vortrag vorgestellt. Die konkreten Themen wechseln von Semester zu Semester und \nsollten direkt mit einem der Lehrenden angesprochen werden.",
    "Qualifikationsziele": "Nach dem erfolgreichen Abschluss des Praktikums sind die Studenten dazu in der Lage, \nselbständig ein fortgeschrittenes Problem aus dem Bereich des Visual Computings zu \nanalysieren, zu lösen und die Ergebnisse zu bewerten.",
    "Vorraussetzungen": "Empfohlen:  \npraktische Programmierkenntnisse, z. B. in Java, C++ \nGrundkenntnisse in Visual Computing zu befassen \nempfohlen wird der Besuch mindestens einer der Einführungsvorlesungen im Bereich Visual \nComputing sowie des Praktikums Visual Computing",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  629",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekanntgegeben"
  },
  {
    "Modulname": "Teamleitung im Bachelorpraktikum",
    "Modul Nr.": "20-00-0541",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die Hauptaufgabe und Verantwortung eines Teamleiters ist die  Koordination von zwei bis drei \nBachelorpraktikumsgruppen, um die  Erreichung der Projektziele der Gruppen sicher zu stellen.  \nDie Verantwortung, Aufgaben und Befugnisse der Teamleiter sind im  Einzelnen: - Maßgeblich \nverantwortlich für die Erreichung des Projektziels.  - Verantwortung für die Planung, Einhaltung \nund Protokollierung des  Projektverlaufs. - Beurteilung der Machbarkeit der Aufgabenstellung \nund Sicherstellung,  dass die Aufgabenstellung hinreichend präzise ist. - Beratung des Teams \nwährend des Projektes. - Qualitätssicherung aller erstellten Dokumente und Präsentationen. - \nLeitung von Teamsitzungen.",
    "Qualifikationsziele": "Leitung eines Projektteams",
    "Vorraussetzungen": "Empfohlen: \nvertiefte Kenntnisse im Bereiche Software Engineering",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0541-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0541-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  631 \nB. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum Sichere Mobile Netze",
    "Modul Nr.": "20-00-0552",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Praktikum Sichere Mobile Netze behandelt die angewandte Softwareentwicklung und \nHardware-Software Entwicklung in den Themenbereichen Kommunikationsnetze, \nSicherheit, Mobile Netze und Drahtloser Kommunikation bzw. der Kombination dieser \nBereiche. Ziel ist das Lösen einer Problemstellung im Team aus den genannten Bereichen \ndurch Implementierung in Software bzw. Hardware/Software. \nLerninhalte: \n- Lösen einer Fragestellung im Bereich Kommunikationsnetze, Sicherheit, Mobile Netze und \nDrahtloser Kommunikation \n- Rechereche von Lösungsalternativen und Abwägung von Vor-/Nachteilen der Alternativen \n- Konzipieren einer Softwarearchitektur bzw. kombinierten Hardware-Software Architektur \n- Entwerfen eines auf die Zielplattform angepassten Hardware-/Softwaredesigns \n- Prototypische Umsetzung auf der ausgewählten Zielplattform \n- Evaluation des Gesamtsystems in Bezug auf verschiedene Gütemaße \n- Dokumentation der erstellten Lösung",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden die Fähigkeit \nProblemstellungen im Bereich Sichere Mobile Netze softwaretechnisch zu lösen. Die \nStudierenden haben hierzu Kenntnisse im Entwurf/der Umsetzung komplexer Protokolle \nbzw. Anwendungen in einem/mehreren der Bereiche Kommunikationsnetze, Sicherheit, \nMobile Netze und Drahtloser Kommunikation erlangt. Die Studierenden sind in der Lage die \ngewählten Protokolle und Anwendungen zu implementieren, zu testen und deren \nFunktionsfähigkeit und Leistungsfähigkeit zu evaluieren. Sie sind in der Lage die erstellten \nSoftwareartefakte verständlich zu dokumentieren und die erzielten Projektfortschritten und \n-ergebnissen verständlich zu präsentieren.",
    "Vorraussetzungen": "Modulhandbuch B. Sc./M. Sc. Informatik  633 \nEmpfohlen: Erfolgreiche Teilnahme an einer Integrierten Veranstaltung des Fachgebiets \nSEEMOO",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Themenspezifisch ausgewählte, aktuelle wissenschaftliche Veröffentlichungen"
  },
  {
    "Modulname": "Projektpraktikum Sichere Mobile Netze",
    "Modul Nr.": "20-00-0553",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Projektpraktikum Sichere Mobile Netze behandelt die angewandte Softwareentwicklung \nund Hardware-Software Entwicklung in den Themenbereichen Kommunikationsnetze, \nSicherheit, Mobile Netze und Drahtloser Kommunikation bzw. der Kombination dieser \nBereiche. Ziel ist das eigenständige Bearbeiten eines Entwicklungsprojektes im Team. \nLerninhalte: \n- Eigenständiges Bearbeiten eines Entwicklungsprojektes im Bereich Kommunikationsnetze, \nSicherheit, Mobile Netze und Drahtloser Kommunikation \n- Projektplanung und Projektmanagement \n- Rechereche von Lösungsalternativen und Abwägung von Vor-/Nachteilen der Alternativen \n- Konzipieren einer Softwarearchitektur bzw. kombinierten Hardware-Software Architektur \n- Entwerfen eines auf die Zielplattform angepassten Hardware-/Softwaredesigns \n- Prototypische Umsetzung auf der ausgewählten Zielplattform \n- Evaluation des Gesamtsystems in Bezug auf verschiedene Gütemaße \n- Dokumentation der erstellten Lösung sowie ausführliche Dokumentation des \nProjektmanagements",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden die Fähigkeit \nkomplexe Problemstellungen im Bereich Sichere Mobile Netze softwaretechnisch zu lösen. \nDie Studierenden können hierzu eigenständig ein Projekt definieren, verwalten und \ndurchführen. Die Studierenden haben Kenntnisse im Entwurf/der Umsetzung komplexer \nProtokolle bzw. Anwendungen in einem/mehreren der Bereiche Kommunikationsnetze, \nSicherheit, Mobile Netze und Drahtloser Kommunikation erlangt. Die Studierenden sind in \nder Lage die gewählten Protokolle und Anwendungen zu implementieren, zu testen und \nderen Funktionsfähigkeit und Leistungsfähigkeit zu evaluieren. Sie sind in der Lage die \nProjektplanung und -verwaltung sowie die erstellten Softwareartefakte verständlich zu \nModulhandbuch B. Sc./M. Sc. Informatik  635 \ndokumentieren und die erzielten Projektfortschritten und -ergebnissen verständlich zu \npräsentieren.",
    "Vorraussetzungen": "Empfohlen: Erfolgreiche Teilnahme an einer Integrierten Veranstaltung des Fachgebiets \nSEEMOO",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Themenspezifisch ausgewählte, aktuelle wissenschaftliche Veröffentlichungen"
  },
  {
    "Modulname": "Advanced User Interfaces",
    "Modul Nr.": "20-00-0570",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "●  Analyse von Requirements für eine gegebene Problemstellung \n● Ausarbeitung und Präsentation eines User Interface Konzepts \n● Prototypische Implementierung des Konzepts",
    "Qualifikationsziele": "Studierende haben einen Einblick in die Prinzipien und Methoden zum Entwurf und zur \nEntwicklung multimedialer, kollaborativer und adaptiver Bernutzungsschnittstellen an Hand \neiner praktischen Anwendung unter Berücksichtigung verschiedener Kontextbedingungen \nbekommen.",
    "Vorraussetzungen": "Empfohlen:  \n● Interesse an neuen, innovativen Benutzungsschnittstellen \n● Wünschenswert sind Grundkenntnisse der Human Computer Interaction \n● gute Programmierkenntnisse (C#/WPF und/oder Java)",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard \nModulhandbuch B. Sc./M. Sc. Informatik  637",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Abhängig von der Aufgabenstellung"
  },
  {
    "Modulname": "Praktikum zu Algorithmen für Hardware-Entwurfswerkzeuge",
    "Modul Nr.": "20-00-0571",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- Realisieren von Hardware-Entwurfswerkzeugen aus dem Bereich Layout-Synthese, speziell \nzu Themen wie Timing Analyse, Platzierung und Verdrahtung \n- Evaluieren der Ergebnisqualität und Rechenzeit- und Speicheranforderungen der eigenen \nWerkzeuge im Vergleich zu existierenden Implementierungen",
    "Qualifikationsziele": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden eigenständig \nHardware-Entwurfswerkzeuge für eine vorgegebene Zieltechnologie von integrierten \nSchaltungen erstellen. Sie können ihre Werkzeuge bezüglich verschiedener Gütemaße \nevaluieren und mit anderen existierenden Implementierungen vergleichen.",
    "Vorraussetzungen": "Empfohlen: Der erfolgreiche Besuch bzw. die aktive parallele Teilnahme an der \nVeranstaltung “Algorithmen für Hardware-Entwurfswerkzeuge” ist dringend empfohlen.",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nModulhandbuch B. Sc./M. Sc. Informatik  639 \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Bereitgestellte wissenschaftliche Arbeiten zu den vorgeschlagenen Basisverfahren."
  },
  {
    "Modulname": "Implementierung und Forensik und Mediensicherheit",
    "Modul Nr.": "20-00-0603",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Praktische Anwendung von Algorithmen in den Bereichen Robuste Hashverfahren, Image \nRegistration, File Forensik, Multimedia Kryptographie, Web Content Retrieval",
    "Qualifikationsziele": "Die Studenten implementieren ausgewählte Methoden aus der Multimedia Sicherheit und \nder IT Forensik in verschiedenen aktuellen Hochsprachen abhängig von der konkreten \nAufgabenstellung. Ziel ist es, abstrakte Algorithmen und Problemstellungen praxisnah \numsetzen und lösen zu lernen. Ziel ist hierbei insbesondere, eine effiziente Lösung zu \nfinden, die das gegebene Problem zuverlässig löst. Die Studenten werden vertraut mit dem \nProzess der softwaretechnischen Problemlösung praxisnaher Fragenstellungen der IT \nForensik und Multimedia Sicherheit.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nModulhandbuch B. Sc./M. Sc. Informatik  641 \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Watermarking \nPetticolas, Katzenbeisser; Information Hiding Techniques for Steganography and Digital \nWatermarking, Artech House Computer Security Series, ISBN: 1580530354, 2000 \nCox I, Miller M, Bloom J, Fridrich J, Kalker T.;  Digital watermarking and steganography. \nMorgan Kaufmann, USA, 2007 \nForensik \nAlexander Geschonneck: \"Computer-Forensik\". 6., aktualisierte und erweiterte Auflage, \ndpunkt.verlag GmbH, 2014. ISBN: 978-3864901331 \nBrian Carrier, File System Forensic Analysis, Addison Wesley,2005"
  },
  {
    "Modulname": "Praktikum Smartphone Security",
    "Modul Nr.": "20-00-0615",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Dieses Praktikum bietet verschiedene Programmierprojekte auf dem aktuellen Smartphone \nBetriebssystem Android: \n● Entwicklung/Implementierung von ausgewählten Software Angriffen \n● Entwicklung von sicheren Benutzerapplikationen \n● Einspielen von Kernelerweiterungen \n● Systemprogrammierung",
    "Qualifikationsziele": "Durch die erfolgreiche Teilnahme an dieser Veranstaltung erlangen Studenten Kenntnissen \nund praktischer Erfahrungen mit Sicherheitsmechanismen in moderne Smartphone \nBetriebssystemen. Außerdem erwerben sie generelle Erfahrung in Systemprogrammierung.",
    "Vorraussetzungen": "Empfohlen:  \n● Grundlagen Betriebssysteme \n● Programmierkenntnisse in C++ und Java",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  643 \nStandard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Praktikum: Zuverlässige Softwaresicherheit für mobile Endgeräte",
    "Modul Nr.": "20-00-0640",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "● Einführung in Android und in die Programmierung von Apps \n● mögliche Bedrohungen der Privatheit durch die Ausführung von Apps \n● Entdecken möglicher Informationslecks durch Informationsflussanalysen \n● statische und dynamische Sicherheitsanalysen \n● Proof-Carrying-Code \n● eigenständige Entwicklung von Apps und Sicherheitsanalyse dieser Apps  \n● eigenständige Erweiterung einer bestehenden Infrastruktur zur formal fundierten \nSicherheitsanalyse von Android Apps",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende grundlegende \nKonzepte von Android wie das Berechtigungssystem.  Sie verstehen Sicherheitsprobleme, die \ndurch die Ausführung von Apps entstehen können und verstehen wie diese durch \nInformationsflussanalysen verhindert werden.  Sie verstehen die Vorteile der Verwendung \nvon Proof-Carrying Code.  Sie können Apps eigenständig entwickeln und die durch ihre \nAusführung entstehenden Informationsflüsse bezüglich Privatheitsanforderungen \nevaluieren. Sie können Erweiterungen für eine existierende Sicherheitsinfrastruktur \nentwickeln und funktionsfähig integrieren.",
    "Vorraussetzungen": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern \ndes Bachelorstudiengangs Informatik, insbesondere Programmierkenntnisse in Java und die \nFähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  645 \nStudienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Distributed Software Systems \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "ausgewählte Konferenz- und Zeitschriftenartikel"
  },
  {
    "Modulname": "Praktikum zur Technischen Informatik",
    "Modul Nr.": "20-00-0647",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Teilnehmerinnen und Teilnehmer bearbeiten alleine oder in einer Kleingruppe eigenständig \neine individuell gestellte praktische Aufgabe aus dem Bereich der technischen Informatik. \nDie Aufgaben sind dabei in der Regel Programmier- und/oder Hardware-\nEntwicklungsarbeiten angelehnt an die aktuellen Forschungen am Fachgebiet für \nEingebettete Systeme und ihre Anwendungen.",
    "Qualifikationsziele": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden eigenständig \nein komplexeres Problem aus dem Bereich der Technischen Informatik lösen. Sie können die \nQualität ihrer Lösung evaluieren und mit anderen bestehenden Lösungen vergleichen.",
    "Vorraussetzungen": "Empfohlen: Hängt von der konkreten Aufgabe ab. Typische empfohlene Veranstaltungen \nsind “Digitaltechnik”, “Rechnerorganisation”, “Architekturen und Entwurf von \nRechnersystemen” und/oder “Einführung in Compilerbau” und “Fortgeschrittener \nCompilerbau”",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nModulhandbuch B. Sc./M. Sc. Informatik  647 \nM. Sc. Informatik \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird spezifisch für die gestellte Aufgabe ausgewählt."
  },
  {
    "Modulname": "Serious Games Projektpraktikum",
    "Modul Nr.": "20-00-0649",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "In dem Projektpraktikum werden für aktuelle Themen aus dem Bereich Serious Games \n(beispielsweise für Bildung, Gesundheit und Sport) Konzepte entwickelt und prototypisch \nrealisiert. \nDie Themen haben jeweils Bezug zur aktuell laufenden Forschung des Fachgebiets, teilweise \nin Kooperation mit Partnern aus der Games Industrie und/oder Serious Games Anwendern.",
    "Qualifikationsziele": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden eine praktische \nAufgabenstellung aus dem „Serious Games“-Umfeld eigenständig bearbeiten sowie die dafür \nnötige Software konzipieren und prototypisch umsetzen. Zusätzlich erwerben sie praktisches \nWissen im Bereich des Projektmanagements, dass sie nicht nur auf ihr eigenes Thema \nanwenden, sondern auch auf zukünftige Projekte transferieren können. Außerdem können \nsie die von ihnen erzielten Ergebnisse einem Publikum unter Anwendung von verschiedenen \nPräsentationstechniken vorstellen sowie eine dazugehörige Fachdiskussion aktiv bestreiten.",
    "Vorraussetzungen": "Empfohlen: Programmierkenntnisse (die Programmiersprache ist jeweils abhängig von \nThema und kann teilweise frei gewählt werden).",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  649 \nStandard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Keine"
  },
  {
    "Modulname": "Software Development Tools",
    "Modul Nr.": "20-00-0673",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Die Entwicklung von Werkzeugen zur Unterstützung der Entwicklung von Software.",
    "Qualifikationsziele": "Gewinnen von praktischer Erfahrung in der Entwicklung von Softwareentwicklungswerkzeugen. \nVerstehen der Grenzen von Softwareentwicklungswerkzeugen.",
    "Vorraussetzungen": "Empfohlen: Software Engineering",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0673-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0673-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.  \nModulhandbuch B. Sc./M. Sc. Informatik  651",
    "Literatur": ""
  },
  {
    "Modulname": "Web Application Security and Privacy Praktikum",
    "Modul Nr.": "20-00-0705",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Dieses Praktikum zeigt den Studierenden an Beispielen, wie eine Web-Anwendung nach \nheutigem Kenntnisstand sicher und möglichst datenschutzfreundlich entwickelt und \nbetrieben werden kann. \nIm Laufe der Veranstaltung werden typische Softwareprodukte für Web-Anwendungen wie \nApache, MySQL, PHP betrachtet. Auch Schwachstellenscanner wie z.B. IBM AppScan \nwerden genutzt. Die genauer betrachteten Schwachstellen richten sich immer nach der \naktuell in OWASP aufgeführten TOP 10. Es werden u.a. Cross Site Scripting, SQL Injection \nund Cross Site Request Forgery behandelt. \nAn eigenentwickelten Web-Anwendungen sollen Schwachstellen aufgedeckt und behoben \nwerden.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung können Studierende bekannte \nSchwachstellen in Web-Anwendungen erkennen sowie verstehen, mit dem Ziel diese zu \nbeheben.  \nSie sind in der Lage Web-Anwendung so zu entwickeln das sie gängigen \nSicherheitskonzepten genügen und wichtige Datenschutzrichtlinien beachten.",
    "Vorraussetzungen": "Empfohlen:  \n-  Funktionale und objektorientierte Programmierkonzepte \n-  Algorithmen und Datenstrukturen \n-  Computersystemsicherheit \n- Einführung in die IT-Sicherheit \n- Einführung in die Kryptographie   \nModulhandbuch B. Sc./M. Sc. Informatik  653",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. IT Sicherheit \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "- David Basin, Patrick Schaller, Michael Schläpfer, “Applied Information Security”, Springer-\nVerlag, 2011 \n- Paco Hope, Ben Walther, “Web Security Testing Cookbook”, O’Reilly, 2008"
  },
  {
    "Modulname": "Softwaresecurity durch Laufzeitüberwachung",
    "Modul Nr.": "20-00-0719",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Benutzer vertrauen Computeranwendungen in zunehmendem Maße sensible Daten wie z.B. \nKontakt- und Kontodaten oder Bilder an. Bösartige oder fehlerhafte Anwendungen können \ndurch Missbrauch solcher Daten großen Schaden verursachen. Es ist somit wünschenswert, \nNutzeranforderungen an Informationssicherheit und Privacy durch geeignete Mechanismen \nsicherzustellen. Mit Laufzeitüberwachung existiert eine Technik für Mechanismen, die zur \nLaufzeit einer Anwendung deren Verhalten überwachen und geeignete Gegenmaßnahmen \nergreifen sobald nötig. Besondere Bedeutung für die Informationssicherheit kommt zunehmend \nden verteilten Systemen wie sozialen Netzen und Cloud-Speichernlösungen zu. \nLaufzeitüberwachung für derartige verteilte Systeme ist der Fokus dieses Praktikums. \nDieses Praktikum bietet Studenten die Möglichkeit, praktische Erfahrung beim Implementieren, \nEinsetzen und Evaluieren von Mechanismen zur Laufzeitüberwachung zu erlangen.",
    "Qualifikationsziele": "Praktische Erfahrung mit Laufzeitüberwachung zur Anwendungssicherheit, insbesondere zu: \nInlining von Mechanismen zur Laufzeitüberwachung; formale Spezifikation von \nSicherheitsanforderungen; Laufzeitüberwachung von Sicherheit in verteilten Systemen; \nSchwachstellenanalyse von Laufzeitmechanismen; Testen und Evaluation von \nLaufzeitmechanismen",
    "Vorraussetzungen": "Empfohlen: \nProgrammiererfahrung in Java; Informatikkenntnisse entsprechend dem 4. Semester des \nBachelorstudiengangs",
    "Prüfungsform": "Modulabschlussprüfung: \n  Modulprüfung (Studienleistung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  655",
    "Voraussetzung für die Vergabe von Kreditpunkten": "",
    "Benotung": "Modulabschlussprüfung:  \n  Modulprüfung (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Automatisierung von Code Generierung",
    "Modul Nr.": "20-00-0721",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "unregelmäßig",
    "Sprache": "Englisch",
    "Lerninhalt": "In beschränkten Anwendungsdomänen kann die Codegenerierung in Teilen automatisiert \nwerden. Beispiele sind das automatische Differenzieren, domänenspezifische Sprachen, aber \nauch die Übersetzung von Spracherweiterungen in niedrigere Abstraktionsebenen. In dieser \nVeranstaltung werden aktuelle Themen aus diesem Anwendungskreis behandelt.",
    "Qualifikationsziele": "Nach dem erfolgreichen Besuch der Vorstellung haben die Studierenden eine Fragestellung \naus diesem Anwendungsgebiet aufgearbeitet und prototypisch implementiert.",
    "Vorraussetzungen": "Empfohlen: Empfohlen werden Grundkenntnisse der parallelen Programmierung sowie des \nCompilerbaus.",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Distributed Software Systems \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nModulhandbuch B. Sc./M. Sc. Informatik  657 \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Richtet sich nach dem Projektinhalt."
  },
  {
    "Modulname": "Forschungsprojekt Knowledge Engineering und Maschinelles Lernen",
    "Modul Nr.": "20-00-0751",
    "Kreditpunkte": "12 CP",
    "Arbeitsaufwand": "360 h",
    "Selbststudium": "240 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "An einem individuellen Projekt soll das eigenständige Forschen in den Gebieten Knowledge \nEngineering, Künstliche Intelligenz, maschinelles Lernen und Data Mining unter Anleitung \nerlernt werden. Dabei werden die Themen jeweils in Zusammenarbeit mit dem Betreuer \ndefiniert.  \nMögliche Themenfelder:  \n● Maschinelles Lernen und Data Mining  \n● Induktives Regel-Lernen  \n● Learning from Preferences  \n● Multilabel Classification  \n● Information Extraction  \n● Web Mining  \n● Semantic Web  \n● Game Playing  \nKonkrete Aufgabenstellungen werden individuell vereinbart, und das Projekt kann jederzeit \nbegonnen werden.  \nStudenten, die an einem derartigen Projekt interessiert sind, wenden sich bitte an einen \nMitarbeiter des Fachgebiets  \nKnowledge Engineering (http://www.ke.tu-darmstadt.de).",
    "Qualifikationsziele": "Nach Bearbeitung dieses Projekts sollten die Studierenden in der Lage sein \n● selbständig kleinere Forschungsarbeiten in den Bereichen Knowledge Engineering, \nKünstliche Intelligenz, maschinelles Lernen und Data Mining durchzuführen \n● diese Ergebnisse in einem Abschlußreport zu dokumentieren \nModulhandbuch B. Sc./M. Sc. Informatik  659 \n● in einem wissenschaftlichen Vortrag zu präsentieren \n●  in einer kritischen Diskussion zu verteidigen",
    "Vorraussetzungen": "Empfohlen: Grundlegende Kenntnisse in den Bereichen Knowledge Engineering, Künstliche \nIntelligenz, Data Mining und maschinelles Lernen sind hilfreich. Es werden außerdem \ngrundlegende Kenntnisse in einer Programmiersprache (z.B. Java o.ä.) vorausgesetzt.  \nDarüber hinaus ist aber besonders die Motivation zur selbstständigen Arbeit und das \nInteresse an aktuellen Forschungsfragen relevant.",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Internet- und Web-basierte Systeme \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Lernende Roboter: Integriertes Projekt, Teil 1",
    "Modul Nr.": "20-00-0753",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In \"Lernende Roboter: Integriertes Projekt, Teil 1\" wird zunächst von Studierenden unter \nAnleitung eine aktuelle Problemstellung des Roboter-Lernens erarbeitet, welche den \nForschungsinteressen der Studierenden entspricht, und eine Literaturstudie durchgeführt. \nBasierend auf diesen Vorarbeiten werden ein Projektplan ausgearbeitet, die notwendigen \nAlgorithmen erprobt und eine prototypische Realisierung in Simulation erstellt.",
    "Qualifikationsziele": "Nach erfolgreichen Abschluss der Lehrveranstaltung, können Studierende unabhängig kleine \nForschungsprojekte im Bereich Robot Learning aufbauen und in Simulation erproben.",
    "Vorraussetzungen": "Empfohlen: Gleichzeitiger oder vorheriger Besuch der Vorlesung Robot Learning.",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Autonome Systeme \nM. Sc. Visual Computing \nModulhandbuch B. Sc./M. Sc. Informatik  661 \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Lernende Roboter: Integriertes Projekt, Teil 2",
    "Modul Nr.": "20-00-0754",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In \"Lernende Roboter: Integriertes Projekt, Teil 2\" werden die Lösungen aus dem \"Teil 1\" \nvervollständigt und auf einen realen Roboter angewandt. Ein wissenschaftlicher Artikel wird \nüber die Fragestellung, Methoden und Ergebnisse geschrieben sowie ggf. eingereicht.",
    "Qualifikationsziele": "Nach erfolgreichem Abschluss der Lehrveranstaltung können Studierende unabhängig kleine \nForschungsprojekte im Bereich Robot Learning aufbauen und in Simulation erproben.",
    "Vorraussetzungen": "Empfohlen: Gleichzeitiger oder vorheriger Besuch der Vorlesung Robot Learning.",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Autonome Systeme \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nModulhandbuch B. Sc./M. Sc. Informatik  663 \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Simulation in der Computergraphik",
    "Modul Nr.": "20-00-0758",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "In diesem Praktikum sollen Verfahren für die dynamische Simulation in der \nComputergraphik entwickelt und implementiert werden. Anwendungsgebiete sind \nbeispielsweise Flüssigkeiten, Rauch, Feuer und deformierbare Festkörper. Zu Beginn der \nVeranstaltung werden die möglichen Themen kurz vorgestellt. Die Teilnehmer können sich \ndann ein Thema (in Gruppen von 2-4 Personen) auswählen. Zu jedem Thema gibt es einen \nBetreuer, mit dem regelmäßige Treffen stattfinden, um Probleme zu besprechen. Am Ende \ndes Praktikums präsentiert jede Gruppe ihre Ergebnisse. \nDie Themen des Praktikums sind: \n- Mehrkörpersysteme \n- Simulation deformierbarer Körper  \n- Kleidungssimulation \n- Flüssigkeitssimulation mit der Methode Smoothed Particle Hydrodynamics (SPH) \n- Flüssigkeitssimulation mit dem Euler'schen Ansatz \n- Brüche \n- Punktbasierte Simulation von deformierbaren Körpern \n- Kollisionserkennung \n- Kollisionsbehandlung",
    "Qualifikationsziele": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden \nSimulationsverfahren eigenständig implementieren und analysieren. Sie können ein \nSimulationssystem entwerfen und umsetzen. Außerdem können sie effizienten Code \nschreiben.",
    "Vorraussetzungen": "Empfohlen: Gute Kenntnisse und praktische Erfahrungen mit C/C++ und objektorientierter \nProgrammierung; grundlegende Kenntnisse von Numerik, Algorithmen, Datenstrukturen \nund Computergraphik (z.B. GDV I)  \nModulhandbuch B. Sc./M. Sc. Informatik  665",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekannt gegeben"
  },
  {
    "Modulname": "Projektpraktikum Programmierung Massiv Paralleler Systeme",
    "Modul Nr.": "20-00-0763",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Im Rahmen dieses Projektpraktikums werden größere ausgewählte Themen aus dem \nBereich der Programmierung massiv-paralleler Systeme (wie z.B. GPUs) von den \nStudierenden in Gruppen bearbeitet und am Ende des Projektpraktikums in einem Vortrag \nvorgestellt. Die konkreten Themen wechseln von Semester zu Semester.",
    "Qualifikationsziele": "Nach dem erfolgreichen Abschluss des Projektpraktikums sind die Studenten in der Lage \ngroße massiv-parallele Projekte zu bearbeiten, welche den Umfang der meisten anderen \nProjekte während des Studiums weit übersteigen. Hierzu können sie aktuelle Techniken \nanalysieren, modifizieren und anwenden.",
    "Vorraussetzungen": "Empfohlen: gute C/C++ Programmierkenntnisse, Grundlagen der massiv-parallelen \nProgrammierung (z.B. aus der Veranstaltung Programmierung Massiv-Paralleler \nProzessoren)",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  667 \nB. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekanntgegeben"
  },
  {
    "Modulname": "Projektpraktikum Capturing Reality",
    "Modul Nr.": "20-00-0764",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Im Rahmen dieses Projektpraktikums werden größere ausgewählte Themen aus dem \nBereich Capturing Reality - also an der Schnittstelle von Computer Vision und \nComputergraphik - von den Studierenden in Gruppen bearbeitet und am Ende des \nProjektpraktikums in einem Vortrag vorgestellt. Die konkreten Themen wechseln von \nSemester zu Semester.",
    "Qualifikationsziele": "Im Rahmen des Projektpraktikums lernen Studierende, eine umfangreiches Problem an der \nSchnittstelle von Computergraphik und Computer Vision im Team zu lösen. Hierzu können \nsie aktuelle Techniken analysieren, modifizieren und anwenden.",
    "Vorraussetzungen": "Empfohlen: empfohlen wird der Besuch der Veranstaltung Capturing Reality sowie \ngrundlegende Programmierkenntnisse in C/C++",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nModulhandbuch B. Sc./M. Sc. Informatik  669 \nM. Sc. Informatik \nM. Sc. Visual Computing \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "wird in der Veranstaltung bekanntgegeben"
  },
  {
    "Modulname": "Praktikum: Formale Spezifikation und Verifikation in Isabelle/HOL",
    "Modul Nr.": "20-00-0778",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Wintersemester",
    "Sprache": "Englisch",
    "Lerninhalt": "● Logik höherer Stufe (HOL) \n● Einführung in das Werkzeug Isabelle/HOL \n● Definition von Typen, Funktionen, Mengen und anderen grundlegenden Konzepten in der \nSpezifikationssprache von Isabelle/HOL \n● Führen von Beweisen für einfache Aussagen in Isabelle/HOL \n● Modellierung von Systemen und Eigenschaften sowie Beweis von Aussagen von \nschrittweise wachsender konzeptioneller Komplexität \n● Diskussion und Bewertung von formalen Modellen und Beweisen",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende die Formalismen \nauf denen Isabelle/HOL basiert, und sie könnnen dieses moderne Verifikationswerkzeug \nverwenden.  Sie können in Isabelle/HOL sowohl eigenständig als auch im Team formale \nModelle von Systemen und Eigenschaften konstruieren und Aussagen beweisen.  Sie können \nerstellte formale Modelle und Beweise beurteilen, anderen präsentieren und im Team \nfundiert diskutieren.",
    "Vorraussetzungen": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern \ndes Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und \nFähigkeit mit formalen Sprachen und Kalkülen umzugehen",
    "Prüfungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung \noder vergleichbare Leistungen)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  671",
    "Benotung": "Standard",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Distributed Software Systems \nB. Sc. Computational Engineering \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "● T. Nipkow, L. C. Paulson, M. Wenzel: Isabelle/HOL: A Proof Assistant for Higher-Order \nLogic; Springer \n● online documentation material on Isabelle and Higher-Order Logic (HOL) \nDie Literaturempfehlungen werden kontinuierlich aktualisiert."
  },
  {
    "Modulname": "Usable Security und Usable Privacy",
    "Modul Nr.": "20-00-0787",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "- Fortgeschrittene Programmierkenntnisse \n- Erfahrung in der Softwareentwicklung mittels Human Centered Design \n- Vertiefung von benutzbaren Sicherheitskonzepten und -techniken \n- Erfahrung im Umgang mit verschiedenen Entwicklungswerkzeugen",
    "Qualifikationsziele": "In diesem Praktikum werden ausgewählte Sicherheitstechniken und Tools zur \nSicherheitseducation behandelt. Zum Beispiel: \n- verständliche Warnungen \n- graphische Passworte \n- Spiele, um Schutzmechanismen zu erlenen",
    "Vorraussetzungen": "Empfohlen: \n- Kenntnisse der entsprechenden Programmiersprache \n- Computersystemsicherheit Vorlesung \n- Interface Design \n- Idealerweise: Kryptographie Grundkenntnisse",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0787-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  673 \n  [20-00-0787-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Dynamische Kontrolle von Systemanforderungen",
    "Modul Nr.": "20-00-0797",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "- grundlegende Konzepte der dynamischen Kontrolle in verteilten Systemen \n- Einführung in Werkzeuge zur Laufzeitkontrolle wie CliSeAu, JavaMOP und Polymer \n- Spezifikation von Systemanforderungen in unterschiedlichen Formalismen \n- Kombination von dynamischen Kontrollmechanismen mit Zielprogrammen \n- zentrale vs dezentrale Kontrolle in verteilten Systemen \n- Protokolle zur Koordination zwischen dezentralen Kontrollmechanismen in verteilten \nSystemen \n- eigenständige Adaption von dynamischen Kontrollmechanismen für Zielprogramme \n- eigenständige Erweiterung einer bestehenden Infrastruktur zur dynamischen Kontrolle von \nAnforderungen in verteilten Systemen und Evaluation von Erweiterungen",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende \ngrundlegende Konzepte der dynamischen Kontrolle in verteilten Systemen. \nSie verstehen wie Schwachstellen in verteilten Softwaresystemen, wie z.B. Sicherheitslücken, \nmit Hilfe von dynamischen Kontrollen beseitigt werden können. Sie verstehen, wie \nAnforderungen als Politiken formalisiert werden können und können solche Formalisierungen \nvon Anforderungen in verschiedenen Sprachen durchführen. Sie können Mechanismen zur \ndynamischen Kontrolle für konkrete Systeme und Anforderungen einsetzen und adaptieren. \nSie können Mechanismen zur dynamischen Kontrolle entwickeln, evaluieren und mit anderen \nMechanismen integrieren.",
    "Vorraussetzungen": "Empfohlen: \nInformatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiengangs Informatik, insbesondere Programmierkenntnisse in Java und die \nFähigkeit, mit formalen Sprachen umzugehen",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  675 \nBausteinbegleitende Prüfung: \n  [20-00-0797-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModule Exclusions: \n20-00-0719 - Dynamic Enforcement of Software Security",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0797-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Zuverlässige Softwaresicherheit für mobile Endgeräte",
    "Modul Nr.": "20-00-0799",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "- Einführung in Android und in die Programmierung von Apps \n- mögliche Bedrohungen der Privatheit durch die Ausführung von Apps \n- Entdecken möglicher Informationslecks durch Informationsflussanalysen \n- statische und dynamische Sicherheitsanalysen \n- Proof-Carrying-Code \n- eigenständige Entwicklung von Apps und Sicherheitsanalyse dieser Apps \n- eigenständige Erweiterung einer bestehenden Infrastruktur zur formal fundierten \nSicherheitsanalyse von Android Apps",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende grundlegende \nKonzepte von Android wie das Berechtigungssystem. Sie verstehen Sicherheitsprobleme, die \ndurch die Ausführung von apps entstehen können und verstehen wie diese durch \nInformationsflussanalysen verhindert werden. Sie verstehen die Vorteile der Verwendung von \nProof-Carrying-Code. Sie können apps eigenständig entwickeln und die durch ihre Ausführung \nentstehenden Informationsflüsse bezüglich Privatheitsanforderungen evaluieren. \nSie können Erweiterungen für eine existierende Sicherheitsinfrastruktur entwickeln und \nfunktionsfähig integrieren.",
    "Vorraussetzungen": "Empfohlen: \nInformatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiengangs Informatik, insbesondere Programmierkenntnisse in Java und die \nFähigkeit mit formalen Sprachen und Kalkülen umzugehen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  677 \n  [20-00-0799-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModule Exclusions: \n20-00-0640 - Software Security for Mobile Devices",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0799-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nM. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum Compilerbau",
    "Modul Nr.": "20-00-0911",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Eigenständiges Implementieren eines Compilers bzw. von wesentlichen Teilen davon (z.B. \neinzelne Optimierungspasses oder Back-Ends).",
    "Qualifikationsziele": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden wesentliche Teile \nvon modernen Compilern selbständig implementieren und ggf. in existierende Compiler-\nFrameworks integrieren. Dabei können sie ihre Kenntnisse sowohl von compiler-spezifischem \nWissen (beispielsweise über verschiedene Zwischendarstellungen) als auch allgemeinen \nProgrammiertechnik (z.B. Design Patterns) anwenden und vertiefen.",
    "Vorraussetzungen": "Empfohlen: Erfolgreicher Besuch der Vorlesungen „Rechnerorganisation“, „Einführung in den \nCompilerbau“ und „Fortgeschrittener Compilerbau“ bzw. entsprechende Kenntnisse aus anderen \nStudiengängen",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0911-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0911-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nB. Sc. Computational Engineering \nModulhandbuch B. Sc./M. Sc. Informatik  679 \nM. Sc. Computational Engineering \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nM. Sc. Informationssystemtechnik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Wird jeweils passend für die aktuelle Aufgabenstellung bekanntgegeben (z.B. wissenschaftliche \nArbeiten zu Optimierungsverfahren, Beschreibung eines Zielprozessors)"
  },
  {
    "Modulname": "Praktikum zu Android-Sicherheit",
    "Modul Nr.": "20-00-0916",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "- Anwenden einfacher Konzepte der statischen und dynamischen Programmanalyse im Bereich \nIT-Sicherheit \n- Eigenständiges Konstruieren von Werkzeugen zur Sicherheitsanalyse von Smartphone-\nAnwendungen \n- Eigenständiges Experimentieren im Entwurfsraum zur Optimierung der Analyse auf reale \nAnwendungen und Anwendungsmärkte \n- Evaluation der erstellten Analysen im Hinblick auf Performance sowie True- und False-\nPositive-Rate \n- Bewertung des durch einen Einsatz der erstellten Analyse erreichbaren Schutzgrades im \nVergleich zu alternativen Lösungsmöglichkeiten",
    "Qualifikationsziele": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden eigenständig \naktuelle Probleme der Anwendungssicherheit auf Smartphones mit Hilfe einfacher statischer \noder dynamischer Programmanalysen lösen. Sie können verschiedene Analysetechniken im \nHinblick auf konkrete Probleme abwägen, die Analyse implementieren, und das Ergebnis \nwissenschaftlich bewerten und zu alternativen Lösungsmöglichkeiten in Bezug setzen. Die \nStudenten sind in der Lage, die gestellten Aufgaben in weitgehend selbstständigen Teams zu \nlösen und ihre Ergebnisse in einer Präsentation darzustellen und in einer Fachdiskussion zu \nverteidigen.",
    "Vorraussetzungen": "Empfohlen: \nKenntnisse in objektorientierter Programmierung mit Java \nBesuch der Vorlesungen: \n“Designing Code Analyses for Large Software Systems” (DECA), “Implementing Code Analyses \nfor Large Software Systems” (ICA) oder der früheren Veranstaltung “Automated Code Analysis \nfor Large Software Systems” (ACA)",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  681 \nBausteinbegleitende Prüfung: \n  [20-00-0916-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0916-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen \nStudiengängen verwendet werden.",
    "Literatur": "Papers zu den jeweiligen Sicherheitsproblemen und möglichen Analysetechniken werden \npassend zum jeweiligen Thema ausgegeben."
  },
  {
    "Modulname": "Praktikum Kryptographie und Komplexitätstheorie",
    "Modul Nr.": "20-00-0917",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Ausgewählte Themen der Kryptographie mit Praxisbezug erarbeiten \nUmsetzung und Implementierung von kryptographischen Verfahren \n(Weiter-)Entwicklung von Angriffen auf ausgewählte kryptographische und \nsicherheitstechnische Verfahren",
    "Qualifikationsziele": "Nach erfolgreicher Absolvierung können die Teilnehmer Probleme beim Übergang von \nmathematischen Beschreibung auf Implementierungsebene erfassen. Sie erlernen -je nach \nProbleme- vertiefte Kenntnisse in einer Programmiersprache kennen. DieTeilnehmer können \nweitgehend selbstständig (Implementierungs-)Lösungen erarbeiten und umsetzen, insbesondere \nhinsichtlich sicherheitsrelevanter Aspekte.",
    "Vorraussetzungen": "Empfohlen: \nEinführung in die Kryptographie",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0917-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0917-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  683 \nB. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen \nStudiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Projektpraktikum: Dynamische Kontrolle von Systemanforderungen",
    "Modul Nr.": "20-00-0918",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "- grundlegende Konzepte der dynamischen Kontrolle in verteilten Systemen \n- Einführung in Werkzeuge zur Laufzeitkontrolle wie CliSeAu, JavaMOP und Polymer \n- Spezifikation von Systemanforderungen in unterschiedlichen Formalismen \n- Kombination von dynamischen Kontrollmechanismen mit Zielprogrammen \n- zentrale vs dezentrale Kontrolle in verteilten Systemen \n- Protokolle zur Koordination zwischen dezentralen Kontrollmechanismen in verteilten \nSystemen \n- eigenständige Adaption von dynamischen Kontrollmechanismen für Zielprogramme \neigenständige Erweiterung einer bestehenden Infrastruktur zur dynamischen Kontrolle von \nAnforderungen in verteilten Systemen und Evaluation von Erweiterungen",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende grundlegende \nKonzepte der dynamischen Kontrolle in verteilten Systemen. \nSie verstehen wie Schwachstellen in verteilten Softwaresystemen, wie z.B. Sicherheitslücken, \nmit Hilfe von dynamischen Kontrollen beseitigt werden können. Sie verstehen, wie \nAnforderungen als Politiken formalisiert werden können und können solche Formalisierungen \nvon Anforderungen in verschiedenen Sprachen durchführen. Sie können Mechanismen zur \ndynamischen Kontrolle für konkrete Systeme und Anforderungen einsetzen und adaptieren. \nSie können Mechanismen zur dynamischen Kontrolle entwickeln, evaluieren und mit anderen \nMechanismen integrieren.",
    "Vorraussetzungen": "Empfohlen: \nInformatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des \nBachelorstudiengangs Informatik, insbesondere Programmierkenntnisse in Java und die \nFähigkeit, mit formalen Sprachen umzugehen \nModulhandbuch B. Sc./M. Sc. Informatik  685",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0918-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0918-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nM. Sc. Wirtschaftsinformatik \nB. Sc. Psychologie in IT \nJoint B.A. Informatik \nB. Sc. Sportwissenschaft und Informatik \nM. Sc. Sportwissenschaft und Informatik \nKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet \nwerden.",
    "Literatur": "Ausgewählte Konferenz- und Zeitschriftenartikel"
  },
  {
    "Modulname": "Projekt-Praktikum Knowledge Engineering und Maschinelles Lernen",
    "Modul Nr.": "20-00-0919",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Im Rahmen des Projektpratikums implementieren Studierende eine vordefinierte, größere \nAufgabe aus den Gebieten Knowledge Engineering, Künstliche Intelligenz, maschinelles \nLernen und Data Mining. Dabei werden die Themen jeweils in Zusammenarbeit mit dem \nBetreuer definiert. \nMögliche Themenfelder: \n- Maschinelles Lernen und Data Mining \n- Induktives Regel-Lernen \n- Learning from Preferences \n- Multilabel Classification \n- Information Extraction \n- Web Mining \n- Semantic Web \n- Game Playing \nKonkrete Aufgabenstellungen werden individuell vereinbart, und das Praktikum kann jederzeit \nbegonnen werden.",
    "Qualifikationsziele": "Nach Bearbeitung dieses Projekts sollten die Studierenden in der Lage sein \n- selbständig größere Programmieraufgaben in den Bereichen Knowledge Engineering, \nKünstliche Intelligenz, maschinelles Lernen und Data Mining durchzuführen \n- mit Hilfe der implementierte Instrumente wissenschaftliche Experimente und Evaluierungen \ndurchzuführen",
    "Vorraussetzungen": "Empfohlen: Grundlegende Kenntnisse in den Bereichen Knowledge Engineering, Künstliche \nIntelligenz, Data Mining und maschinelles Lernen sind hilfreich. Es werden außerdem \ngrundlegende Kenntnisse in einer Programmiersprache (z.B. Java o.ä.) vorausgesetzt. \nModulhandbuch B. Sc./M. Sc. Informatik  687 \nDarüber hinaus ist aber besonders die Motivation zur selbstständigen Arbeit und das Interesse \nan aktuellen Forschungsfragen relevant.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0919-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0919-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Langzeitsicherheit",
    "Modul Nr.": "20-00-0928",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Langzeitsicherheit: Implementierungen und Verbesserungen von Langzeitsicheren Verfahren",
    "Qualifikationsziele": "Anwendungsnahe Erfahrung mit Langzeitsicheren Verfahren",
    "Vorraussetzungen": "Empfohlen: \nEinführung in die Kryptographie, Programmierkentnisse",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0928-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0928-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Begleitendes Praktikum zu Digitaltechnik",
    "Modul Nr.": "20-00-0943",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "30 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Diese optionale Veranstaltung richtet sich an Studierende, die die in der Vorlesung \nDigitaltechnik behandelten Themen praktisch intensiver vertiefen möchten. Sie ist nicht für das \nBestehen der Prüfung in Digitaltechnik erforderlich. \n- Entwurf und Umsetzung von einfachen kombinatorischen und sequentiellen Schaltungen. \n- Einsatz von Hardware-Beschreibungssprachen: Modellierung, Simulation, Synthese und \nVerifikation kombinatorischer und sequentieller Schaltungen. \n- Praktischer Einsatz von FPGAs und der erforderlichen Entwurfswerkzeuge: Experimente an \nrealer Hardware und Einführung in den Umgang mit industriellen EDA/CAD-Werkzeugen.",
    "Qualifikationsziele": "Nach erfolgreichem Abschluss des Praktikums können die Studierenden eigenständig einfache \nkombinatorische und sequentielle Digitalschaltungen entwerfen und die Entwurfswerkzeuge zu \nihrer Simulation und Synthese nutzen. Sie können die Ergebnisse interpretieren und für die \nVerfeinerung der Entwürfe nutzen. Sie können die erstellten Hardware-Beschreibungen auf \nFPGA-Prototypenplatinen übertragen und dort praktisch erproben.",
    "Vorraussetzungen": "Paralleler Besuch der Vorlesung Digitaltechnik",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0943-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  690",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0943-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktische Anwendungen zu Neuronale Informationsverarbeitung für Gehirn-Computer Schnittstellen",
    "Modul Nr.": "20-00-0945",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "* Praktische Anwendung der Signalverarbeitung in der neuronalen Bildgebung \n* Praktische Anwendung derMustererkennung für neuronale Bildgebungsverfahren \n* Praktische Anwendung von Gehirn-Computer Schnittstellen",
    "Qualifikationsziele": "Aufbauend auf der Vorlesung \"Neuronale Informationsverarbeitung für Gehirn-Computer \nSchnittstellen\", vermittelt dieser Kurs Studenten praktische Fähigkeiten im Bereich der \nNeurotechnik, Ein besonderer Fokus liegt dabei auf dem Bereich der Gehirn-Computer \nSchnittstellen.",
    "Vorraussetzungen": "Empfohlen: \nVorherige erfolgreiche Teilname an der Vorlesung \"Neuronale Informationsverarbeitung für \nGehirn-Computer Schnittstellen\"",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0945-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  692 \n  [20-00-0945-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Softwareprojekt Datenanalyse für natürliche Sprache",
    "Modul Nr.": "20-00-0948",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Modul Nr. 20-00-0948 Kreditpunkte 9 CP Arbeitsaufwand 270 h Selbststudium 180 h Moduldauer 1 Semester Angebotsturnus Jedes 2. Semester",
    "Lerninhalt": "Große Datenmengen sind heute eine wertvolle Informationsquelle. Allerdings ist nur durch die \nVerwendung von intelligenter Datenanalyse das volle Potential dieser Daten nutzbar. Solche \nMethoden ermöglichen es neue und praktisch nutzbare Informationen in großen \nnatürlichsprachlichen Daten zu identifizieren und unterstützen dadurch die \nEntscheidungsfindung bei komplexen Aufgaben. In diesem Projekt werden Studenten eigene \nIdeen und neue Softwaresysteme entwickeln die es ermöglichen Informationen für \nverschiedene Aufgaben aus einer großen Menge natürlichsprachlicher Texte (Big Data) zu \nextrahieren. Das jeweilige Rahmenthema der Veranstaltung wechselt jedes Semester und wird \nauf der Fachgebietshomepage bekannt gegeben. \nWeitere Informationen: https://www.ukp.tu-darmstadt.de/teaching/courses/software-project/",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, können sie \n- sprachtechnologische Frameworks verstehen und einsetzen, \n- komplexe NLP-Systeme eigenständig planen und umsetzen, \n- große natürlichsprachliche Daten analysieren und \n- die eigenen Ergebnisse mündlich und schriftlich präsentieren.",
    "Vorraussetzungen": "Empfohlen: \n- Programmierkenntnisse (Scala, Java oder Python) \n- Interesse mit Texten aus natürlicher Sprache zu arbeiten",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0948-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  694 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0948-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Forschungsprojekt Telekooperation",
    "Modul Nr.": "20-00-0950",
    "Kreditpunkte": "12 CP",
    "Arbeitsaufwand": "360 h",
    "Selbststudium": "240 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Forschungsrelevante Projektarbeit im Bereich \"Ubiquitous Computing\". \nAn einem individuellen Projekt soll das eigenständige Forschen unter Anleitung erlernt werden. \nDabei werden die Themen jeweils in Zusammenarbeit mit dem Betreuer definiert. \nMögliche Themenfelder: \n- Interaktion mit innovativen Endgeröten \n- P2P Netze \n- Sensornetze \n- Mobile Sensing \n- Middleware \n- Network Science \n- Voice Interfaces \nKonkrete Aufgabenstellungen werden individuell vereinbart, und das Projekt kann jederzeit \nbegonnen werden.",
    "Qualifikationsziele": "",
    "Vorraussetzungen": "Empfohlen: \nGrundlegende Kenntnisse im Bereich \"Ubiquitous Computing\" sind hilfreich (z.B. durch die \nVorlesungen P2P, TK1, TK3, KN1, KN2, HCI o.ä.) . Es werden außerdem grundlegende \nKenntnisse in einer Programmiersprache (z.B. Java, C# o.ä.) vorrausgesetzt. Darüber hinaus ist \naber besonders die Motivation zur selbstständigen Arbeit und das Interesse an aktuellen \nForschungsfragen relevant.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  696 \n  [20-00-0950-pj] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0950-pj] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc./M.Sc. Informatik \nM.Sc. Wirtschaftsinformatik \nB.Sc. Psychologie in IT \nJoint B.A. Informatik \nB.Sc./M.Sc. Sportwissenschaft und Informatik \nIm Rahmen fachübergreifender Angebote auch in anderen Studiengängen.",
    "Literatur": ""
  },
  {
    "Modulname": "Hardware-Entwurf für die Videoverarbeitung",
    "Modul Nr.": "20-00-0958",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "In diesem Praktikum geht es um die Verarbeitung von Videodatenströmen in Echtzeit durch \nspezialisierte Hardware-Einheiten. Solche Probleme sind hoch relevant im industriellen Einsatz \nund werden im Praktikum an einer Anwendung (Corner Detector) aus dem Bereich autonomer \nFahrzeuge vorgestellt. \nDie dafür nötigen Hardware-Beschleuniger sollen in einer Hardware-Beschreibungssprache \nentworfen, im Simulator validiert und dann in ein reales FPGA-basiertes Hardware-System \nintegriert werden. \nDabei werden als Kontrast zu den üblicherweise am FG ESA in Ausbildung und Forschung \neingesetzten Technologien hier die Hardware-Beschreibungssprache VHDL sowie FPGA-Systeme \nder Fa. Altera, speziell auch die Entwurfswerkzeuge Quartus und Qsys eingesetzt. Die \nVeranstaltung beginnt mit einer Kurzeinführung in die Sprache in VHDL und die EDA/CAD-\nWerkzeuge, Details sollen sich die Teilnehmenden anhand des bereitgestellten \nHintergrundmaterials selbst erarbeiten.",
    "Qualifikationsziele": "Kompetenzen &#91;de&#93;: \nNach erfolgreicher Teilnahme können die Studierenden Echtzeit-Hardwarebeschleuniger für \nden Bereich Videoverarbeitung in der Hardware-Beschreibungssprache VHDL entwerfen und \nmittels Simulation validieren. Sie können durch Verwendung der EDA/CAD-Werkzeuge ihre \nEntwürfe in ein rekonfigurierbares System-on-Chip integrieren. Sie können die entstehenden \nSysteme evaluieren und aus den beobachteten Charakteristika Rückschlüsse für die weitere \nEntwicklung ziehen.",
    "Vorraussetzungen": "Empfohlen: Erfolgreicher Besuch der Vorlesungen „Digitaltechnik“, „Rechnerorganisation“, \n„Architektur und Entwurf von Rechnersystemen“ und idealerweise auch „Visual Computing“ \nund „Computational Engineering und Robotik“ oder vergleichbare Kenntnisse aus anderen \nStudiengängen. \nModulhandbuch B. Sc./M. Sc. Informatik  698",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0958-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0958-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Embedded System Hands-On 1: Entwurf und Realisierung von Hardware/Software-Systemen",
    "Modul Nr.": "20-00-0959",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Diese Veranstaltung richtet sich an Studierende, die grundlegende praktische \nKenntnisse im Entwurf und der Realisierung eingebetteter Systeme erwerben möchten. \nNach der Einführung \nvon wichtigen Konzepten und Techniken wie \n- Grundlagen der Elektotechnik \n- Umgang mit Laborelektonik \n- Entwurf und Realisierung von elektronischen Schaltungen \n- Sensordaten: Erfassung und Verarbeitung \n- Bus-Systeme in eingebetteten Systemen \n- Programmieren und Debuggen von heterogenen eingebetteten Systemen \n- Linux Kernel in eingebetteten Systemen \nentwickeln die Teilnehmerinnen und Teilnehmer auf Basis des zuvor \nGelernten ein eigenes eingebettetes System. \nDabei stehen verschiedene \nProjekte zur Auswahl, welche je nach eigenen Interessen eine Fokusierung auf die Software- \noder die Hardware-Entwicklung erlauben.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme sind Studierende mit dem praktischen Entwurf und der \nRealisierung von eingebetten Hardware/Software-Systemen vertraut. \nDazu gehören auch Kenntnisse von elektrotechnischen Grundlagen und der Umgang mit \nLaborelektronik, die Verwendung von Beschreibungssprachen und EDA/CAD-Werkzeugen für \nden Hardware-Entwurf, das Programmieren und Debuggen speziell im Umfeld eingebetteter \nSysteme sowie auch der Einsatz von Linux als Betriebssystem in diesem Kontext. \nModulhandbuch B. Sc./M. Sc. Informatik  700",
    "Vorraussetzungen": "Empfohlen: Erfolgreicher Besuch der Vorlesungen „Digitaltechnik“, „Rechnerorganisation“, \n„Architektur und Entwurf von Rechnersystemen“, „Betriebssysteme“ und „Systemnahe und \nParallele Programmierung“ oder vergleichbare Kenntnisse aus anderen Studiengängen.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0959-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0959-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Embedded Systems Hands-On 2: Entwurf von Hardware-Beschleunigern für Systems-on-Chip",
    "Modul Nr.": "20-00-0968",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Diese Veranstaltung richtet sich an Studierende, die grundlegende \nKenntnisse im Design von Hardwarebeschleunigern im Rahmen eines Systems-on-Chip \nerhalten möchten. \nIm Rahmen des Praktikums erhalten Studierende umfangreiche Einblicke in \nrelevante Themen wie: \n- Treiber für selbst erstellte Hardwarebeschleuniger \n- Einbindung von in Bluespec erstellten Beschleunigern in ein Zynq SoC \n- Toolchains für Hardware- und Software-Komponenten \nDie Teilnehmer werden im Rahmen des Praktikums Aufgaben zu einem \ntypischen Einsatzgebiet von Hardwarebeschleunigung bearbeiten. \nEin typisches Anwendungsgebiet eines solchen Hardwarebeschleunigers ist \ndie Verarbeitung und Erfassung von Kamerabildern, zum Beispiel im Rahmen \nvon Stereo Vision.",
    "Qualifikationsziele": "Die Teilnehmenden erwerben die Fertigkeiten, das in vorangehenden Veranstaltungen \nerworbene Methodenwissen nun anzuwenden, um ein eingebettetes System mittels \nHardware/Software-Co-Entwurf zu realisieren.",
    "Vorraussetzungen": "Empfohlen: \nGrundlegende Kenntnisse im Umgang mit embedded Linux zum Beispiel aus \nESHO1. Bluespec SystemVerilog aus Architektur und Entwurf von Rechnersystemen (ex-CMS).",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \nModulhandbuch B. Sc./M. Sc. Informatik  702 \n  [20-00-0968-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0968-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Aspekte des Hochleistungsrechnens",
    "Modul Nr.": "20-00-0976",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Es werden anhand praktischer Aufgabenstellungen Prinzipien und Anwendungen von \nTechniken des Hochleistungsrechnens vertieft. Diese beinhalten z.B. Algorithmisches \nDifferenzieren, parallele Programmierung, parallele Algorithmen oder Leistungsanalyse \nparalleler Programme. Praktische Vertiefung der relevanten Thematik anhand eines Code \nBeispiels, sowie Dokumentation der Ergebnisse in einem Bericht.",
    "Qualifikationsziele": "Nachdem Studierende die Veranstaltung besucht haben, haben Sie  \n- fachliche Kenntnisse vertieft \n- praktische Fähigkeiten von ausgewählten Techniken des Hochleistungsrechnen erworben",
    "Vorraussetzungen": "Empfohlen: \nGrundlagen des parallelen Programmierens",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0976-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0976-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  704 \nB. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Projektpraktikum E-Learning",
    "Modul Nr.": "20-00-0979",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Im Projektpraktikum E-Learning werden vertiefte E-Learning Inhalte erarbeitet oder \nvorhandene E-Learning Elemente untersucht und verbessert. Die konkreten \nThemenschwerpunkte werden nach Absprache mit dem Betreuer festgelegt. Zu den möglichen \nThemen zählt beispielsweise die Entwicklung von innovativen Konzepten zur Nutzung von \nMoodle in Lehrveranstaltungen, die Visualisierung von Algorithmen und Datenstrukturen, oder \ndie Erstellung von E-Learning-Einheiten mittels einer Autorensoftware.",
    "Qualifikationsziele": "Nach dem Projektpraktikum haben die Teilnehmer_innen ein besseres Verständnis von E-\nLearning und umfangreicheres Wissen über die Gestaltung und Umsetzung von lernförderndem \nE-Learning erhalten.",
    "Vorraussetzungen": "Empfohlen: \nGute Programmierkenntnis in Java (oder je nach Themenwahl den How to Design Programs \nTeaching Languages aus der Vorlesung FOP oder von Moodle) sowie Kenntnis der gängigen \nDatenstrukturen und Algorithmen (etwa aus der Vorlesung AuD) werden vorausgesetzt.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0979-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0979-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%) \nModulhandbuch B. Sc./M. Sc. Informatik  706",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Projektpraktikum Deep Learning in der Computer Vision",
    "Modul Nr.": "20-00-0980",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Im Rahmen des Projektpraktikums werden ausgewählte Themen aus dem Bereich des Deep \nLearning (tiefe neuronale Netze) für Fragestellungen in der Computer Vision in Gruppen \nbearbeitet. Dazu gehört die praktische Umsetzung mit modernen Deep Learning Frameworks. \nDie Ergebnisse werden am Ende in einem Vortrag vorgestellt. Die konkreten Themen \norientieren sich am aktuellen Stand der Forschung und wechseln von Semester zu Semester.",
    "Qualifikationsziele": "Durch erfolgreiche Teilnahme erwerben Studierende vertiefte Kenntnisse in tiefen neuronalen \nNetzen und deren Anwendungen in der Computer Vision. Sie können aktuelle Techniken in \ndiesem Bereich analysieren, modifizieren und anwenden. Sie trainieren weiterhin \nPräsentationsfähigkeiten und die Arbeit in einem Team.",
    "Vorraussetzungen": "Empfohlen: \n* Gute Programmierkenntnisse in C/C++ oder Python oder Lua \n* Voherige oder parallele Belegung von \"Computer Vision I\"",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0980-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  708 \n  [20-00-0980-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Softwarepraktikum Security Engineering",
    "Modul Nr.": "20-00-0981",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Das Projektpraktikum Security Engineering behandelt die angewandte Softwareentwicklung in \nden Themenbereichen angewandte Kryptographie, Privatsphäre, Sicherheit kritischer \nInfrastrukturen, Hardwaresicherheit und formale Methoden. Ziel ist das eigenständige \nBearbeiten eines Entwicklungsprojektes im Team, welches aktuelle wissenschaftliche \nErkenntnisse praktisch realisiert und evaluiert. Neben einem generellen Überblick in den \nBereich Softwareentwicklung wird ein tief gehender Einblick in ein oder mehrere Teilgebiete \ndes Security Engineerings vermittelt. \nDie Themen bestimmen sich aus den spezifischen Arbeitsgebieten der Mitarbeiter. \nBeispielthemen sind: \nCritical Infrastructure Security \n* Railway Security \n* Intrusion Detection \n* Remote Attestation \nPrivacy-enhancing Technologies \n* Privacy-preserving Protocols \n* Statistical Privacy \n* Secure Multi-party Computation \n* Oblivious Data Structures \nHardware Security \n* Hardware Side-Channels \n* Physical Unclonable Functions \nNeben den themenspezifischen Lerninhalten, beinhaltet das Projektpraktikum: \n* Eigenständiges Bearbeiten eines Entwicklungsprojektes in einem der o.g. Themengebieten \n* Projektplanung und Projektmanagement \n* Konzipieren einer Softwarearchitektur bzw. kombinierten Hardware-Software Architektur \n* Entwerfen eines auf die Zielplattform angepassten Hardware-/Softwaredesigns \n* Prototypische Umsetzung auf der ausgewählten Zielplattform \n* Dokumentation und Evaluation der erstellten Lösung sowie Dokumentation des \nProjektmanagements \nModulhandbuch B. Sc./M. Sc. Informatik  710",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden die Fähigkeit \nkomplexe Problemstellungen im Bereich Security Engineering softwaretechnisch zu lösen. Die \nStudierenden können hierzu eigenständig ein Projekt definieren, verwalten und durchführen. \nDie Studierenden haben Kenntnisse im Entwurf/der Umsetzung komplexer Protokolle bzw. \nAnwendungen in einem/mehreren der Bereiche angewandte Kryptographie, Privatsphäre, \nSicherheit kritischer Infrastrukturen, Hardwaresicherheit und formale Methoden n erlangt. Die \nStudierenden sind in der Lage die gewählten Protokolle und Anwendungen zu implementieren, \nzu testen und deren Funktionsfähigkeit und Leistungsfähigkeit zu evaluieren. Sie sind in der \nLage die Projektplanung und -verwaltung sowie die erstellten Softwareartefakte verständlich zu \ndokumentieren und die erzielten Projektfortschritten und -ergebnissen verständlich zu \npräsentieren.",
    "Vorraussetzungen": "Empfohlen: \nErfolgreiche Teilnahme an Veranstaltungen aus dem IT-Sicherheit Bereich.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0981-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0981-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Distributed Systems Programming: Projektpraktikum",
    "Modul Nr.": "20-00-0984",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Das \"DSP-Projektpraktikum\" adressiert Forschungsthemen im Bereich von distributed systems \n(DS, deutsch verteilten Anwendungen) und Programmiersprachen für DS. Die angebotenen \nThemen hängen von der aktuellen Forschung der DSP Gruppe ab und umfassen unter \nanderem: \n  Software-defined networking (SDN) \n  Network function virtualization (NFV) and in-network processing (INP) \n  Traffic engineering (TE) \n  Network monitoring \n  Resource management in datacenters (RMF) \n  Big data analytics (Spark, YARN, OpenStack, ..) \n  Event-based systems \n  Security in SDN, INP, and big data \n  Geo-distributed data processing \n  Compiler infrastructures for DS \n  Language abstractions for DS \n  Session types / calculi for DS \n  Network Protocols \nModulhandbuch B. Sc./M. Sc. Informatik  712 \nDie teilnehmenden Studierenden realisieren ein Forschungsprojekt welches zusammen mit \ndem Betreuer definiert wird. \nDas “DSP: Projektpraktikum” hat im Vergleich zum “DSP: Praktikum” einen größeren Umfang.",
    "Qualifikationsziele": "Nach der Teilnahme am \"DSP-Projektpraktikum\" können Studierende technische und \nwissenschaftliche Probleme im Bereich DS lösen. \nJe nach ausgewähltem Thema erlernen Studierende folgende Kompetenzen: \nEntwurf komplexer DS \nMethodische Analyse und Auswertung von: \n  Modellen \n  Experimenten \n  Software \n  Entwurf von Programmiersprachen \n  Schreiben von technischen Dokumenten oder Projektberichten \n  Erstellen und vortragen eines Abschlussvortrages",
    "Vorraussetzungen": "Interesse am Erarbeiten von Lösungsvorschlägen für herausfordernde Probleme im Bereich DS, \neigenverantwortliches arbeiten und ein großes Interesse an aktuellen Forschungsthemen. \nDa die angebotenen Themen ein großes Themengebiet abdecken, sind die Anforderungen sehr \nverschieden und projektabhängig. Eine detaillierte Beschreibung der Themen als auch der \nAnforderungen wird in der ersten Vorlesung präsentiert.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0984-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0984-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%) \nModulhandbuch B. Sc./M. Sc. Informatik  713",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Distributed Systems Programming: Praktikum",
    "Modul Nr.": "20-00-0985",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Das \"DSP-Praktikum\" adressiert Forschungsthemen im Bereich von distributed systems (DS, \ndeutsch verteilten Anwendungen) und Programmiersprachen für DS. Die angebotenen \nThemen hängen von der aktuellen Forschung der DSP Gruppe ab und umfassen unter \nanderem: \n  Software-defined networking (SDN) \n  Network function virtualization (NFV) and in-network processing (INP) \n  Traffic engineering (TE) \n  Network monitoring \n  Resource management in datacenters (RMF) \n  Big data analytics (Spark, YARN, OpenStack, ..) \n  Event-based systems \n  Security in SDN, INP, and big data \n  Geo-distributed data processing \n  Compiler infrastructures for DS \n  Language abstractions for DS \n  Session types / calculi for DS \n  Network Protocols \nDie teilnehmenden Studierenden realisieren ein Forschungsprojekt welches zusammen mit \nModulhandbuch B. Sc./M. Sc. Informatik  715 \ndem Betreuer definiert wird. \nDas “DSP: Projektpraktikum” hat im Vergleich zum “DSP: Praktikum” einen größeren Umfang.",
    "Qualifikationsziele": "Nach der Teilnahme am \"DSP-Praktikum\" können Studierende technische und \nwissenschaftliche Probleme im Bereich DS lösen. \nJe nach ausgewähltem Thema erlernen Studierende folgende Kompetenzen: \nEntwurf komplexer DS \nMethodische Analyse und Auswertung von: \n  Modellen \n  Experimenten \n  Software \n  Entwurf von Programmiersprachen \n  Schreiben von technischen Dokumenten oder Projektberichten \n  Erstellen und vortragen eines Abschlussvortrages",
    "Vorraussetzungen": "Empfohlen: \nInteresse am Erarbeiten von Lösungsvorschlägen für herausfordernde Probleme im Bereich DS, \neigenverantwortliches arbeiten und ein großes Interesse an aktuellen Forschungsthemen. \nDa die angebotenen Themen ein großes Themengebiet abdecken, sind die Anforderungen sehr \nverschieden und projektabhängig. Eine detaillierte Beschreibung der Themen als auch der \nAnforderungen wird in der ersten Vorlesung präsentiert.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0985-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0985-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  716 \nB. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Agile Software Engineering Projekt",
    "Modul Nr.": "20-00-0989",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Durchführung eines realen Softwareentwicklungsprojekts für externe Kunden in einem festen \nZeitraum. Die Entwicklung umfasst alle Schritte von der Ermittlung der Anforderungen bis hin \nzur Einführung der Software in den Betrieb.",
    "Qualifikationsziele": "- Erfahrung in der Entwicklung realer Softwareprojekte \n- Wertschätzung der verschiedenen Rollen im Rahmen von Softwareentwicklungsprojekten \n- Projektabhängige Evaluierung vorhandener Werkzeuge und Methoden \n- Training von \"Soft Skills\"; insbesondere Teamarbeit und Präsentationsfähigkeiten \n- Kommunikation mit Kunden",
    "Vorraussetzungen": "Empfohlen: \n- (Introduction to)Software Engineering \n- ein ausgeprägtes Interesse an der Entwicklung von Softwareprodukten",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0989-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0989-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%) \nModulhandbuch B. Sc./M. Sc. Informatik  718",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum: Seitenkanalangriffe gegen Software",
    "Modul Nr.": "20-00-0995",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Seitenkanäle sind indirekte, unbeabsichtigte Informationsflüsse, die durch die physikalische \nAusführung eines Computerprogramms aufgedeckt werden. Beispiele hierfür sind \nProgrammlaufzeit, Cache-Verhalten, Stromverbrauch, elektromagnetische Ausstrahlung usw. Da \nsolche unbeabsichtigte Informationsflüsse mit geheimen Dateien wie z. B. privaten \nkryptographischen Schlüsseln korrelieren können, stellen Seitenkanäle ernste \nSicherheitsschwachstellen dar. Während eines Seitenkanalangriffs ist der Hacker in der Lage, \ndurch den Seitenkanal aufgedeckte Informationen zu sammeln, sie zu analysieren und anhand \ndieser Analyse die geheimen Dateien zu rekonstruieren. Da es dank neuer \nSicherheitsmechanismen fortwährend schwieriger wird, herkömmliche \nSicherheitsschwachstellen wie z. B. Programmfehler auszunutzen, werden Seitenkanäle für \nHacker immer \ninteressanter. \nDas Praktikum erlaubt es Studenten praktische Erfahrung mit Seitenkanalangriffen zu machen. \nDie Studenten werden Methoden zum Messen von Informationen aus Seitenkanälen erlernen, \nlernen gewonnene Daten zu analysieren, Angriffe zu evaluieren, und erlernen Angriffe zu \nvergleichen. \nDas Praktikum ist zweigeteilt. In der ersten Hälfte werden Grundlagen zu Seitenkanalangriffen \nvermittelt. Hier lernen die Studenten z.B. wie man die Laufzeit eines Programmes präzise misst. \nWeiterhin bearbeiten die Studenten Beispiele um sich mit Seitenkanalschwachstellen vertraut \nzu machen. In der zweiten Hälfte bekommen die Studenten die Möglichkeit sich mit Angriffen \naus \nder realen Welt zu beschäftigen. Die Studenten lernen wie sie sich eigenständig mit bekannten \nAngriffe vertraut machen, ausgewählte Teile eines Angriffs selbst reproduzieren und ihre \nErkenntnisse daraus zu dokumentieren.",
    "Qualifikationsziele": "Nach der Teilnahme an diesem Praktikum haben Sie praktische Erfahrung mit Seitenkanälen \nund ein Basiswissen über Techniken zur Abschwächung von Seitenkanalangriffen. Zum Beispiel \nsind Sie fähig Seitenkanalangriffe zu identifizieren, zu implementieren und zu evaluieren. \nAußerdem verstehen Sie Techniken zur Abschwächung von Seitenkanalangriffen. \nModulhandbuch B. Sc./M. Sc. Informatik  720",
    "Vorraussetzungen": "Empfohlen: \nInformatikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs \nInformatik, \nBasiswissen C/C++, \nBasiswissen in der Nutzung von Linux (Kommandozeile, Kompilierung von Software)",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-0995-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-0995-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Fortgeschrittene Themen in Eingebetteten Systemen und ihren Anwendungen",
    "Modul Nr.": "20-00-1001",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Der Kurs bearbeitet aktuelle Forschungs- und Entwicklungsthemen \naus dem Bereich von Rechnersystemen und Programmierwerkzeugen, auch speziell \nim Umfeld von eingebetteten und anwendungsspezifischen Architekturen. Die \nThemen bestimmen sich aus den spezifischen Arbeitsgebieten der Mitarbeiter und \nvermitteln technische und einleitende wissenschaftliche Kompetenzen, zum \nBeispiel aus einem oder mehreren der folgenden Gebiete: \n- Rechnerarchitekturen auf Prozessor- und Systemebene \n- Entwurf digitaler Schaltungen und Hardware-Systeme \n- Einsatz von Field-Programmable Gate Arrays \n- Hardware/Software-Entwurfs- und Programmierwerkzeuge \n- Betriebssysteme und hardware-nahe Programmierung \n- Hardware/Software-Co-Design \n- Anwendungsspezifische Architekturen und Techniken \n- Entwurf und/oder Programmierung von Rechenbeschleunigern \n- Debugging und Analyseverfahren für Hardware/Software-Systeme",
    "Qualifikationsziele": "Der/die Studierende sollen Erfahrungen mit der Einarbeitung in ein neues Themenfeld und der \npraktischen Bearbeitung einer komplexeren Aufgabe aus diesem sammeln. Zu diesen \nErfahrungen können Literaturrecherchen, das Einarbeiten in bestehende Code-Basen aus dem \nHardware/Software-Bereich, sowie ganz praktische Implementierung von Hardware und/oder \nSoftware gehören. Beim Abschlussvortrag sind auch geeignete Präsentationstechniken \nanzuwenden.",
    "Vorraussetzungen": "Empfohlen: \nDas Interesse, zu den Lehrinhalten anspruchsvolle Lösungen zu \nentwickeln. Dabei sind jeweils themenspezifische Kenntnisse, u.a. zum \nModulhandbuch B. Sc./M. Sc. Informatik  722 \nHardware-Entwurf, dem Compilerbau und der systemnahen und parallelen \nProgrammierung erforderlich. Diese Kenntnisse können beispielsweise durch den \nBesuch der entsprechenden Lehrveranstaltungen erworben werden.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1001-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1001-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatjk \nM.Sc Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Data Science Praktikum",
    "Modul Nr.": "20-00-1005",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Ziel des Praktikums ist das Sammeln von Erfahrung im Einsatz von Werkzeugen des \nMaschinellen Lernens und Data Minings an realistischen Problemen sowie ein besseres \nVerständnis ihrer Funktionsweise. Die Studierenden werden in Gruppen an einer End-to-End-\nLösung für ein Data-Science-Problem aus der Industrie arbeiten. Der Kurs findet in Kooperation \nmit Fachgebieten der Wirtschaftsinformatik statt. Für aktuelle Informationen zum Kurs \nbesuchen Sie bitte http://www.ke.tu-darmstadt.de/lehre.",
    "Qualifikationsziele": "Nach Absolvierung dieses Kurses können die Studierenden \n- Problemstellungen aus der Industrie und Geschäftswelt erkennen, die durch Verfahren des \nData Minings und Machine Learnings gelöst werden können \n- problem-spezifische Lösungen aus dem Data Mining und Maschinellen Lernen entwickeln und \nkönnen diese umsetzen",
    "Vorraussetzungen": "Empfohlen: \nGrundkenntnisse in Machine Learning und Data Mining",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1005-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  724 \n  [20-00-1005-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Parallele Programmiertechnologie",
    "Modul Nr.": "20-00-1008",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Die Praktikumsteilnehmer entwickeln Technologien zur parallelen Programmierung aus den \nfolgenden Themenbereichen und/oder wenden diese an: \n• Erschließung möglicher Parallelität \n• Leistungsanalyse und –modellierung \n• Korrektheitsanalyse \n• Profiling \n• Skalierbare Algorithmen \n• Ressourcenmanagement und Scheduling \n• Anwendungen (z.B. Deep Learning)",
    "Qualifikationsziele": "• Kennenlernen und praktische Entwicklung und/oder Anwendung paralleler \nProgrammiertechnologien \n• Einüben softwaretechnischer Methoden \n• Teamarbeit in Softwareprojekten \n• Präsentation von Projektergebnissen in Berichten und Vorträgen",
    "Vorraussetzungen": "Empfohlen: \n• Kenntnisse paralleler Programmierung und Systeme",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1008-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  726",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1008-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Compiler Tooling",
    "Modul Nr.": "20-00-1013",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Moderne Compiler zielen primär darauf ab, effizienten Code für eine bestimmte Plattform zu \ngenerieren und hierfür nutzen sie fortgeschrittene Analysis- und Transformationswerkzeuge. \nEine solche Infrastruktur ist aber auch nützlich für Quellcodetransformation, z.B. für \nWerkzeuge, die Codes annotieren, instrumentieren, oder in eine kanonische Form bringen. Die \nEntwicklung solcher Werkzeuge ist für die C++ Sprache aufgrund ihrer Komplexität eine \nHerausforderung. Eine offene Compiler Infrastruktur, die in einer Vielzahl von Forschungs- und \nProduktionscompilern genutzt wird, ist die LLVM Infrastruktur (www.llvm.org). Ein \nvielgenutztes Front-End für C, C++ und objective C ist Clang, welches mächtige Mechanismen \nfür die Extraktion von Information aus dem abstrakten Syntaxbaum zur Verfügung stellt, und so \nModifikationen des Quellcodes wie auch die Generierung der Zwischenrepräsentation von \nLLVM ermöglicht. \nDie Studierenden arbeiten mit verschiedenen Komponenten und Techniken des Clang/LLVM \nFrameworks und implementieren praktische Übungen für Quelltransformationen. Die \nClang/LLVM Techniken beinhalten insbesondere die Handhabung und Matching Techniken auf \ndem abstrakten Syntaxbaum von Clang. Beispiele von Quelltransformationen werden \nverschiedene Facetten von Code-Erweiterung under -Refactoring beinhalten, z.B. für die \nInstrumentierung paralleler Codes, für die Übermittlung von Information zwischen der \nstatischen Analyse und der Laufzeitumgebung von (parallelen) Codes, oder für Code \nRefactoring um bestimmte Coding Standards einzuhalten.",
    "Qualifikationsziele": "Nach dem Besuch dieses Kurses kennen die Studierenden grundlegende und fortgeschrittene \nKonzepte der syntaktischen und semantischen Code Analyse und Quelltext-Transformation, \nbasierend auf der Clang/LLVM Technologie. Insbesondere können sie auf spezielle Aufgaben \nzugeschnittene statische Analyse- und Code- Transformations Werkzeuge entwerfen und \nimplementieren, das geeignete Abstraktionsniveau für die zu lösende Aufgabe reflektieren und \nentscheiden, und weitere Nutzungsszzenarien für Compiler Technologie erstellen.",
    "Vorraussetzungen": "Empfohlen: \nModulhandbuch B. Sc./M. Sc. Informatik  728 \nVorlesung Einführung in Compilerbau (EiCB), Vorlesung System- and Parallel Programming \n(SPP), Kentnisse von C++",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1013-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1013-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Gründung eines IT-Start-Up",
    "Modul Nr.": "20-00-1016",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Kennenlernen von Methoden zur Entwicklung und Umsetzung innovativer Geschäftsmodelle. \nErlernen von Werkzeugen für die einzelnen Prozessschritte. Dabei werden Beispiele aus der \nPraxis vorgestellt und besprochen. \nEinüben der vorgestellten Methoden an einem selbstgewählten Beispiel. Präsentation der \nErgebnisse nach jedem Teilschritt im Rahmen der Erarbeitung des Geschäftsmodells.",
    "Qualifikationsziele": "Nach erfolgreichem Besuch dieser Veranstaltung haben die Studierenden die Grundlagen für \ndie Erstellung eines Businessplans kennengelernt. Sie sind in der Lage die relevanten \nFragestellungen bei der Erstellung von Businessplänen für innovative Geschäftsmodelle zu \nidentifizieren und zu bearbeiten.",
    "Vorraussetzungen": "Empfohlen: \n- Software Engineering \n- Bachelor Praktikum",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1016-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1016-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%) \nModulhandbuch B. Sc./M. Sc. Informatik  730",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik",
    "Literatur": "Literaturhinweise werden in der Veranstaltung gegeben"
  },
  {
    "Modulname": "Cybersecurity Lab",
    "Modul Nr.": "20-00-1018",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In diesem Praktikum werden wir grundlegende als auch weiterführende Aspekte von \nNetzwerksicherheit erlernen. Wir werden die grundlegenden Protokolle, wie BGP und DNS, \nInfrastruktur Modelle, wie z.B. Router, Switches und Firewalls besprechen und wir werden \nebenso die Anwendung von Sicherheit besprechen. Wir werden Attacks und Defences \nbesprechen als auch demonstrieren. Jede/r Studierende/r wird ein spezifisches Thema, welches \nwährend des Semesters unter Anleitung zu bearbeiten ist, erhalten.",
    "Qualifikationsziele": "Am Ende des Kurses werden die Studierenden gute Kenntnisse in Netzwerksicherheit, und \nspeziell auf den Gebieten der durch sie bearbeitenden Projekte, erlangen. Die Note berechnet \nsich auf Grundlage der eingereichten Projekte.",
    "Vorraussetzungen": "Empfohlen: \nDie Studierenden sollten einen Background in Netzwerk- und Operating Systems haben – diese \nsind vorausgesetzte Kurse.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1018-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1018-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  732 \nB. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum Friedens-, Sicherheits- und Kriseninformatik",
    "Modul Nr.": "20-00-1020",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Praktikum beinhaltet Entwicklungsthemen aus der aktuellen Forschung des Fachgebiets \n„Wissenschaft und Technik für Frieden und Sicherheit“ (PEASEC). Neben einem generellen \nÜberblick über aktuelle Themen wird ein tiefgehender Einblick in ein spezielles \nEntwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen \nArbeitsgebieten der Mitarbeiter und vermitteln technische und einleitende wissenschaftliche \nKompetenzen. Die Bearbeitung erfolgt in kleinen Gruppen. \nThemen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
    "Qualifikationsziele": "Die Fähigkeit eine praktische Aufgabe ggf. im Team erfolgreich nach Vorgabe zu bearbeiten und \nderen Ergebnisse angemessen zu präsentieren. Beispiele sind: \n• Anforderungserhebung und (empirische) Vorstudien \n• Konzeption und Implementierung innovativer Anwendungen \n• Evaluation und Weiterentwicklung bestehender Anwendungen",
    "Vorraussetzungen": "Empfohlen: \nGrundlagen der Informatik/Funktionale und objektorientierte Programmierkonzepte",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1020-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  734 \n  [20-00-1020-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "Reuter, C. (2018) Sicherheitskritische Mensch-Computer-Interaktion: Interaktive Technologien \nund Soziale Medien im Krisen- und Sicherheitsmanagement, 660 S., Wiesbaden: Springer \nVieweg – im Druck \nAltmann, J., Bernhardt, U., Nixdorff, K., Ruhmann, I., & Wöhrle, D. (2016). Naturwissenschaft - \nRüstung - Frieden - Basiswissen für die Friedensforschung (Vol. 49), Wiesbaden: Springer \nVieweg. \nWeitere Literatur wird in der Veranstaltung je nach gewähltem Thema genannt."
  },
  {
    "Modulname": "Projektpraktikum Friedens- und Kriseninformatik",
    "Modul Nr.": "20-00-1027",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Das Projektpraktikum beinhaltet Entwicklungsthemen aus der aktuellen Forschung des \nFachgebiets „Wissenschaft und Technik für Frieden und Sicherheit“ (PEASEC). Neben ei-nem \ngenerellen Überblick über aktuelle Themen wird ein tiefgehender Einblick in ein spezi-elles \nEntwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen Ar-\nbeitsgebieten der Mitarbeiter und vermitteln technische und einleitende wissenschaftliche \nKompetenzen. Die Bearbeitung erfolgt in kleinen Gruppen. Projektmanagement und die \nSelbstorganisation im Team ist explizit Teil der Aufgabenstellung. \nThemen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
    "Qualifikationsziele": "Die Fähigkeit eine praktische Aufgabe ggf. im Team erfolgreich nach Vorgabe zu bearbeiten \nund deren Ergebnisse angemessen zu präsentieren. Beispiele sind: \n• Anforderungserhebung und (empirische) Vorstudien \n• Konzeption und Implementierung innovativer Anwendungen \n• Evaluation und Weiterentwicklung bestehender Anwendungen",
    "Vorraussetzungen": "",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1027-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  736 \n  [20-00-1027-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": "Reuter, C. (2018) Sicherheitskritische Mensch-Computer-Interaktion: Interaktive Technolo-\ngien und Soziale Medien im Krisen- und Sicherheitsmanagement, 660 S., Wiesbaden: Sprin-\nger Vieweg \nAltmann, J., Bernhardt, U., Nixdorff, K., Ruhmann, I., & Wöhrle, D. (2016). Naturwissen-\nschaft - Rüstung - Frieden - Basiswissen für die Friedensforschung (Vol. 49), Wiesbaden: \nSpringer Vieweg. \nWeitere Literatur wird in der Veranstaltung je nach gewähltem Thema genannt."
  },
  {
    "Modulname": "Projektpraktikum Algorithmik",
    "Modul Nr.": "20-00-1029",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Das Projektpraktikum behandelt die angewandte Softwareentwicklung \nin den Themenbereichen der Arbeitsgruppe Algorithmik. Ziel ist das eigenständige Bearbeiten \neines Entwicklungsprojektes im Team. \nLerninhalte: \n- Eigenständiges Bearbeiten eines Entwicklungsprojektes, \n- Projektplanung und Projektmanagement, \n- Recherche von Lösungsalternativen und Abwägung von Vor-/Nachteilen der Alternativen, \n- Konzipieren einer Softwarearchitektur, \n- prototypische Umsetzung auf der ausgewählten Zielplattform, \n- Evaluation des Gesamtsystems in Bezug auf verschiedene Gütemaße, \n- Dokumentation der erstellten Lösung.",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden die Fähigkeit, \nkomplexe Problemstellungen im Themenbereich softwaretechnisch zu lösen. \nDie Studierenden können hierzu eigenständig ein Projekt definieren, verwalten und \ndurchführen. Die Studierenden haben Kenntnisse im Entwurf/der Umsetzung \nvon Algorithmen und Anwendungen erlangt. Sie sind in \nder Lage, die gewählten Algorithmen und ihre Anwendung zu implementieren, zu testen und \nderen Funktionsfähigkeit und Leistungsfähigkeit zu evaluieren, die \nProjektplanung und -verwaltung sowie die erstellten Softwareartefakte verständlich zu \ndokumentieren.",
    "Vorraussetzungen": "Empfohlen: FOP und AuD",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1029-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  738",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1029-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum zur Vorlesung Cryptocurrencies",
    "Modul Nr.": "20-00-1031",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Diese Veranstaltung richtet sich an Studierende, die die Vorlesung Cryptocurrencies besucht \nhaben und einige Aspekte dieses Themenkomplexes eingehender verstehen und untersuchen \nwollen. Sie bietet eine Plattform, um neuartige Anwendungen basierend auf Blockchain \nTechnologie auf ihre Umsetzbarkeit und Sinnhaftigkeit zu überprüfen. \nKomplexe kryptografische Systeme und Bausteine aus der Vorlesung Cryptocurrencies sollen \ndabei in Teamarbeit verstanden und in einem dezentralen System implementiert werden. Dabei \nwird die eigenständige Konzeption eines Projektes gefordert, was im Verlauf der Veranstaltung \nvon den Studierenden geplant und umgesetzt werden soll. \nDie Studierenden erhalten dabei erste Erfahrungen mit der Umsetzung eines komplexeren \nEntwicklungsprojektes.",
    "Qualifikationsziele": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die technischen und \npraktischen Implikaitonen von verteilten kryptographischen Systemen. Dazu gehören zum \nBeispiel erste Erfahrungen in den folgenden Bereichen: \n• Entwicklung von Smart Contracts und verteilten Applikationen \n• Kommunikation von Systemen durch dezentrale Peer-to-Peer Netze \n• Entwicklung von Software unter Benutzung kryptographischer Bausteine \n• Sicherheit und Anonymität von Nutzern von kryptographischen Währungen \n• Mögliche Angriffe auf Smart Contracts und Cryptocurrencies",
    "Vorraussetzungen": "Empfohlen: \nDieser Kurs richtet sich an Studenten, die die Vorlesung Cryptocurrencies mit guten Noten \nabgeschlossen haben. Weiterhin sollten Programmierkenntnisse und ein Interesse an den \nThemen der Vorlesung vorhanden sein.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1031-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  740",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1031-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Automatische Textzusammenfassung",
    "Modul Nr.": "20-00-1037",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Die automatische Generierung von Zusammenfassungen aus einer Sammlung an Texten \nunterschiedlicher Art zu einem Thema ist ein aktuelles Forschungsgebiet, das beispielsweise an \nder TU-Darmstadt am Graduiertenkolleg Aiphes intensiv erforscht wird. \nDabei kommen unterschiedliche Methoden zum Einsatz, die sowohl im maschinellen Lernen als \nauch in der natürlichen Sprachverarbeitung verankert sind. \nIn diesem Praktikum erhalten die Studierenden die Möglichkeit, sich in Kleingruppen mit diesen \nMethoden vertraut zu machen, Erweiterungen und neue Methoden zu entwickeln und diese an \neinem realen Datensatz anzuwenden. Ein besonderer Schwerpunkt soll dabei auch auf die \nEvaluation der generierten Zusammenfassungen gelegt werden.",
    "Qualifikationsziele": "Die Studierenden \n- kennen verschiedene Methoden zur automatischen Zusammenfassung von Texten, ihre \nFunktionsweisen und ihre Eigenschaften \n- können Methoden zur automatischen Zusammenfassung auf Texttypen verschiedener Art \nanwenden \n- können die Qualität einer generierten Zusammenfassung anhand verschiedener Kriterien \nbeurteilen",
    "Vorraussetzungen": "Empfohlen: \nAbsolvierung einer Vorlesung in Maschinelles Lernen, Data Mining, oder natürliche \nSprachverarbeitung. Praktische Erfahrung mit Data Mining oder NLP Werkzeugen sind hilfreich, \nkönnen aber auch selbständig erarbeitet werden. Gute bis sehr gute Englischkenntnisse.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1037-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard) \nModulhandbuch B. Sc./M. Sc. Informatik  742",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1037-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Data Management - Praktikum",
    "Modul Nr.": "20-00-1041",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Die Teilnehmer lösen in kleinen Projektgruppen ein gegebenes Problem. Bei den Problemen \nhandelt es sich um Programmierprojekte, die sich auf Fragestellungen aus aktuellen \nForschungsthemen des Data Management Lab beziehen. \nMögliche Themenbereiche sind: \n- Skalierbare Datenbanksysteme und moderne Hardware \n- Cloud Darenbanken und Blockchains \n- Interaktive Daten- und Textexploration \n- Natural Language Interfaces für Datenbanken \n- Skalierbare Systeme für Maschinelles Lernen \nIn dieser Veranstaltung setzen Studenten ein ausgewähltes Projekt um. Im Vergleich zum \nPraktikum haben die Probleme des Projektpraktikum einen erweiterten Umfang.",
    "Qualifikationsziele": "Nach Beendigung der Veranstaltung haben Studierende folgende Lernziele erreicht: \n- Vertieftes Verständnis von aktuellen Techniken für moderne Datenmanagement-Systeme \n- Anwendung und Implementierung der Techniken in individuellen Projekten \n- Evaluierung von möglichen Designalternativen mit Hilfe von Benchmarks bzw. realen \nWorkloads",
    "Vorraussetzungen": "Abhängig vom ausgewählten Thema.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1041-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  744",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1041-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Data Management - Projektpraktikum",
    "Modul Nr.": "20-00-1042",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Die Teilnehmer lösen in kleinen Projektgruppen ein gegebenes Problem. Bei den Problemen \nhandelt es sich um Programmierprojekte, die sich auf Fragestellungen aus aktuellen \nForschungsthemen des Data Management Lab beziehen. \nMögliche Themenbereiche sind: \n- Skalierbare Datenbanksysteme und moderne Hardware \n- Cloud Darenbanken und Blockchains \n- Interaktive Daten- und Textexploration \n- Natural Language Interfaces für Datenbanken \n- Skalierbare Systeme für Maschinelles Lernen \nIn dieser Veranstaltung setzen Studenten ein ausgewähltes Projekt um. Im Vergleich zum \nPraktikum haben die Probleme des Projektpraktikum einen erweiterten Umfang.",
    "Qualifikationsziele": "Nach Beendigung der Veranstaltung haben Studierende folgende Lernziele erreicht: \n- Vertieftes Verständnis von aktuellen Techniken für moderne Datenmanagement-Systeme \n- Anwendung und Implementierung der Techniken in individuellen Projekten \n- Evaluierung von möglichen Designalternativen mit Hilfe von Benchmarks bzw. realen \nWorkloads",
    "Vorraussetzungen": "Abhängig vom ausgewählten Thema.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1042-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  746 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1042-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Anwendung von Reinforcement Learning Methoden",
    "Modul Nr.": "20-00-1048",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In diesem Projekt lernen Studierende das experimentelle Arbeiten in einem interdisziplinären \nTeam, und bekommen so Einblicke in das wissenschaftliche Arbeiten im Reinforcement \nLearning. Im Projekt entwickeln in einer Kleingruppen unter Anleitung ein gemeinsames \nExperiment im Reinforcement Learning basierend auf speziellen Plattformen (Cartpole, Furuta-\nPendel, etc), werten dieses aus und schreiben einen Forschungsbericht/Paper.",
    "Qualifikationsziele": "Praktische Einführung in das wissenschaftliche Arbeiten, Durchführung eines Experimentes von \nder Forschungsidee bis hin zur Veröffentlichung.",
    "Vorraussetzungen": "Empfohlen: \nGleichzeitige Belegung der Vorlesung \"Reinforcement Learning: Von Grundlagen zu den Tiefen \nAnsätzen\" oder vorhergehende Belegung von \"Lernende Roboter.\"",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1048-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \nModulhandbuch B. Sc./M. Sc. Informatik  748 \n  [20-00-1048-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Projektpraktikum Softwareentwicklung zum Schutz der Privatsphäre",
    "Modul Nr.": "20-00-1053",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In dieser Veranstaltung entwickeln die Studierenden systematisch eine beispielhafte \nAnwendung, ein Werkzeug, oder einen Demonstrator zum Schutz der Privatsphäre. Dies \nbeinhaltet die Spezifikation der Anforderungen und des Designs, sowie eine Implementierung \nmit Tests, Evaluierung und Dokumentation. \nWir bieten zwei Varianten dieser Veranstaltung an: PRIVDEV-M (Praktikum, 6 CP, 4 SWS) und \nPRIVDEV-L (Projektpraktikum, 9 CP, 6 SWS) mit komplexeren Themen und detailierteren \nAnforderungen an das Projektmanagement. Bitte stellen Sie sicher, dass Sie sich für die richtige \nVariante anmelden. \nEine Liste möglicher Themen mit Bezug zu aktuellen Forschungsthemen des Fachgebiets \nENCRYPTO, eine detailierte Beschreibung des Prozesses und weitere Informationen finden Sie \nunter https://encrypto.de/PRIVDEV.",
    "Qualifikationsziele": "- Tieferes Verständnis warum Privatheit benötigt wird und wie sie sichergestellt werden kann \n- Mehr Erfahrung in Softwareentwicklung und Projektmanagement \n- Planung und Verfolgung eines Prozesses zur Enwicklung einer Privatsphäre-schützenden \nAnwendung oder Werkzeug: Anforderungen, Design, Implementierung, Test, Evaluierung und \nDokumentation.",
    "Vorraussetzungen": "Empfohlen: \n- Grundwissen in angewandter Kryptographie ist erforderlich, z.B. durch erfolgreiches Bestehen \nder Veranstaltung \"Einführung in die Kryptographie\" und ideallerweise auch \"Kryptographische \nProtokolle (CRYPROT)\" und/oder \"Secure Computation\". \n- Sehr gute Programmierkenntnisse und zumindest Grundkenntnisse in der in der jeweiligen \nThemenbeschreibung angegebenen Programmiersprache sind erforderlich. \n- Eventuelle weitere Anforderungen sind in der jeweiligen Themenbeschreibung angegeben. \nModulhandbuch B. Sc./M. Sc. Informatik  750",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1053-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1053-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM. Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum Softwareentwicklung zum Schutz der Privatsphäre",
    "Modul Nr.": "20-00-1054",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "In dieser Veranstaltung entwickeln die Studierenden systematisch eine beispielhafte \nAnwendung, ein Werkzeug, oder einen Demonstrator zum Schutz der Privatsphäre. Dies \nbeinhaltet die Spezifikation der Anforderungen und des Designs, sowie eine Implementierung \nmit Tests, Evaluierung und Dokumentation. \nWir bieten zwei Varianten dieser Veranstaltung an: PRIVDEV-M (Praktikum, 6 CP, 4 SWS) und \nPRIVDEV-L (Projektpraktikum, 9 CP, 6 SWS) mit komplexeren Themen und detailierteren \nAnforderungen an das Projektmanagement. Bitte stellen Sie sicher, dass Sie sich für die richtige \nVariante anmelden. \nEine Liste möglicher Themen mit Bezug zu aktuellen Forschungsthemen des Fachgebiets \nENCRYPTO, eine detailierte Beschreibung des Prozesses und weitere Informationen finden Sie \nunter https://encrypto.de/PRIVDEV.",
    "Qualifikationsziele": "- Tieferes Verständnis warum Privatheit benötigt wird und wie sie sichergestellt werden kann \n- Mehr Erfahrung in Softwareentwicklung und Projektmanagement \n- Planung und Verfolgung eines Prozesses zur Enwicklung einer Privatsphäre-schützenden \nAnwendung oder Werkzeug: Anforderungen, Design, Implementierung, Test, Evaluierung und \nDokumentation.",
    "Vorraussetzungen": "Empfohlen: \n- Grundwissen in angewandter Kryptographie ist erforderlich, z.B. durch erfolgreiches Bestehen \nder Veranstaltung \"Einführung in die Kryptographie\" und ideallerweise auch \"Kryptographische \nProtokolle (CRYPROT)\" und/oder \"Secure Computation\". \n- Sehr gute Programmierkenntnisse und zumindest Grundkenntnisse in der in der jeweiligen \nThemenbeschreibung angegebenen Programmiersprache sind erforderlich. \n- Eventuelle weitere Anforderungen sind in der jeweiligen Themenbeschreibung angegeben.",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  752 \nBausteinbegleitende Prüfung: \n  [20-00-1054-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1054-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Security Engineering Lab",
    "Modul Nr.": "20-00-1056",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Im Rahmen dieses Praktikums sollen Implementierungen zu Forschungszwecken mit den \nSchwerpunkten Kryptographie und Privatheit vorgenommen worden. Die angebotenen Praktika \nstammen aus den folgenden Bereichen: \n- IT-Sicherheit im autonomen Fahrzeug \n- Bahnsicherheit \n- Hardwaresicherheit (IoT) \n- Seitenkanalangriffe \n- Attestierung",
    "Qualifikationsziele": "Ziel dieses Praktikums ist die Ausweitung von Programmierkentnissen sowie die Partizipation in \nForschungsprojekten. Zusätzlich werden die Teilnehmer Wissen in den genannten Bereichen \nerlangen und erfahren den jeweils aktuellen Forschungsstand.",
    "Vorraussetzungen": "",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1056-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1056-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "Modulhandbuch B. Sc./M. Sc. Informatik  754 \nB.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "IoT- und Funkprotokolle in eingebetteten Systemen",
    "Modul Nr.": "20-00-1064",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Im Rahmen des Praktikums lernen die Studierenden IoT- und Funkprotokolle kennen und \nführen eigenständig ein Projekt mit eingebetteter Hardware durch. Darüber hinaus werden \nauch Aspekte der IT-Sicherheit mitberücksichtigt. \nDer Fokus liegt auf Bluetooth LE, Bluetooth Mesh, LoRaWAN sowie die Kommunikation über \nOOB Kanäle. Abhängig vom gewählten Projekt-Thema werden Hardware (Mikrocontroller, \nFPGAs, RF-Transceiver, Software Defined Radio uvm.) sowie Laborumgebung \n(Logikanalysatoren, RF Analysatoren, Oszilloskope uvm.) zur Verfügung gestellt.",
    "Qualifikationsziele": "Am Ende der Veranstaltung sind die Studierenden in der Lage, mit komplexen Spezifikationen \nvon Funkprotokollen umzugehen und in die Praxis zu transferieren. Weiterhin wird der \npraktische Umgang mit eingebetteten Systemen und Laborequipment vermittelt.",
    "Vorraussetzungen": "Empfohlen sind Vorkenntnisse in Computernetzwerken (Pflichtvorlesung \"Computer-Netzwerke \nund Verteilte Systeme) und in Eingebetteten Systemen (Pflichtvorlesungen Rechnerorganisation \nund/oder Datentechnik). Kenntnis der Programmiersprache C und Grundkenntnisse. der \nElektrotechnik sind hilfreich, ebenso Kenntnisse aus einschlägigen Vorlesungen des Bereichs \n\"Netze und Verteilte Systeme\" wie TK3, Mobile Netze oder KN1.",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1064-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard) \nBestehen der Prüfung (100%)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "",
    "Benotung": "Modulhandbuch B. Sc./M. Sc. Informatik  756 \nBausteinbegleitende Prüfung:  \n  [20-00-1064-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum Verantwortung und Sicherheit in der Informatik",
    "Modul Nr.": "20-00-1072",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Das Praktikum beinhaltet Entwicklungsthemen aus der aktuellen Forschung des Fachgebiets \n„Wissenschaft und Technik für Frieden und Sicherheit“ (PEASEC). Neben einem generellen \nÜberblick über aktuelle Themen wird ein tiefgehender Einblick in ein spezielles \nEntwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen \nArbeitsgebieten der Mitarbeiter_innen und vermitteln technische und einleitende wissen-\nschaftliche Kompetenzen. Die Bearbeitung erfolgt in kleinen Gruppen. \nThemen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
    "Qualifikationsziele": "Die Fähigkeit eine praktische Aufgabe ggf. im Team erfolgreich nach Vorgabe zu bearbeiten und \nderen Er-gebnisse angemessen zu präsentieren. Beispiele sind: \n- Lösen einer Fragestellung im Bereich von Verantwortung und Sicherheit in der Informatik \n- Anforderungserhebung und (empirische) Vorstudien \n- Recherche von Lösungsalternativen und Abwägung von Vor-/Nachteilen der Alternativen \n- Entwurf, prototypische Implementierung oder Weiterentwicklung innovativer Anwendungen \n- Evaluation bestehender Anwendungen in Bezug auf verschiedene Gütemaße \n- Dokumentation der erstellten Lösung",
    "Vorraussetzungen": "Empfohlen: Grundlagen in mindestens einem der Bereiche: Informatik, IT-Sicherheit, Mensch-\nComputer-Interaktion oder Friedens- und Konfliktforschung; Kenntnisse in der \nSoftwareentwicklung und Programmierung",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1072-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%) \nModulhandbuch B. Sc./M. Sc. Informatik  758",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1072-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B. Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Projektpraktikum Interaktive resiliente Informationstechnik",
    "Modul Nr.": "20-00-1073",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Das Projektpraktikum beinhaltet Entwicklungsthemen aus der aktuellen Forschung des \nFachgebiets „Wissen-schaft und Technik für Frieden und Sicherheit“ (PEASEC). Neben einem \ngenerellen Überblick über aktuelle Themen wird ein tiefgehender Einblick in ein spezielles \nEntwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen \nArbeitsgebieten der Mitarbeiter_innen und vermitteln technische und einleitende \nwissenschaftliche Kompetenzen. Die Bearbeitung erfolgt in kleinen Gruppen. \nProjektmanagement und die Selbstorganisation im Team ist explizit Teil der Aufgabenstellung. \nThemen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
    "Qualifikationsziele": "Die Fähigkeit eine praktische Aufgabe ggf. im Team erfolgreich nach Vorgabe zu bearbeiten und \nderen Er-gebnisse angemessen zu präsentieren. Beispiele sind: \n- Lösen einer Fragestellung im Bereich der interaktiven resilienten Informationstechnik \n- Anforderungserhebung und (empirische) Vorstudien \n- Recherche von Lösungsalternativen und Abwägung von Vor-/Nachteilen der Alternativen \n- Entwurf, prototypische Implementierung oder Weiterentwicklung innovativer Anwendungen \n- Evaluation bestehender Anwendungen in Bezug auf verschiedene Gütemaße \n- Dokumentation der erstellten Lösung",
    "Vorraussetzungen": "Empfohlen: Grundlagen in mindestens einem der Bereiche: Informatik, IT-Sicherheit, Mensch-\nComputer-Interaktion oder Friedens- und Konfliktforschung; Kenntnisse in der \nSoftwareentwicklung und Programmierung",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1073-pp] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  760 \nBestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1073-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Bug Hunting Praktikum",
    "Modul Nr.": "20-00-1083",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "In diesem Praktikum beschäftigen sich die Studenten mit dem automatischen oder manuellen \nAufdecken von Schwachstellen und Verwundbarkeiten in realen Open Source \nSoftwareprojekten. Die Studenten lernen gängige Methoden zur Identifizierung von \nAngriffsflächen, Erstellung eines Angreifermodells und das Finden und Dokumentieren von \nSchwachstellen. Diese Schritte werden eigenständig in einem praktischen Teil von den \nStudenten umgesetzt.  \nFolgende Themen und Tätigkeiten sind Teil des Praktikums:  \n- Einarbeitung in Open Source Softwareprojekte aus Sicht eines Penetration Testers  \n- Einarbeitung in gängige Tools zur Identifizierung von Angriffsflächen oder möglichen \nSchwachstellen  \n- Praktisches Anwenden der gelernten Methoden zur Schwachstellenidentifikation  \n- Dokumentation der Schwachstellen und Identifikation von Gegenmaßnahmen  \n- Präsentation der Ergebnisse  \nWeitere Informationen zum Ablauf:  \nhttps://team-sik.org/bug-hunting-praktikum/",
    "Qualifikationsziele": "Ein theoretischer Teil vermittelt den Studenten Methoden zur Schwachstellenidentifikation und \nBedrohungsmodellierung von Softwareprojekten. In einem praktischen Teil sammeln die \nStudenten selbstständig Erfahrungen im Identifizieren von Schwachstellen. Die Studenten sind \nnach erfolgreichem Absolvieren des Praktikums in der Lage, selbstständig und strukturiert \nSicherheitslücken in Softwareprojekten zu finden und zu dokumentieren. Die Studenten können \nnach dem Praktikum die Schwere und die Folgen von Sicherheitslücken einschätzen, sowie \nGegenmaßnahmen benennen.",
    "Vorraussetzungen": "Empfohlen: \n- Gute Teamfähigkeit  \n- Interesse an Schwachstellenidentifikation, Programmanalyse und Exploitation  \n- Gute Programmierkenntnisse  \nModulhandbuch B. Sc./M. Sc. Informatik  762 \n- Linux Kenntnisse  \n- Vollständige und korrekte Abgabe der Anmeldeaufgabe",
    "Prüfungsform": "Bausteinbegleitende Prüfung: \n  [20-00-1083-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1083-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum Seitenkanalanalyse",
    "Modul Nr.": "20-00-1090",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "120 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Englisch",
    "Lerninhalt": "Seitenkanäle sind Kommunikationskanäle, die auf Ausführungsmerkmalen basieren, die nicht \nzur Kommunikation vorgesehen waren. Die zugrundeliegenden Ausführungsmerkmale können \nbeispielsweise die Ausführungszeit, der Stromverbrauch und elektromagnetische Abstrahlung \nsein. Seitenkanäle sind seit vielen Jahren als ernste Bedrohung für kryptographische \nImplementierungen bekannt. Technologischer Fortschritt bringt üblicherweise neue \nMöglichkeiten für Seitenkanalangriffe mit sich. Beispielsweise hat das Internet of Things die \nAnzahl der möglichen Zielgeräte erhöht und die Bedrohung durch Seitenkanäle damit noch \nrelevanter gemacht. \nDas Praktikum deckt die Schritte ab, die zur Ausführung von Seitenkanalangriffen gegen \nkryptographische Implementierungen, zur Extraktion von geheimen Informationen, sowie zur \nVerminderung solcher Schwachstellen benötigt werden. Beispielthemen sind: \n- Auswahl von Zielimplementierungen für Seitenkanalangriffe \n- Manipulation von Strom-, Zeit-, oder EM-Messkurven \n- Implementierung von Modellen für \nSeitenkanalschwachstellen \n- Differential Side-Channel Analysis \n- Seitenkanalgegenmaßnahmen",
    "Qualifikationsziele": "Nach erfolgreicher Teilnahme an diesem Praktikum, werden die Studierenden: \n- das Ausmaß der Gefahr durch Seitenkanalschwachstellen einschätzen können, \n- verstehen wie Seitenkanalangriffe funktionieren, \n- fähig sein, Seitenkanalangriffe gegen kryptographische Implementierungen auszuführen, um \ngeheime Informationen zu extrahieren und \n- wissen, wie Seitenkanalangriffe abgewehrt werden können.",
    "Vorraussetzungen": "Empfohlen werden Informatikkenntnisse entsprechend der ersten vier Semester des \nBachelorstudiengangs Informatik, insbesondere Programmierkenntnisse.",
    "Prüfungsform": "Modulhandbuch B. Sc./M. Sc. Informatik  764 \nBausteinbegleitende Prüfung: \n  [20-00-1090-pr] (Studienleistung, mündliche / schriftliche Prüfung,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Prüfung (100%)",
    "Benotung": "Bausteinbegleitende Prüfung:  \n  [20-00-1090-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: \n100%)",
    "Verwendbarkeit": "B.Sc. Informatik \nM.Sc. Informatik \nKann in anderen Studiengängen verwendet werden.",
    "Literatur": ""
  },
  {
    "Modulname": "Praktikum Multimedia Kommunikation I",
    "Modul Nr.": "18-sm-1020",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "45 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Der Kurs bearbeitet aktuelle Entwicklungsthemen aus dem Bereich der Multimedia \nKommunikationssysteme. Neben einem generellen Überblick wird ein tiefgehender Einblick \nin ein spezielles Entwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den \nspezifischen Arbeitsgebieten der Mitarbeiter und vermitteln technische und einleitende \nwissenschaftliche Kompetenzen in einem oder mehreren der folgenden Gebiete: \n- Netzwerk und Verkehrsplanung und Analyse \n- Leistungsbewertung von Netzwerk-Anwendungen \n- Diskrete Event-basierten Simulation von Netzdiensten \n- Protokolle für mobile Ad hoc Netze / Sensor Netze \n- Infrastrukturnetze zur Mobilkommunikation / Mesh-Netze \n- Kontext-abhängige/bezogene Kommunikation und Dienste \n- Peer-to-Peer Systeme und Architekturen \n- Verteil-/ und Managementsysteme für Multimedia-/e-Learning-Inhalte \n- Multimedia Authoring- und Re-Authoring Werkzeuge \n- Web Service Technologien und Service-orientierte Architekturen \n- Anwendungen für Verteilte Geschäftsprozesse \n- Ressourcen-basiertes Lernen",
    "Qualifikationsziele": "Die Fähigkeit einfache Probleme im Bereich der Multimedia Kommunikation lösen zu \nkönnen. Erworbene Kompetenzen sind unter anderem: \n- Design einfacher Kommunikationsanwendungen und Protokolle \n- Implementierung und Testen von Software Komponenten für Verteilten Systeme \n- Anwendung von Objekt-Orientierten Analyse und Design Techniken \nModulhandbuch B. Sc./M. Sc. Informatik  766 \n- Präsentation von Projektfortschritten und -ergebnissen",
    "Vorraussetzungen": "Empfohlen: Das Interesse grundlegenden Themen aktueller Kommunikations- und \nMultimedia Technologien zu erkunden. Außerdem erwarten wir: \n- Erfahrungen in der Programmierung mit Java/C# (C/C++) \n- Kenntnisse in Computer Kommunikationsnetzen.  Die Vorlesungen Kommunikationsnetze I \nund/oder Computer-Netzwerke und verteilte Systeme werden empfohlen.",
    "Prüfungsform": "Studienleistung",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "BSc ETiT, BSc/MSc iST, MSc MEC, Wi-CS, Wi-ETiT, BSc/MSc CS",
    "Literatur": "Die Literatur besteht aus einer Auswahl an Fachartikeln zu den einzelnen Themen. Als \nErgänzung wird die Lektüre ausgewählte Kapitel aus folgenden Büchern empfohlen: \n- Andrew Tanenbaum: \"Computer Networks\". Prentice Hall PTR (ISBN 0130384887) \n- Christian Ullenboom: \"Java ist auch eine Insel: Programmieren mit der Java Standard \nEdition Version 5 / 6\" (ISBN-13: 978-3898428385) \n- Kent Beck: \"Extreme Programming Explained - Embrace Changes\" (ISBN-13: 978-\n0321278654)"
  },
  {
    "Modulname": "Praktikum Multimedia Kommunikation II",
    "Modul Nr.": "18-sm-2070",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "135 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Der Kurs bearbeitet aktuelle Entwicklungsthemen aus dem Bereich der Multimedia \nKommunikationssysteme. Neben einem generellen Überblick wird ein tiefgehender Einblick \nin ein spezielles Entwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den \nspezifischen Arbeitsgebieten der Mitarbeiter und vermitteln technische und einleitende \nwissenschaftliche Kompetenzen in einem oder mehreren der folgenden Gebiete: \n- Netzwerk und Verkehrsplanung und Analyse \n- Leistungsbewertung von Netzwerk-Anwendungen \n- Diskrete Event-basierte Simulation von Netzdiensten \n- Protokolle für mobile Ad hoc Netze / Sensor Netze \n- Infrastruktur Netze zur Mobilkommunikation / Mesh- Netze \n- Kontext-abhängige/bezogene Kommunikation und Dienste \n- Peer-to-Peer Systeme und Architekturen \n- Verteil-/ und Managementsysteme für Multimedia-/e-Learning-Inhalte \n- Multimedia Authoring- und Re-Authoring Werkzeuge \n- Web Service Technologien und Service-orientierte Architekturen \n- Anwendungen für Verteilte Geschäftsprozesse",
    "Qualifikationsziele": "Die Fähigkeit selbständig Probleme im Bereich des Design und der Entwicklung von \nKommunikationsnetzen und -anwendungen für Multimediasysteme zu lösen und zu \nevaluieren soll erworben werden. Erworbene Kompetenzen sind unter anderem: \n- Design komplexer Kommunikationsanwendungen und Protokolle \n- Implementierung und Testen von Software Komponenten für Verteilte Systeme \n- Anwendung von Objekt-Orientierten Analyse- und Design-Techniken \nModulhandbuch B. Sc./M. Sc. Informatik  768 \n- Erlernen von Projekt-Management Techniken für Entwicklung in kleinen Teams \n- Schreiben von Software-Dokumentation und Projekt-Berichten \n- Präsentation von Projektfortschritten und -ergebnissen",
    "Vorraussetzungen": "Empfohlen: Das Interesse sich mit herausfordernden Themen der aktuellen Technologien \nund der Forschung auseinanderzusetzen. Außerdem erwarten wir: \n- Solide Erfahrungen in der Programmierung mit Java und/oder C# (C/C++) \n- Solide Kenntnisse von Objekt-Orientierter Analyse und Design Techniken \n- Solide Kenntnisse in Computer Kommunikationsnetzen werden empfohlen \n- Die Vorlesungen in Kommunikationsnetze I (II, III, oder IV) sind von Vorteil",
    "Prüfungsform": "Studienleistung",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "MSc ETiT, MSc iCE, BSc/MSc iST, Wi-ETiT, BSc/MSc CS, Wi-CS,",
    "Literatur": "Die Literatur besteht aus einer Auswahl an Fachartikeln zu den einzelnen Themen. Als \nErgänzung wird die Lektüre ausgewählter Kapitel aus folgenden Büchern empfohlen: \n- Andrew Tanenbaum: \"Computer Networks\". Prentice Hall PTR (ISBN 0130384887) \n- Christian Ullenboom: \"Java ist auch eine Insel: Programmieren mit der Java Standard \nEdition Version 5 / 6\" (ISBN-13: 978-3898428385) \n- Joshua Bloch: \"Effective Java Programming Language Guide\" (ISBN-13: 978- 0201310054) \n- Erich Gamma, Richard Helm, Ralph E. Johnson: \"Design Patterns: Objects of Reusable \nObject Oriented Software\" (ISBN 0-201-63361-2) \n- Kent Beck: \"Extreme Programming Explained - Embrace Changes\" (ISBN-13: 978- \n0321278654)"
  },
  {
    "Modulname": "Projektpraktikum Multimedia Kommunikation II",
    "Modul Nr.": "18-sm-2130",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "180 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Semester",
    "Sprache": "Deutsch und Englisch",
    "Lerninhalt": "Der Kurs bearbeitet aktuelle Entwicklungsthemen aus dem Bereich der Multimedia \nKommunikationssysteme. Neben einem generellen Überblick wird ein tiefgehender Einblick \nin ein spezielles Entwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den \nspezifischen Arbeitsgebieten der Mitarbeiter und vermitteln technische und einleitende \nwissenschaftliche Kompetenzen in einem oder mehreren der folgenden Gebiete: \n- Netzwerk und Verkehrsplanung und Analyse \n- Leistungsbewertung von Netzwerk-Anwendungen \n- Diskrete Event-basierte Simulation von Netzdiensten \n- Protokolle für mobile Ad hoc Netze / Sensor Netze \n- Infrastruktur Netze zur Mobilkommunikation / Mesh-Netze \n- Kontext-abhängige/bezogene Kommunikation und Dienste \n- Peer-to-Peer Systeme und Architekturen \n- Verteil-/ und Managementsysteme für Multimedia-/e-Learning-Inhalte \n- Multimedia Authoring- und Re-Authoring Werkzeuge \n- Web Service Technologien und Service-orientierte Architekturen \n- Anwendungen für Verteilte Geschäftsprozesse \n- Ressourcen-basiertes Lernen",
    "Qualifikationsziele": "Die Fähigkeit selbständig technische und wissenschaftliche Probleme im Bereich des Design \nund der Entwicklung von Kommunikationsnetzen und -anwendungen für \nMultimediasysteme mit wissenschaftlichen Methoden zu lösen und zu evaluieren soll \nerworben werden. Erworbene Kompetenzen sind unter anderem: \n- Suchen und Lesen von Projekt relevanter Literatur \nModulhandbuch B. Sc./M. Sc. Informatik  770 \n- Design komplexer Kommunikationsanwendungen und Protokolle \n- Implementierung und Testen von Software Komponenten für Verteilte Systeme \n- Anwendung von Objekt-Orientierten Analyse- und Design-Techniken \n- Erlernen von Projekt-Management Techniken für Entwicklung in kleinen Teams \n- Systematische Evaluation und Analyse von wissenschaftlichen/technischen Experimenten \n- Schreiben von Software-Dokumentation und Projekt-Berichten \n- Präsentation von Projektfortschritten und -ergebnissen",
    "Vorraussetzungen": "Empfohlen: Das Interesse herausfordernde Lösungen und Anwendungen in aktuellen \nMultimedia Kommunikationssystemen zu entwickeln und unter Verwendung \nwissenschaftlicher Methoden zu erforschen.  \nAußerdem erwarten wir: \n- Solide Erfahrungen in der Programmierung mit Java und&#47;oder C# (C&#47;C++). \n- Solide Kenntnisse von Objekt-Orientierten Analyse- und Design-Techniken. \n- Grundkenntnisse in Design Patterns, Refactorings, und Projekt Management. \n- Solide Kenntnisse in Computer Kommunikationsnetzen werden empfohlen. \n- Die Vorlesungen „Kommunikationsnetze I“ und „Kommunikationsnetze II“ werden \nempfohlen.",
    "Prüfungsform": "Studienleistung",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "MSc Wi-ETiT, BSc/MSc CS, MSc Wi-CS, MSc ETiT, MSc iST",
    "Literatur": "Die Literatur besteht aus einer Auswahl an Fachartikeln zu den einzelnen Themen. Als \nErgänzung wird die Lektüre ausgewählter Kapitel aus folgenden Büchern empfohlen: \n- Andrew Tanenbaum: \"Computer Networks\". Prentice Hall PTR (ISBN 0130384887) \n- Raj Jain: \"The Art of Computer Systems Performance Analysis: Techniques for \nExperimental Design, Measurement, Simulation, and Modeling\" (ISBN 0-471-50336-3) \n- Joshua Bloch: \"Effective Java Programming Language Guide\" (ISBN-13: 978-0201310054) \nModulhandbuch B. Sc./M. Sc. Informatik  771 \n- Erich Gamma, Richard Helm, Ralph E. Johnson: \"Design Patterns: Objects of Reusable \nObject Oriented Software\" (ISBN 0-201-63361-2) \n- Martin Fowler: \"Refactorings - Improving the Design of Existing Code\" (ISBN-13: 978-\n0201485677) \n- Kent Beck: \"Extreme Programming Explained - Embrace Changes\" (ISBN-13: 978-\n0321278654)"
  },
  {
    "Modulname": "C/C++ Programmierpraktikum",
    "Modul Nr.": "18-su-1030",
    "Kreditpunkte": "3 CP",
    "Arbeitsaufwand": "90 h",
    "Selbststudium": "45 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "i.d.R. jedes Sommersemester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Die sechs Praktikumstage werden in zwei Abschnitte unterteilt. \nIn den ersten vier Tagen des Praktikums werden durch praktische Aufgaben und Vorträge \ndie Grundkonzepte der Programmiersprachen C und C++ vermittelt. Sämtliche Aspekte \nwerden durch ausgedehnte praktische Arbeiten unter Aufsicht am Rechner vertieft. \nAufbauend auf den grundlegenden Sprachkonstrukten werden manuelle \nSpeicherverwaltung und dynamische Datenstrukturen, sowohl unter prozeduralen als auch \nunter objektorientierten Aspekten, behandelt. Der objektorientierte Ansatz wird ausgedehnt \nbehandelt durch Mehrfachvererbung, Polymorphie und parametrische Poylmorphie. \nIn den letzten beiden Tagen des Praktikums geht es um die Programmierung eines \nMikrokontrollers in der Programmiersprache C inklusive der Programmierung einer \nverteilten Anwendung (via CAN-Bus) oder der Ansteuerung von Sensoren und Aktuatoren.",
    "Qualifikationsziele": "Die Studenten erwerben während des Praktikums Kenntnisse der grundlegenden \nSprachkonstrukte von C++ (einschließlich der Untermenge C). Dabei wird sowohl der \nprozedurale als auch der objektorientierte Charakter der Sprache betont sowie besonderer \nWert auf das Erlernen von Konzepten der hardwarenahe Programmierung gelegt. Es wird \nein Gespür für die Gefahren im Umgang mit der Sprache insbesondere bei der Entwicklung \neingebetteter Systemsoftware vermittelt und es werden geeignete Lösungen zu ihrer \nVermeidung verinnerlicht.",
    "Vorraussetzungen": "Empfohlen: Java-Kenntnisse",
    "Prüfungsform": "Studienleistung",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Modulhandbuch B. Sc./M. Sc. Informatik  773 \nBestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Standard",
    "Verwendbarkeit": "",
    "Literatur": "www.es.tu-darmstadt.de/lehre/cpp"
  },
  {
    "Modulname": "Projektseminar Softwaresysteme",
    "Modul Nr.": "18-su-1060",
    "Kreditpunkte": "9 CP",
    "Arbeitsaufwand": "270 h",
    "Selbststudium": "210 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes  Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": "Der Kurs bearbeitet aktuelle Entwicklungsthemen aus dem Bereich der modellbasierten bzw. \nobjekt-orientierten Softwareentwicklung. Neben einem generellen Überblick wird ein \ntiefgehender Einblick in ein spezielles Entwicklungsgebiet vermittelt. Die Themen bestimmen \nsich aus den spezifischen Arbeitsgebieten der Mitarbeiter und vermitteln technische und \neinleitende wissenschaftliche Kompetenzen in einem oder mehreren der folgenden Gebiete: \n Modellierung und Modellsynchronisierung \n Modelltransformation \n Objekt-orientierte Refaktorisierung \n Programmvariabilität (Software Product Lines) \n Analyse von Feature-Modellen \nZusätzliche Informationen und Themenbeschreibung für das aktuelle Semester: \n[url]http://www.es.tu-darmstadt.de/lehre/aktuelle-veranstaltungen/projektseminar-\nsoftwaresysteme/[/url]",
    "Qualifikationsziele": "Der Studierende soll praktische Erfahrung in der (Weiter-)Entwicklung eines komplexeren \nSoftwaresystems sammeln. Dabei lernt er in Teamarbeit eine umfangreiche Aufgabe zu \nbewältigen. Darüber hinaus wird geübt, in der Gruppe vorhandenes theoretisches Wissen (aus \nanderen Lehrveranstaltungen wie insbesondere Software-Engineering – Einführung) gezielt zur \nLösung der praktischen Aufgabe einzusetzen. \nStudenten, die an diesem Projektseminar erfolgreich teilgenommen haben, sind in der Lage zu \neiner vorgegebenen Problemstellung ein größeres Softwareprojekt eigenständig zu organisieren \nund auszuführen. Die Teilnehmer erwerben folgende Fähigkeiten im Detail: \nModulhandbuch B. Sc./M. Sc. Informatik  775 \n Realistische Zeitplanung und Resourceneinteilung (Projektmanagement) \n Umfangreicherer Einsatz von Werkzeugen zur Versions-, Konfiguration- und \nÄnderungsverwaltung \n Einsatz von „CASE-Tools“ für die modellbasierte Entwicklung \n Planung und Durchführung von Qualtitätssicherungsmaßnahmen",
    "Vorraussetzungen": "Verpflichtend: Grundlegende Softwaretechnik-Kenntnisse sowie vertiefte Kenntnisse \nobjektorientierter Programmiersprachen",
    "Prüfungsform": "Modulabschlussprüfung: \n  Modulprüfung (Studienleistung, fakultativ,  Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "",
    "Benotung": "Modulabschlussprüfung:  \n  Modulprüfung (Studienleistung, fakultativ, Gewichtung: 100%)",
    "Verwendbarkeit": "BSc ETiT, MSc ETiT, BSc iST",
    "Literatur": "Die Literatur besteht aus einer Auswahl an Fachartikeln zu den einzelnen Themen."
  },
  {
    "Modulname": "Projektseminar Autonomes Fahren I",
    "Modul Nr.": "18-su-2070",
    "Kreditpunkte": "6 CP",
    "Arbeitsaufwand": "180 h",
    "Selbststudium": "135 h",
    "Moduldauer": "1 Semester",
    "Angebotsturnus": "Jedes 2. Semester",
    "Sprache": "Deutsch",
    "Lerninhalt": " Praktische Programmiererfahrung mit C++ bei der Entwicklung eingebetteter \nSystemsoftware aus dem Bereich des autonomen Fahrens anhand eines Modellautos \n Anwenden von Regelungs- und Steuerungsmethoden aus dem Bereich des autonomen \nFahrens \n Einsatz von Software-Engineering-Techniken (Design, Dokumentation, Test, …) eines \nnicht trivialen eingebetteten Software-Systems mit harten Echtzeit-Anforderungen und \nbeschränkten Ressourcen (Speicher, …) \n Nutzung eines vorgegebenen Software-Rahmenwerks und Anwendung von weiteren \nBibliotheken inklusive eines modular aufgebauten (Echtzeit-)Betriebssystems \n Einsatz von Source-Code-Management-Systemen, Zeiterfassungswerkzeugen und \nsonstigen Projektmanagement-Tools \n Präsentation von Projektergebnissen im Rahmen von Vorträgen",
    "Qualifikationsziele": "Studierende sammeln im Rahmen dieses Projektseminars praktische Erfahrung in der Software-\nEntwicklung für eingebettete Systeme aus dem Bereich des autonomen Fahrens anhand eines \nModellautos. Dabei lernen sie in Teamarbeit eine umfangreiche Aufgabe zu bewältigen. Zur \nLösung dieser Aufgabe wird geübt, dass in der Gruppe vorhandene theoretische Wissen (aus \nanderen Lehrveranstaltungen wie Echtzeitsysteme, Software-Engineering - Einführung, C++ \nPraktikum, Digitale Regelungssysteme) gezielt zur Lösung der praktischen Aufgabe einzusetzen. \nStudierende, die an diesem Projektseminar erfolgreich teilgenommen haben, sind in der Lage, \nzu einer vorgegebenen Problemstellung ein größeres Softwareprojekt in einem \ninterdisziplinären Team eigenständig zu organisieren und auszuführen. Die Teilnehmer \nerwerben folgende Fähigkeiten im Detail: \nModulhandbuch B. Sc./M. Sc. Informatik  777 \n Eigenständiges Einarbeiten in ein vorgegebenes Rahmenwerk und vorgefertigten \nBibliotheken \n Umsetzung von theoretischem Wissen in ein Softwaresystem \n Umfangreicher Einsatz von Werkzeugen zur Versions-, Konfiguration- und \nÄnderungsverwaltung \n Realistische Zeitplanung und Ressourceneinteilung (Projektmanagement) \n Entwicklung von Hardware-/Software-Systemen mit C++ unter Berücksichtigung \nwichtiger Einschränkungen eingebetteter Systeme \n Planung und Durchführung umfangreicherer Qualitätssicherungsmaßnahmen \n Zusammenarbeit und Kommunikation in und zwischen mehreren Teams",
    "Vorraussetzungen": "Empfohlene Voraussetzungen sind: \n ETiT, WI-ETiT (DT), iST, Informatik: Grundlegende Softwaretechnik-Kenntnisse sowie \nvertiefte Kenntnisse objektorientierter Programmiersprachen (insbesondere: C++) \nZusätzlich erwünscht: \n Grundlagen der Entwicklung von Echtzeitsystemen oder der Bildverarbeitung \n ETiT, WI-ETiT (AUT), MEC: Grundlagen der Regelungstechnik, Reglerentwurf im \nZustandsraum, ggf. Grundlagen der digitalen Regelung",
    "Prüfungsform": "Modulabschlussprüfung: \n  Modulprüfung (Studienleistung, mündliche Prüfung, Dauer 30 Min, Standard)",
    "Voraussetzung für die Vergabe von Kreditpunkten": "",
    "Benotung": "Modulabschlussprüfung:  \n  Modulprüfung (Studienleistung, mündliche Prüfung, Gewichtung: 100%)",
    "Verwendbarkeit": "MSc ETiT, BSc iST",
    "Literatur": "https://www.es.tu-darmstadt.de/lehre/aktuelle-veranstaltungen/ps-af-i/ und Moodle"
  },
  {
    "Modulname": "Bachelorarbeit Informatik",
    "Modul Nr.": "20-AM-4000",
    "Kreditpunkte": "12 CP",
    "Arbeitsaufwand": "360 h",
    "Selbststudium": "360 h",
    "Moduldauer": "",
    "Angebotsturnus": "Jedes Semester",
    "Sprache": "Deutsch/Englisch",
    "Lerninhalt": "Selbständige Bearbeitung einer wissenschaftlichen Fragestellung der Informatik nach \nwissenschaftlichen Grundsätzen unter Anleitung in begrenzter Zeit. Die Problemstellung, \nVorgehensweise sowie die Ergebnisse werden schriftlich dokumentiert und mündlich in \neinem Kolloquium präsentiert.",
    "Qualifikationsziele": "/ Kompetenzen \nDie Studierenden sind nach der Bachelorarbeit in der Lage,  \n• eine wissenschaftliche Fragestellung nach wissenschaftlichen Grundsätzen selbstständig \nzu bearbeiten.  \n• die im Studium erworbenen Kenntnisse, Methoden und Kompetenzen anzuwenden.  \n• die relevante Literatur zu recherchieren, einzugrenzen und auszuwerten.  \n• das Thema sinnvoll zu systematisieren und einen Argumentationsstrang aufzubauen.  \n• die Validität von Pro- und Kontraargumenten nachvollziehbar abzuwägen.  \n• die Ergebnisse schriftlich nach wissenschaftlichen Grundsätzen niederzulegen.  \n• die Ergebnisse zu präsentieren und argumentativ zu vertreten.",
    "Vorraussetzungen": "",
    "Prüfungsform": "schriftliche Arbeit und ein mündliches Kolloquium",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Die schriftliche Arbeit geht mit 85% und das Kolloquium mit 15% in die Note für die \nBachelorarbeit ein.",
    "Verwendbarkeit": "B.Sc. Informatik",
    "Literatur": "- Balzert, Helmut; Schäfer, Christian; Schröder, Marion: Wissenschaftliches Arbeiten - \nWissenschaft, Quellen, Artefakte, Organisation, Präsentation. W3L-Verlag; Auflage: 2, 2011 \n- Sandberg, Berit: Wissenschaftlich Arbeiten von Abbildung bis Zitat: Lehr- und Übungsbuch \nfür Bachelor, Master und Promotion. De Gruyter Oldenbourg; Auflage: 2, 2013 \nModulhandbuch B. Sc./M. Sc. Informatik  780"
  },
  {
    "Modulname": "Masterarbeit Informatik",
    "Modul Nr.": "20-AM-5000",
    "Kreditpunkte": "30 CP",
    "Arbeitsaufwand": "900 h",
    "Selbststudium": "900 h",
    "Moduldauer": "",
    "Angebotsturnus": "Jedes Semester",
    "Sprache": "Deutsch/Englisch",
    "Lerninhalt": "Selbständige Bearbeitung einer wissenschaftlichen Fragestellung der Informatik nach \nwissenschaftlichen Grundsätzen in begrenzter Zeit. Die Problemstellung, Vorgehensweise \nsowie die Ergebnisse werden schriftlich dokumentiert und mündlich in einem Kolloquium \npräsentiert.",
    "Qualifikationsziele": "/ Kompetenzen \nDie Studierenden sind nach der Masterarbeit in der Lage,  \n• eine komplexere wissenschaftliche Fragestellung mit Forschungsbezug nach    \nwissenschaftlichen Grundsätzen selbstständig zu bearbeiten,  \n• die im Studium erworbenen Kenntnisse, Methoden und Kompetenzen zu verknüpfen und \nanzuwenden,  \n• die relevante Literatur zu recherchieren, einzugrenzen und auszuwerten, \n• das Thema sinnvoll zu systematisieren und einen Argumentationsstrang aufzubauen, \n• die Validität von Pro- und Kontraargumenten nachvollziehbar abzuwägen, \n• die Ergebnisse in die aktuelle Forschung einzuordnen und zu bewerten, \n• die Ergebnisse schriftlich nach wissenschaftlichen Grundsätzen niederzulegen, \n• die Ergebnisse zu präsentieren und argumentativ zu vertreten.",
    "Vorraussetzungen": "",
    "Prüfungsform": "schriftliche Arbeit und ein mündliches Kolloquium",
    "Voraussetzung für die Vergabe von Kreditpunkten": "Bestehen der Modulabschlussprüfung (100%)",
    "Benotung": "Die schriftliche Arbeit geht mit 85% und das Kolloquium mit 15% in die Note für die \nMasterarbeit ein.",
    "Verwendbarkeit": "M.Sc. Informatik",
    "Literatur": "- Balzert, Helmut; Schäfer, Christian; Schröder, Marion: Wissenschaftliches Arbeiten - \nWissenschaft, Quellen, Artefakte, Organisation, Präsentation. W3L-Verlag; Auflage: 2, 2011 \n- Sandberg, Berit: Wissenschaftlich Arbeiten von Abbildung bis Zitat: Lehr- und Übungsbuch \nfür Bachelor, Master und Promotion. De Gruyter Oldenbourg; Auflage: 2, 2013 \nModulhandbuch B. Sc./M. Sc. Informatik  782"
  }
]
